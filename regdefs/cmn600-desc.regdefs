GROUP por_sbsx_registers
R 0x0 64 RO - por_sbsx_node_info
RESET 0x7 0xffffffffffff
DESC Provides component identification information.
F 0 16 node_type
DESC CMN-600 node type identifier
F 16 16 node_id
DESC Component node ID
PAR NODEID_PARAM
F 32 16 logical_id
DESC Component logical ID
PAR LOGICALID_PARAM
R 0x80 64 RO - por_sbsx_child_info
RESET 0x0 0xffffffff
DESC Provides component child identification information.
F 0 16 child_count
DESC Number of child nodes; used in discovery process
F 16 16 child_ptr_offset
DESC Starting register offset which contains pointers to the child nodes
R 0x900 64 RO - por_sbsx_unit_info
RESET 0x84011 0x1fff11
DESC Provides component identification information for SBSX.
F 0 1 axdata_width
DESC Data width on ACE-Lite/AXI4 interface 1'b0: 128 bits 1'b1: 256 bits
PAR SBSX_AXDATA256_EN_PARAM
F 4 1 axdata_poison_en
DESC Data poison support on ACE-Lite/AXI4 interface 1'b0: Not supported 1'b1: Supported
PAR SBSX_AXDATAPOISON_EN_PARAM
F 8 8 num_outstanding_reads
DESC Maximum number of outstanding AXI read requests from SBSX
PAR SBSX_NUM_DART_PARAM
F 16 5 num_wr_data_buf
DESC Number of write data buffers in SBSX
PAR SBSX_NUM_WR_BUF_PARAM
R 0xa08 64 - S por_sbsx_aux_ctl
RESET 0x0 0x1
DESC Functions as the auxiliary control register for the SBSX bridge.
F 0 1 clkgate_disable
DESC Disables internal clock gating in SBSX bridge
R 0x2000 64 - - por_sbsx_pmu_event_sel
RESET 0x0 0x3f3f3f3f
DESC Specifies the PMU event to be counted.
F 0 6 pmu_event0_id
DESC SBSX PMU Event 0 select 6'h00: No event 6'h01: Read request 6'h02: Write request 6'h03: CMO request 6'h04: RETRYACK TXRSP flit sent 6'h05: TXDAT flit seen 6'h06: TXRSP flit seen 6'h11: Read request tracker occupancy count overflow 6'h12: Write request tracker occupancy count overflow 6'h13: CMO request tracker occupancy count overflow 6'h14: WDB occupancy count overflow 6'h15: Read AXI pending tracker occupancy count overflow 6'h16: CMO AXI pending tracker occupancy count overflow 6'h21: ARVALID set without ARREADY 6'h22: AWVALID set without AWREADY 6'h23: WVALID set without WREADY 6'h24: TXDAT stall (TXDAT valid but no link credit available) 6'h25: TXRSP stall (TXRSP valid but no link credit available) NOTE: All other encodings are reserved.
F 8 6 pmu_event1_id
DESC SBSX PMU Event 1 select; see pmu_event0_id for encodings
F 16 6 pmu_event2_id
DESC SBSX PMU Event 2 select; see pmu_event0_id for encodings
F 24 6 pmu_event3_id
DESC SBSX PMU Event 3 select; see pmu_event0_id for encodings
R 0x3000 64 RO S por_sbsx_errfr
RESET 0xa1 0x7cff
DESC Functions as the error feature register.
F 0 2 ED
DESC Error detection
F 2 2 DE
DESC Deferred errors
F 4 2 UI
DESC Uncorrected error interrupt
F 6 2 FI
DESC Fault handling interrupt
F 10 2 CFI
DESC Corrected error interrupt
F 12 3 CEC
DESC Standard corrected error count mechanism 3'b000: Does not implement standardized error counter model
R 0x3008 64 - S por_sbsx_errctlr
RESET 0x0 0x10f
DESC Functions as the error control register. Controls whether specific error-handling interrupts and error detection/deferment are enabled.
F 0 1 ED
DESC Enables error detection as specified in por_sbsx_errfr.ED
F 1 1 DE
DESC Enables error deferment as specified in por_sbsx_errfr.DE
F 2 1 UI
DESC Enables uncorrected error interrupt as specified in por_sbsx_errfr.UI
F 3 1 FI
DESC Enables fault handling interrupt for all detected deferred errors as specified in por_sbsx_errfr.FI
F 8 1 CFI
DESC Enables corrected error interrupt as specified in por_sbsx_errfr.CFI
R 0x3010 64 - S por_sbsx_errstatus
RESET 0x0 0xed800000
DESC Functions as the error status register. AV and MV bits must be cleared in the same cycle, otherwise the error record does not have a consistent view.
F 31 1 AV
DESC Address register valid; writes to this bit are ignored if any of the UE, DE, or CE bits are set to 1, and the highest priority are not cleared to 0 in the same write; write a 1 to clear 1'b1: Address is valid; por_sbsx_erraddr contains a physical address for that recorded error 1'b0: Address is not valid
F 30 1 V
DESC Register valid; writes to this bit are ignored if any of the UE, DE, or CE bits are set to 1, and are not cleared to 0 in the same write; write a 1 to clear 1'b1: At least one error recorded; register is valid 1'b0: No errors recorded
F 29 1 UE
DESC Uncorrected errors; writes to this bit are ignored if the OF bit is set to 1, and is not cleared to 0 in the same write; write a 1 to clear 1'b1: At least one error detected that is not corrected and is not deferred to a slave 1'b0: No uncorrected errors detected
F 27 1 OF
DESC Overflow; asserted when multiple errors of the highest priority type are detected; write a 1 to clear 1'b1: More than one error detected 1'b0: Only one error of the highest priority type detected as described by UE/DE/CE fields
F 26 1 MV
DESC por_sbsx_errmisc valid; writes to this bit are ignored if any of the UE, DE, or CE bits are set to 1, and the highest priority are not cleared to 0 in the same write; write a 1 to clear 1'b1: Miscellaneous registers are valid 1'b0: Miscellaneous registers are not valid
F 24 1 CE
DESC Corrected errors; writes to this bit are ignored if the OF bit is set to 1, and is not cleared to 0 in the same write; write a 1 to clear 1'b1: At least one transient corrected error recorded 1'b0: No corrected errors recorded
F 23 1 DE
DESC Deferred errors; writes to this bit are ignored if the OF bit is set to 1, and is not cleared to 0 in the same write; write a 1 to clear 1'b1: At least one error is not corrected and is deferred 1'b0: No errors deferred
R 0x3018 64 - S por_sbsx_erraddr
RESET 0x0 0x8000ffffffffffff
DESC Contains the error record address.
F 0 48 ADDR
DESC Transaction address
F 63 1 NS
DESC Security status of transaction 1'b1: Non-secure transaction 1'b0: Secure transaction CONSTRAINT: por_sbsx_erraddr.NS is redundant. Since it is writable, it cannot be used for logic qualification.
R 0x3020 64 - S por_sbsx_errmisc
RESET 0x0 0x7f017ff0
DESC Functions as the miscellaneous error register. Contains miscellaneous information about deferred/uncorrected errors.
F 4 11 SRCID
DESC Error source ID
F 16 1 OPTYPE
DESC Error opcode type 1'b1: WR_NO_SNP_PTL (partial) 1'b0: WR_NO_SNP_FULL
F 24 4 MEMATTR
DESC Error memory attributes
F 28 3 SIZE
DESC Error transaction size
R 0x3100 64 RO - por_sbsx_errfr_NS
RESET 0xa1 0x7cff
DESC Functions as the non-secure error feature register.
F 0 2 ED
DESC Error detection
F 2 2 DE
DESC Deferred errors
F 4 2 UI
DESC Uncorrected error interrupt
F 6 2 FI
DESC Fault handling interrupt
F 10 2 CFI
DESC Corrected error interrupt
F 12 3 CEC
DESC Standard corrected error count mechanism 3'b000: Does not implement standardized error counter model
R 0x3108 64 - - por_sbsx_errctlr_NS
RESET 0x0 0x10f
DESC Functions as the non-secure error control register. Controls whether specific error-handling interrupts and error detection/deferment are enabled.
F 0 1 ED
DESC Enables error detection as specified in por_sbsx_errfr_NS.ED
F 1 1 DE
DESC Enables error deferment as specified in por_sbsx_errfr_NS.DE
F 2 1 UI
DESC Enables uncorrected error interrupt as specified in por_sbsx_errfr_NS.UI
F 3 1 FI
DESC Enables fault handling interrupt for all detected deferred errors as specified in por_sbsx_errfr_NS.FI
F 8 1 CFI
DESC Enables corrected error interrupt as specified in por_sbsx_errfr_NS.CFI
R 0x3110 64 - - por_sbsx_errstatus_NS
RESET 0x0 0xed800000
DESC Functions as the non-secure error status register.
F 31 1 AV
DESC Address register valid; writes to this bit are ignored if any of the UE, DE, or CE bits are set to 1, and the highest priority are not cleared to 0 in the same write; write a 1 to clear 1'b1: Address is valid; por_sbsx_erraddr_NS contains a physical address for that recorded error 1'b0: Address is not valid
F 30 1 V
DESC Register valid; writes to this bit are ignored if any of the UE, DE, or CE bits are set to 1, and are not cleared to 0 in the same write; write a 1 to clear 1'b1: At least one error recorded; register is valid 1'b0: No errors recorded
F 29 1 UE
DESC Uncorrected errors; writes to this bit are ignored if the OF bit is set to 1, and is not cleared to 0 in the same write; write a 1 to clear 1'b1: At least one error detected that is not corrected and is not deferred to a slave 1'b0: No uncorrected errors detected
F 27 1 OF
DESC Overflow; asserted when multiple errors of the highest priority type are detected; write a 1 to clear 1'b1: More than one error detected 1'b0: Only one error of the highest priority type detected as described by UE/DE/CE fields
F 26 1 MV
DESC por_sbsx_errmisc_NS valid; writes to this bit are ignored if any of the UE, DE, or CE bits are set to 1, and the highest priority are not cleared to 0 in the same write; write a 1 to clear 1'b1: Miscellaneous registers are valid 1'b0: Miscellaneous registers are not valid
F 24 1 CE
DESC Corrected errors; writes to this bit are ignored if the OF bit is set to 1, and is not cleared to 0 in the same write; write a 1 to clear 1'b1: At least one transient corrected error recorded 1'b0: No corrected errors recorded
F 23 1 DE
DESC Deferred errors; writes to this bit are ignored if the OF bit is set to 1, and is not cleared to 0 in the same write; write a 1 to clear 1'b1: At least one error is not corrected and is deferred 1'b0: No errors deferred
R 0x3118 64 - - por_sbsx_erraddr_NS
RESET 0x0 0x8000ffffffffffff
DESC Contains the non-secure error record address.
F 0 48 ADDR
DESC Transaction address
F 63 1 NS
DESC Security status of transaction 1'b1: Non-secure transaction 1'b0: Secure transaction CONSTRAINT: por_sbsx_erraddr_NS.NS is redundant. Since it is writable, it cannot be used for logic qualification.
R 0x3120 64 - - por_sbsx_errmisc_NS
RESET 0x0 0x7f017ff0
DESC Functions as the non-secure miscellaneous error register. Contains miscellaneous information about deferred/uncorrected errors.
F 4 11 SRCID
DESC Error source ID
F 16 1 OPTYPE
DESC Error opcode type 1'b1: WR_NO_SNP_PTL (partial) 1'b0: WR_NO_SNP_FULL
F 24 4 MEMATTR
DESC Error memory attributes
F 28 3 SIZE
DESC Error transaction size
ENDGROUP
GROUP por_dt_registers
R 0x0 64 RO - por_dt_node_info
RESET 0x3 0xffffffffffff
DESC Provides component identification information.
F 0 16 node_type
DESC CMN-600 node type identifier
F 16 16 node_id
DESC Component CHI node ID
PAR NODEID_PARAM
F 32 16 logical_id
DESC Component logical ID
PAR LOGICALID_PARAM
R 0x80 64 RO - por_dt_child_info
RESET 0x0 0xffffffff
DESC Provides component child identification information.
F 0 16 child_count
DESC Number of child nodes; used in discovery process
F 16 16 child_ptr_offset
DESC Starting register offset which contains pointers to the child nodes
R 0x980 64 - S por_dt_secure_access
RESET 0x0 0x7
DESC Functions as the secure access control register.
F 0 1 secure_debug_disable
DESC Secure debug disable 1'b0: Secure events are monitored by the PMU 1'b1: Secure events are only monitored by the PMU if SPNIDEN is set to 1
F 1 1 dt_disable
DESC Debug disable 1'b0: DT function is not affected 1'b1: DT function is disabled.
F 2 1 pm_disable
DESC PMU disable 1'b0: PMU function is not affected 1'b1: PMU function is disabled.
R 0xa00 64 - - por_dt_dtc_ctl
RESET 0x0 0x7ff
DESC Functions as the debug trace control register.
F 0 1 dt_en
DESC Enables debug, trace, and PMU features
F 1 1 dbgtrigger_en
DESC DBGWATCHTRIG enable
F 2 1 atbtrigger_en
DESC ATB trigger enable
F 3 1 dt_wait_for_trigger
DESC Enables waiting for cross trigger before trace enable
F 4 6 cross_trigger_count
DESC Number of cross triggers received before trace enable NOTE: Only applicable if dt_wait_for_trigger is set to 1.
F 10 1 cg_disable
DESC Disables DT architectural clock gates
R 0xa10 64 RO - por_dt_trigger_status
RESET 0x0 0xf7ff01
DESC Provides the trigger status.
F 0 1 trigger_status
DESC Indicates DBGWATCHTRIGREQ assertion and/or ATB trigger
F 8 11 trigger_nodeid
DESC DBGWATCHTRIGREQ assertion and/or ATB trigger are caused by node ID
F 20 4 trigger_wp
DESC DBGWATCHTRIGREQ assertion and/or ATB trigger are caused by watchpoint
R 0xa20 64 WO - por_dt_trigger_status_clr
RESET 0x0 0x1
DESC Clears the trigger status.
F 0 1 trigger_status_clr
DESC Write a 1 to clear por_dt_trigger_status.trigger_status
R 0xa30 64 - - por_dt_trace_control
RESET 0x0 0x1ff
DESC Functions as the trace control register.
F 0 5 async_period
DESC Alignment sync packet insertion period 5'h00: Alignment sync disabled 5'h08: Alignment sync inserted after 256B of trace 5'h09: Alignment sync inserted after 512B of trace 5'h14: Alignment sync inserted after 1048576B of trace NOTE: All other values are reserved.
F 5 3 timestamp_period
DESC Time stamp packet insertion period 3'b000: Time stamp disabled 3'b011: Time stamp every 8K clock cycles 3'b100: Time stamp every 16K clock cycles 3'b101: Time stamp every 32K clock cycles 3'b110: Time stamp every 64K clock cycles
F 8 1 cc_enable
DESC Cycle count enable
R 0xa48 64 - - por_dt_traceid
RESET 0x0 0x7f
DESC Contains the ATB ID.
F 0 7 traceid
DESC ATB ID
R 0x2000 64 - - por_dt_pmevcntAB
RESET 0x0 0xffffffffffffffff
DESC Contains the PMU event counters A and B.
F 0 32 pmevcntA
DESC PMU counter A
F 32 32 pmevcntB
DESC PMU counter B
R 0x2010 64 - - por_dt_pmevcntCD
RESET 0x0 0xffffffffffffffff
DESC Contains the PMU event counters C and D.
F 0 32 pmevcntC
DESC PMU counter C
F 32 32 pmevcntD
DESC PMU counter D
R 0x2020 64 - - por_dt_pmevcntEF
RESET 0x0 0xffffffffffffffff
DESC Contains the PMU event counters E and F.
F 0 32 pmevcntE
DESC PMU counter E
F 32 32 pmevcntF
DESC PMU counter F
R 0x2030 64 - - por_dt_pmevcntGH
RESET 0x0 0xffffffffffffffff
DESC Contains the PMU event counters G and H.
F 0 32 pmevcntG
DESC PMU counter G
F 32 32 pmevcntH
DESC PMU counter H
R 0x2040 64 - - por_dt_pmccntr
RESET 0x0 0xffffffffff
DESC Contains the PMU cycle counter.
F 0 40 pmccntr
DESC PMU cycle counter
R 0x2050 64 - - por_dt_pmevcntsrAB
RESET 0x0 0xffffffffffffffff
DESC Contains the PMU event counter shadow registers A and B.
F 0 32 pmevcntsrA
DESC PMU counter A shadow register
F 32 32 pmevcntsrB
DESC PMU counter B shadow register
R 0x2060 64 - - por_dt_pmevcntsrCD
RESET 0x0 0xffffffffffffffff
DESC Contains the PMU event counter shadow registers C and D.
F 0 32 pmevcntsrC
DESC PMU counter C shadow register
F 32 32 pmevcntsrD
DESC PMU counter D shadow register
R 0x2070 64 - - por_dt_pmevcntsrEF
RESET 0x0 0xffffffffffffffff
DESC Contains the PMU event counter shadow registers E and F.
F 0 32 pmevcntsrE
DESC PMU counter E shadow register
F 32 32 pmevcntsrF
DESC PMU counter F shadow register
R 0x2080 64 - - por_dt_pmevcntsrGH
RESET 0x0 0xffffffffffffffff
DESC Contains the PMU event counter shadow registers G and H.
F 0 32 pmevcntsrG
DESC PMU counter G shadow register
F 32 32 pmevcntsrH
DESC PMU counter H shadow register
R 0x2090 64 - - por_dt_pmccntrsr
RESET 0x0 0xffffffffff
DESC Contains the PMU cycle counter shadow register.
F 0 40 pmccntrsr
DESC PMU cycle counter shadow register
R 0x2100 64 - - por_dt_pmcr
RESET 0x0 0x7f
DESC Functions as the PMU control register.
F 0 1 pmu_en
DESC Enables PMU features
F 1 4 cntcfg
DESC Groups adjacent 32-bit registers into a 64-bit register
F 5 1 cntr_rst
DESC Enables clearing of live counters upon assertion of por_dt_pmsrr.ss_req or PMUSNAPSHOTREQ
F 6 1 ovfl_intr_en
DESC Enables INTREQPMU assertion on PMU counter overflow
R 0x2118 64 RO - por_dt_pmovsr
RESET 0x0 0x1ff
DESC Provides the PMU overflow status.
F 0 9 pmovsr
DESC PMU overflow status Bit 8: Indicates overflow from cycle counter Bits [7:0]: Indicates overflow from counters 7 to 0
R 0x2120 64 WO - por_dt_pmovsr_clr
RESET 0x0 0x1ff
DESC Clears the PMU overflow status.
F 0 9 pmovsr_clr
DESC Write a 1 to clear the corresponding bit in por_dt_pmovsr.pmovsr
R 0x2128 64 RO - por_dt_pmssr
RESET 0x0 0x181ff
DESC Provides the PMU snapshot status.
F 0 9 ss_status
DESC PMU snapshot status Bit 8: Indicates snapshot status for cycle counter Bits [7:0]: Indicates snapshot status for counters 7 to 0
F 15 1 ss_cfg_active
DESC PMU snapshot activated from configuration write
F 16 1 ss_pin_active
DESC Activates PMU snapshot from PMUSNAPSHOTREQ
R 0x2130 64 WO - por_dt_pmsrr
RESET 0x0 0x1
DESC Sends PMU snapshot requests.
F 0 1 ss_req
DESC Write a 1 to request PMU snapshot
R 0x2da0 64 - - por_dt_claim
RESET 0xffffffff 0xffffffffffffffff
DESC Functions as the claim tag set register.
F 0 32 set
DESC Lower half of the claim tag value; allows individual bits to be set (write) and returns the number of bits that can be set (read)
F 32 32 clr
DESC Upper half of the claim tag value; enables individual bits to be cleared (write) and returns the current claim tag value (read)
R 0x2da8 64 RO - por_dt_devaff
RESET 0x0 0xffffffffffffffff
DESC Functions as the device affinity register.
F 0 64 devaff
DESC Device affinity register
R 0x2db0 64 RO - por_dt_lsr
RESET 0x0 0x700000000
DESC Functions as the lock status register.
F 32 3 lsrvalue
DESC Lock status value
R 0x2db8 64 RO - por_dt_authstatus_devarch
RESET 0x10000000000088 0xffffffff000000cc
DESC Functions as the authentication status register and the device architecture register.
F 2 2 nsnid
DESC Non-secure non-invasive debug
F 6 2 snid
DESC Secure non-invasive debug
F 32 15 archid
DESC Architecture ID
F 47 5 revision
DESC Architecture revision
F 52 1 present
DESC Present
F 53 11 architect
DESC Architect
R 0x2dc0 64 RO - por_dt_devid
RESET 0x0 0xffffffffffffffff
DESC Functions as the device configuration register.
F 0 64 dt_devid
DESC Device ID
R 0x2dc8 64 RO - por_dt_devtype
RESET 0x4300000000 0xff00000000
DESC Functions as the device type identifier register.
F 32 4 major
DESC Major type
F 36 4 sub
DESC Sub type
R 0x2dd0 64 RO - por_dt_pidr45
RESET 0x4 0xff000000ff
DESC Functions as the identification register for peripheral ID 4 and peripheral ID 5.
F 0 8 pidr4
DESC Peripheral ID 4
F 32 8 pidr5
DESC Peripheral ID 5
R 0x2dd8 64 RO - por_dt_pidr67
RESET 0x0 0xff000000ff
DESC Functions as the identification register for peripheral ID 6 and peripheral ID 7.
F 0 8 pidr6
DESC Peripheral ID 6
F 32 8 pidr7
DESC Peripheral ID 7
R 0x2de0 64 RO - por_dt_pidr01
RESET 0xb400000034 0xff000000ff
DESC Functions as the identification register for peripheral ID 0 and peripheral ID 1.
F 0 8 pidr0
DESC Peripheral ID 0
F 32 8 pidr1
DESC Peripheral ID 1
R 0x2de8 64 RO - por_dt_pidr23
RESET 0x7 0xff000000ff
DESC Functions as the identification register for peripheral ID 2 and peripheral ID 3.
F 0 8 pidr2
DESC Peripheral ID 2
F 32 8 pidr3
DESC Peripheral ID 3
R 0x2df0 64 RO - por_dt_cidr01
RESET 0x9f0000000d 0xff000000ff
DESC Functions as the identification register for component ID 0 and component ID 1.
F 0 8 cidr0
DESC Component ID 0
F 32 8 cidr1
DESC Component ID 1
R 0x2df8 64 RO - por_dt_cidr23
RESET 0xb100000005 0xff000000ff
DESC Functions as the identification register for component ID 2 and component ID 3.
F 0 8 cidr2
DESC Component ID 2
F 32 8 cidr3
DESC Component ID 3
ENDGROUP
GROUP por_cxla_registers
R 0x0 64 RO - por_cxla_node_info
RESET 0x102 0xffffffffffff
DESC Provides component identification information.
F 0 16 node_type
DESC CMN-600 node type identifier
F 16 16 node_id
DESC Component CHI node ID
PAR NODEID_PARAM
F 32 16 logical_id
DESC Component logical ID
PAR LOGICALID_PARAM
R 0x80 64 RO - por_cxla_child_info
RESET 0x0 0xffffffff
DESC Provides component child identification information.
F 0 16 child_count
DESC Number of child nodes; used in discovery process
F 16 16 child_ptr_offset
DESC Starting register offset which contains pointers to the child nodes
R 0x900 64 RO - por_cxla_unit_info
RESET 0x82209 0x3f771f
DESC Provides component identification information for CXLA.
F 0 1 db_present
DESC DB present in CXLA
PAR CXLA_DB_PRESENT_PARAM
F 1 4 db_lcrd_count
DESC Number of flit credits between CXG and CXLA
PAR CXLA_CXDB_LCRD_MAX_COUNT_PARAM
F 8 3 tlp_count_tx
DESC Maximum number of TLPs supported by TX TLP buffer
PAR CXLA_TLP_COUNT_TX_PARAM
F 12 3 tlp_count_rx
DESC Maximum number of TLPs supported by RX TLP buffer
PAR CXLA_TLP_COUNT_RX_PARAM
F 16 6 db_fifo_depth
DESC FIFO Depth in CXLA Domain Bridges - CXDB, PDB
PAR CXLA_DB_FIFO_DEPTH_PARAM
R 0x980 64 - S por_cxla_secure_register_groups_override
RESET 0x0 0x5
DESC Allows non-secure access to predefined groups of secure registers.
F 0 1 cfg_ctl
DESC Allows non-secure access to secure configuration control register
F 2 1 linkid_ctl
DESC Allows non-secure access to secure LA Link ID registers
R 0xa08 64 - S por_cxla_aux_ctl
RESET 0xa20000000180 0xf77777777781
DESC Functions as the auxiliary control register for CXLA.
F 0 1 cg_disable
DESC Disables CXLA architectural clock gates
F 7 1 tlp_timeout_en
DESC Enables TLP timeout based on thresholds set for each message type; doesn't apply for idle timeout; applies for message packing
F 8 3 idle_timeout_th
DESC Maximum number of idle cycles a TLP waits for a message to pack to complete/end the TLP; applies for message packing 3'b000: 4 cycles 3'b001: 8 cycles 3'b010: 16 cycles 3'b011: 32 cycles
F 12 3 rspdat_timeout_th
DESC Maximum number of cycles a RSPDAT message packed into a TLP waits to complete/end the TLP; applies for message packing 3'b000: same as idle_timeout_th 3'b001: 4 cycles 3'b010: 8 cycles 3'b011: 16 cycles 3'b100: 32 cycles
F 16 3 reqrsp_timeout_th
DESC Maximum number of cycles a REQRSP message packed into a TLP waits to complete/end the TLP; applies for message packing 3'b000: same as idle_timeout_th 3'b001: 4 cycles 3'b010: 8 cycles 3'b011: 16 cycles 3'b100: 32 cycles
F 20 3 snpdat_timeout_th
DESC Maximum number of cycles a SNPDAT message packed into a TLP waits to complete/end the TLP; applies for message packing 3'b000: same as idle_timeout_th 3'b001: 4 cycles 3'b010: 8 cycles 3'b011: 16 cycles 3'b100: 32 cycles
F 24 3 snprsp_timeout_th
DESC Maximum number of cycles a SNPRSP message packed into a TLP waits to complete/end the TLP; applies for message packing 3'b000: same as idle_timeout_th 3'b001: 4 cycles 3'b010: 8 cycles 3'b011: 16 cycles 3'b100: 32 cycles
F 28 3 reqdat_timeout_th
DESC Maximum number of cycles a REQDAT message packed into a TLP waits to complete/end the TLP; applies for message packing 3'b000: same as idle_timeout_th 3'b001: 4 cycles 3'b010: 8 cycles 3'b011: 16 cycles 3'b100: 32 cycles
F 32 3 snp_timeout_th
DESC Maximum number of cycles a SNP message packed into a TLP waits to complete/end the TLP; applies for message packing 3'b000: same as idle_timeout_th 3'b001: 4 cycles 3'b010: 8 cycles 3'b011: 16 cycles 3'b100: 32 cycles
F 36 3 misc_timeout_th
DESC Maximum number of cycles a MISC message packed into a TLP waits to complete/end the TLP; applies for message packing 3'b000: same as idle_timeout_th 3'b001: 4 cycles 3'b010: 8 cycles 3'b011: 16 cycles 3'b100: 32 cycles
F 40 3 crdgnt_crd_count_th
DESC Maximum number of credits that need to be accumulated to send a credit grant message 3'b000: 16 credits 3'b001: 32 credits 3'b010: 64 credits 3'b011: 128 credits
F 44 3 crdgnt_cycle_count_th
DESC Maximum number of cycles that need to be elapsed since the end of previous TLP to send a credit grant message 3'b000: 32 cycles 3'b001: 64 cycles 3'b010: 128 cycles 3'b011: 256 cycles
F 47 1 smp_mode_en
DESC When set, enables Symmetric Multiprocessor Mode (SMP) Mode.
PAR CXG_SMP_MODE_EN_PARAM
R 0xc00 64 RO S por_cxla_ccix_prop_capabilities
RESET 0x100 0x7ff
DESC Contains CCIX-supported properties.
F 0 1 nocompack
DESC No CompAck supported 1'b0: False 1'b1: True
PAR CXLA_CCIX_NOCOMPACK_PARAM
F 1 1 partialcachestates
DESC Partial cache states supported 1'b0: False 1'b1: True
PAR CXLA_CCIX_PTLCACHEST_PARAM
F 2 1 cachelinesize
DESC Cacheline size supported 1'b0: 64B 1'b1: 128B
PAR CXLA_CCIX_CACHELINESIZE_PARAM
F 3 3 addrwidth
DESC Address width supported 3'b000: 48b 3'b001: 52b 3'b010: 56b 3'b011: 60b 3'b100: 64b
PAR CXLA_CCIX_ADDRWIDTH_PARAM
F 6 1 pktheader
DESC Packet header supported 1'b0: PCIe compatible header 1'b1: Optimized header
PAR CXLA_CCIX_PKTHDR_PARAM
F 7 3 maxpacketsize
DESC Maximum packet size supported 3'b000: 128B 3'b001: 256B 3'b010: 512B
PAR CXLA_CCIX_MAXPKTSIZE_PARAM
F 10 1 nomessagepack
DESC No message packing only supported 1'b0: False 1'b1: True
PAR CXLA_CCIX_NOMSGPACK_PARAM
R 0xc08 64 - S por_cxla_ccix_prop_configured
RESET 0x400 0x7ff
DESC Contains CCIX-configured properties.
F 0 1 nocompack
DESC No CompAck configured 1'b0: False 1'b1: True
F 1 1 partialcachestates
DESC Partial cache states configured 1'b0: False 1'b1: True
F 2 1 cachelinesize
DESC CacheLine size configured 1'b0: 64B 1'b1: 128B
F 3 3 addrwidth
DESC Address width configured 3'b000: 48b 3'b001: 52b 3'b010: 56b 3'b011: 60b 3'b100: 64b
F 6 1 pktheader
DESC Packet header configured 1'b0: PCIe compatible header 1'b1: Optimized header
F 7 3 maxpacketsize
DESC Maximum packet size configured 3'b000: 128B 3'b001: 256B 3'b010: 512B
F 10 1 nomessagepack
DESC No message packing configured 1'b0: False 1'b1: True
R 0xc10 64 RO S por_cxla_tx_cxs_attr_capabilities
RESET 0x30 0x3ff
DESC Contains TX CXS supported attributes.
F 0 2 txcxsdataflitwidth
DESC TX CXS data flit width supported 2'b00: 256b 2'b01: 512b 2'b10: 1024b
PAR CXLA_CXS_DATA_WIDTH_TX_PARAM
F 2 2 txcxsmaxpktperflit
DESC TX CXS maximum packets per flit supported 2'b00: 2 2'b01: 3 2'b10: 4
PAR CXLA_CXS_MAX_PKT_PER_FLIT_TX_PARAM
F 4 1 txcxscontinuousdata
DESC TX CXS continuous data supported 1'b0: False 1'b1: True
PAR CXLA_CXS_CONTINUOUS_DATA_TX_PARAM
F 5 1 txcxserrorfullpkt
DESC TX CXS error full packet supported 1'b0: False 1'b1: True
PAR CXLA_CXS_ERROR_FULL_PKT_TX_PARAM
F 6 2 txcxsdatacheck
DESC TX CXS datacheck supported 2'b00: None 2'b01: Parity 2'b10: SECDED
PAR CXLA_CXS_DATACHECK_TX_PARAM
F 8 2 txcxscontrolreplication
DESC TX CXS control replication supported 2'b00: None 2'b01: Duplicate 2'b10: Triplicate
PAR CXLA_CXS_REPLICATION_TX_PARAM
R 0xc18 64 RO S por_cxla_rx_cxs_attr_capabilities
RESET 0x20 0x3ff
DESC Contains RX CXS supported attributes.
F 0 2 rxcxsdataflitwidth
DESC RX CXS data flit width supported 2'b00: 256b 2'b01: 512b 2'b10: 1024b
PAR CXLA_CXS_DATA_WIDTH_RX_PARAM
F 2 2 rxcxsmaxpktperflit
DESC RX CXS maximum packets per flit supported 2'b00: 2 2'b01: 3 2'b10: 4
PAR CXLA_CXS_MAX_PKT_PER_FLIT_RX_PARAM
F 4 1 rxcxscontinuousdata
DESC RX CXS continuous data supported 1'b0: False 1'b1: True
PAR CXLA_CXS_CONTINUOUS_DATA_RX_PARAM
F 5 1 rxcxserrorfullpkt
DESC RX CXS error full packet supported 1'b0: False 1'b1: True
PAR CXLA_CXS_ERROR_FULL_PKT_RX_PARAM
F 6 2 rxcxsdatacheck
DESC RX CXS datacheck supported 2'b00: None 2'b01: Parity 2'b10: SECDED
PAR CXLA_CXS_DATACHECK_RX_PARAM
F 8 2 rxcxscontrolreplication
DESC RX CXS control replication supported 2'b00: None 2'b01: Duplicate 2'b10: Triplicate
PAR CXLA_CXS_REPLICATION_RX_PARAM
R 0xc30 64 - S por_cxla_agentid_to_linkid_reg0
RESET 0x0 0x303030303030303
DESC Specifies the mapping of Agent ID to Link ID for Agent IDs 0 to 7.
F 0 2 agent0_linkid
DESC Specifies the Link ID for Agent ID 0
F 8 2 agent1_linkid
DESC Specifies the Link ID for Agent ID 1
F 16 2 agent2_linkid
DESC Specifies the Link ID for Agent ID 2
F 24 2 agent3_linkid
DESC Specifies the Link ID for Agent ID 3
F 32 2 agent4_linkid
DESC Specifies the Link ID for Agent ID 4
F 40 2 agent5_linkid
DESC Specifies the Link ID for Agent ID 5
F 48 2 agent6_linkid
DESC Specifies the Link ID for Agent ID 6
F 56 2 agent7_linkid
DESC Specifies the Link ID for Agent ID 7
R 0xc38 64 - S por_cxla_agentid_to_linkid_reg1
RESET 0x0 0x303030303030303
DESC Specifies the mapping of Agent ID to Link ID for Agent IDs 8 to 15.
F 0 2 agent8_linkid
DESC Specifies the Link ID for Agent ID 8
F 8 2 agent9_linkid
DESC Specifies the Link ID for Agent ID 9
F 16 2 agent10_linkid
DESC Specifies the Link ID for Agent ID 10
F 24 2 agent11_linkid
DESC Specifies the Link ID for Agent ID 11
F 32 2 agent12_linkid
DESC Specifies the Link ID for Agent ID 12
F 40 2 agent13_linkid
DESC Specifies the Link ID for Agent ID 13
F 48 2 agent14_linkid
DESC Specifies the Link ID for Agent ID 14
F 56 2 agent15_linkid
DESC Specifies the Link ID for Agent ID 15
R 0xc40 64 - S por_cxla_agentid_to_linkid_reg2
RESET 0x0 0x303030303030303
DESC Specifies the mapping of Agent ID to Link ID for Agent IDs 16 to 23.
F 0 2 agent16_linkid
DESC Specifies the Link ID for Agent ID 16
F 8 2 agent17_linkid
DESC Specifies the Link ID for Agent ID 17
F 16 2 agent18_linkid
DESC Specifies the Link ID for Agent ID 18
F 24 2 agent19_linkid
DESC Specifies the Link ID for Agent ID 19
F 32 2 agent20_linkid
DESC Specifies the Link ID for Agent ID 20
F 40 2 agent21_linkid
DESC Specifies the Link ID for Agent ID 21
F 48 2 agent22_linkid
DESC Specifies the Link ID for Agent ID 22
F 56 2 agent23_linkid
DESC Specifies the Link ID for Agent ID 23
R 0xc48 64 - S por_cxla_agentid_to_linkid_reg3
RESET 0x0 0x303030303030303
DESC Specifies the mapping of Agent ID to Link ID for Agent IDs 24 to 31.
F 0 2 agent24_linkid
DESC Specifies the Link ID for Agent ID 24
F 8 2 agent25_linkid
DESC Specifies the Link ID for Agent ID 25
F 16 2 agent26_linkid
DESC Specifies the Link ID for Agent ID 26
F 24 2 agent27_linkid
DESC Specifies the Link ID for Agent ID 27
F 32 2 agent28_linkid
DESC Specifies the Link ID for Agent ID 28
F 40 2 agent29_linkid
DESC Specifies the Link ID for Agent ID 29
F 48 2 agent30_linkid
DESC Specifies the Link ID for Agent ID 30
F 56 2 agent31_linkid
DESC Specifies the Link ID for Agent ID 31
R 0xc50 64 - S por_cxla_agentid_to_linkid_reg4
RESET 0x0 0x303030303030303
DESC Specifies the mapping of Agent ID to Link ID for Agent IDs 32 to 39.
F 0 2 agent32_linkid
DESC Specifies the Link ID for Agent ID 32
F 8 2 agent33_linkid
DESC Specifies the Link ID for Agent ID 33
F 16 2 agent34_linkid
DESC Specifies the Link ID for Agent ID 34
F 24 2 agent35_linkid
DESC Specifies the Link ID for Agent ID 35
F 32 2 agent36_linkid
DESC Specifies the Link ID for Agent ID 36
F 40 2 agent37_linkid
DESC Specifies the Link ID for Agent ID 37
F 48 2 agent38_linkid
DESC Specifies the Link ID for Agent ID 38
F 56 2 agent39_linkid
DESC Specifies the Link ID for Agent ID 39
R 0xc58 64 - S por_cxla_agentid_to_linkid_reg5
RESET 0x0 0x303030303030303
DESC Specifies the mapping of Agent ID to Link ID for Agent IDs 40 to 47.
F 0 2 agent40_linkid
DESC Specifies the Link ID for Agent ID 40
F 8 2 agent41_linkid
DESC Specifies the Link ID for Agent ID 41
F 16 2 agent42_linkid
DESC Specifies the Link ID for Agent ID 42
F 24 2 agent43_linkid
DESC Specifies the Link ID for Agent ID 43
F 32 2 agent44_linkid
DESC Specifies the Link ID for Agent ID 44
F 40 2 agent45_linkid
DESC Specifies the Link ID for Agent ID 45
F 48 2 agent46_linkid
DESC Specifies the Link ID for Agent ID 46
F 56 2 agent47_linkid
DESC Specifies the Link ID for Agent ID 47
R 0xc60 64 - S por_cxla_agentid_to_linkid_reg6
RESET 0x0 0x303030303030303
DESC Specifies the mapping of Agent ID to Link ID for Agent IDs 48 to 55.
F 0 2 agent48_linkid
DESC Specifies the Link ID for Agent ID 48
F 8 2 agent49_linkid
DESC Specifies the Link ID for Agent ID 49
F 16 2 agent50_linkid
DESC Specifies the Link ID for Agent ID 50
F 24 2 agent51_linkid
DESC Specifies the Link ID for Agent ID 51
F 32 2 agent52_linkid
DESC Specifies the Link ID for Agent ID 52
F 40 2 agent53_linkid
DESC Specifies the Link ID for Agent ID 53
F 48 2 agent54_linkid
DESC Specifies the Link ID for Agent ID 54
F 56 2 agent55_linkid
DESC Specifies the Link ID for Agent ID 55
R 0xc68 64 - S por_cxla_agentid_to_linkid_reg7
RESET 0x0 0x303030303030303
DESC Specifies the mapping of Agent ID to Link ID for Agent IDs 56 to 63.
F 0 2 agent56_linkid
DESC Specifies the Link ID for Agent ID 56
F 8 2 agent57_linkid
DESC Specifies the Link ID for Agent ID 57
F 16 2 agent58_linkid
DESC Specifies the Link ID for Agent ID 58
F 24 2 agent59_linkid
DESC Specifies the Link ID for Agent ID 59
F 32 2 agent60_linkid
DESC Specifies the Link ID for Agent ID 60
F 40 2 agent61_linkid
DESC Specifies the Link ID for Agent ID 61
F 48 2 agent62_linkid
DESC Specifies the Link ID for Agent ID 62
F 56 2 agent63_linkid
DESC Specifies the Link ID for Agent ID 63
R 0xc70 64 - S por_cxla_agentid_to_linkid_val
RESET 0x0 0xffffffffffffffff
DESC Specifies which Agent ID to Link ID mappings are valid.
F 0 64 valid
DESC Specifies whether the Link ID is valid; bit number corresponds to logical Agent ID number (from 0 to 63)
R 0xc78 64 - S por_cxla_linkid_to_pcie_bus_num
RESET 0x0 0xffffffffffff
DESC Specifies the mapping of CCIX Link ID to PCIe bus number.
F 0 8 link0_pcie_bus_num
DESC PCIe bus number for Link ID 0
F 8 3 link0_pcie_func_num
DESC PCIe Function number for Link ID 0
F 11 5 link0_pcie_dev_num
DESC PCIe Device number for Link ID 0
F 16 8 link1_pcie_bus_num
DESC PCIe bus number for Link ID 1
F 24 3 link1_pcie_func_num
DESC PCIe Function number for Link ID 1
F 27 5 link1_pcie_dev_num
DESC PCIe Device number for Link ID 1
F 32 8 link2_pcie_bus_num
DESC PCIe bus number for Link ID 2
F 40 3 link2_pcie_func_num
DESC PCIe Function number for Link ID 2
F 43 5 link2_pcie_dev_num
DESC PCIe Device number for Link ID 2
R 0xc80 64 - S por_cxla_tlp_hdr_fields
RESET 0x7f000072 0xffffff07ffff
DESC Configures PCIe header field values.
F 0 5 pkt_type
DESC Type
F 5 3 fmt
DESC Format
F 8 4 attr
DESC Attributes
F 12 3 tc
DESC Traffic class
F 15 2 at
DESC Address type
F 17 1 ep
DESC Error forwarding
F 18 1 td
DESC TLP digest
F 24 8 messagecode
DESC Message code
F 32 16 vendorid
DESC Vendor ID
R 0xd00 64 - - por_cxla_permsg_pyld_0_63
RESET 0x0 0xffffffffffffffff
DESC Contains bits[63:0] of CCIX Protocol Error (PER) Message payload.
F 0 64 per_msg_pyld_0_63
DESC Protocol Error Msg Payload[63:0]
R 0xd08 64 - - por_cxla_permsg_pyld_64_127
RESET 0x0 0xffffffffffffffff
DESC Contains bits[127:64] of CCIX Protocol Error (PER) Message payload.
F 0 64 per_msg_pyld_64_127
DESC Protocol Error Msg Payload[127:64]
R 0xd10 64 - - por_cxla_permsg_pyld_128_191
RESET 0x0 0xffffffffffffffff
DESC Contains bits[192:128] of CCIX Protocol Error (PER) Message payload.
F 0 64 per_msg_pyld_128_191
DESC Protocol Error Msg Payload[191:128]
R 0xd18 64 - - por_cxla_permsg_pyld_192_255
RESET 0x0 0xffffffffffffffff
DESC Contains bits[255:192] of CCIX Protocol Error (PER) Message payload.
F 0 64 per_msg_pyld_192_255
DESC Protocol Error Msg Payload[255:192]
R 0xd20 64 - - por_cxla_permsg_ctl
RESET 0x0 0x3f03
DESC Contains Control bits to trigger CCIX Protocol Error (PER) Message.
F 0 1 per_msg_vld_set
DESC When set, sends CCIX Protocol Error Msg. Must be cleared after the current error is processed and before a new error message is triggered
F 1 1 per_msg_srcid_ovrd
DESC When set, overrides the Source ID on Protocol Error Msg by value specified in this register. Or else the source ID from payload[55:48] is used.
F 8 6 per_msg_srcid
DESC Contains Source ID used on CCIX Protocol Error Msg. Used when per_msg_srcid_ovrd is set.
R 0xd28 64 - - por_cxla_err_agent_id
RESET 0x0 0x3f
DESC Contains Error Agent ID. Must be programmed by CCIX discovery s/w. Used as TargetID on CCIX Protocol Error (PER) Message.
F 0 6 ccix_err_agent_id
DESC CCIX Error AgentID
R 0x2000 64 - - por_cxla_pmu_event_sel
RESET 0x0 0x1f1f1f1f
DESC Specifies the PMU event to be counted.
F 0 5 pmu_event0_id
DESC CXLA PMU Event 0 ID 5'h00: No event 5'h01: RX TLP for Link 0 5'h02: RX TLP for Link 1 5'h03: RX TLP for Link 2 5'h04: TX TLP for Link 0 5'h05: TX TLP for Link 1 5'h06: TX TLP for Link 2 5'h07: RX CXS for Link 0 5'h08: RX CXS for Link 1 5'h09: RX CXS for Link 2 5'h0A: TX CXS for Link 0 5'h0B: TX CXS for Link 1 5'h0B: TX CXS for Link 2 5'h0D: Average RX TLP size in DWs 5'h0E: Average TX TLP size in DWs 5'h0F: Average RX TLP size in CCIX messages 5'h10: Average TX TLP size in CCIX messages 5'h11: Average size of RX CXS in DWs within a beat 5'h12: Average size of TX CXS in DWs within a beat 5'h13: TX CXS link credit backpressure 5'h14: RX TLP buffer full and backpressured 5'h15: TX TLP buffer full and backpressured 5'h16: Average latency to process an RX TLP 5'h17: Average latency to form a TX TLP
F 8 5 pmu_event1_id
DESC CXLA PMU Event 1 ID; see pmu_event0_id for encodings
F 16 5 pmu_event2_id
DESC CXLA PMU Event 2 ID; see pmu_event0_id for encodings
F 24 5 pmu_event3_id
DESC CXLA PMU Event 3 ID; see pmu_event0_id for encodings
R 0x2210 64 - - por_cxla_pmu_config
RESET 0x0 0x777701ff
DESC Configures the CXLA PMU.
F 0 1 pmu_en
DESC CXLA PMU enable NOTE: All other fields in this register are valid only if this bit is set.
F 1 1 pmevcnt01_combined
DESC Enables combination of PMU counters 0 and 1
F 2 1 pmevcnt23_combined
DESC Enables combination of PMU counters 2 and 3
F 3 1 pmevcntall_combined
DESC Enables combination of all PMU counters (0, 1, 2, 3) NOTE: When set, pmevcnt01_combined and pmevcnt23_combined have no effect.
F 4 4 pmevcnt_paired
DESC PMU local counter paired with global counter
F 8 1 cntr_rst
DESC Enables clearing of live counters upon assertion of snapshot
F 16 3 pmevcnt0_global_num
DESC Global counter to pair with PMU counter 0 3'b000: Global PMU event counter A 3'b001: Global PMU event counter B 3'b010: Global PMU event counter C 3'b011: Global PMU event counter D 3'b100: Global PMU event counter E 3'b101: Global PMU event counter F 3'b110: Global PMU event counter G 3'b111: Global PMU event counter H
F 20 3 pmevcnt1_global_num
DESC Global counter to pair with PMU counter 1; see pmevcnt0_global_num for encodings
F 24 3 pmevcnt2_global_num
DESC Global counter to pair with PMU counter 2; see pmevcnt0_global_num for encodings
F 28 3 pmevcnt3_global_num
DESC Global counter to pair with PMU counter 3; see pmevcnt0_global_num for encodings
R 0x2220 64 - - por_cxla_pmevcnt
RESET 0x0 0xffffffffffffffff
DESC Contains all PMU event counters (0, 1, 2, 3).
F 0 16 pmevcnt0
DESC PMU event counter 0
F 16 16 pmevcnt1
DESC PMU event counter 1
F 32 16 pmevcnt2
DESC PMU event counter 2
F 48 16 pmevcnt3
DESC PMU event counter 3
R 0x2240 64 - - por_cxla_pmevcntsr
RESET 0x0 0xffffffffffffffff
DESC Functions as the PMU event counter shadow register for all counters (0, 1, 2, 3).
F 0 16 pmevcntsr0
DESC PMU event counter 0 shadow register
F 16 16 pmevcntsr1
DESC PMU event counter 1 shadow register
F 32 16 pmevcntsr2
DESC PMU event counter 2 shadow register
F 48 16 pmevcntsr3
DESC PMU event counter 3 shadow register
ENDGROUP
GROUP por_rnd_registers
R 0x0 64 RO - por_rnd_node_info
RESET 0xd 0xffffffffffff
DESC Provides component identification information.
F 0 16 node_type
DESC CMN-600 node type identifier
F 16 16 node_id
DESC Component node ID
PAR NODEID_PARAM
F 32 16 logical_id
DESC Component logical ID
PAR LOGICALID_PARAM
R 0x80 64 RO - por_rnd_child_info
RESET 0x0 0xffffffff
DESC Provides component child identification information.
F 0 16 child_count
DESC Number of child nodes; used in discovery process
F 16 16 child_ptr_offset
DESC Starting register offset which contains pointers to the child nodes
R 0x900 64 RO - por_rnd_unit_info
RESET 0x81808020 0xff7ffffffff
DESC Provides component identification information for RN-D.
F 0 10 num_wr_reqs
DESC Number of outstanding write requests
PAR RNID_NUM_WR_REQ_PARAM
F 10 10 num_rd_reqs
DESC Number of outstanding read requests
PAR RNID_NUM_RD_REQ_PARAM
F 20 10 num_rd_bufs
DESC Number of read data buffers
PAR RNID_NUM_RD_BUF_PARAM
F 30 1 ax_data_256bit
DESC AXI interface data width 1'b1: 256 bits 1'b0: 128 bits
PAR RNID_AXDATA256_EN_PARAM
F 31 1 ax_datapoison_en
DESC Data Poison enable on ACE-Lite/AXI4 interface 1'b1: Enabled 1'b0: Not enabled
PAR RNID_AXDATAPOISON_EN_PARAM
F 32 1 force_rdb_prealloc
DESC Force read data buffer preallocation 1'b1: yes 1'b0: no
PAR RNID_FORCE_RDB_PREALLOC_PARAM
F 33 2 a4s_num
DESC Number of AXI4Stream interfaces present
PAR RNI_A4S_NUM_PARAM
F 36 8 a4s_logicalid_base
DESC AXI4Stream interfaces logical ID base
PAR RNI_A4S_LOGICALID_BASE_PARAM
R 0x980 64 - S por_rnd_secure_register_groups_override
RESET 0x0 0x7
DESC Allows non-secure access to predefined groups of secure registers.
F 0 1 cfg_ctl
DESC Allows non-secure access to secure configuration control register
F 1 1 port_ctrl
DESC Allows non-secure access to secure AXI port control registers
F 2 1 qos_ctrl
DESC Allows non-secure access to secure QoS control registers
R 0xa00 64 - S por_rnd_cfg_ctl
RESET 0x200201401 0x3ff3ff777f
DESC Functions as the configuration control register. Specifies the current mode.
F 0 1 qpc_en
DESC When set, enables QPC-based scheduling using two QoS priority classes (QoS15 and non-QoS15)
F 1 1 wfc
DESC When set, enables waiting for completion (COMP) before dispatching dependent transaction (TXN)
F 2 1 dis_wr_stream
DESC Disables streaming of ordered writes when set
F 3 1 force_prealloc_rdb
DESC When set, all reads from the RN-D are sent with a preallocated read data buffer
PAR RNID_FORCE_RDB_PREALLOC_PARAM
F 4 1 qpc15_entry_rsv_en
DESC Enables QPC15 entry reservation 1'b1: Reserves tracker entry for QoS15 requests 1'b0: Does not reserve tracker entry for QoS15 requests NOTE: Only valid and applicable when por_rnd_qpc_en is set
F 5 1 pcie_mstr_present
DESC Indicates PCIe master is present; must be set if PCIe master is present upstream of RN-I or RN-D
F 6 1 dis_ncwr_stream
DESC Disables streaming of ordered non-cacheable writes when set
F 8 3 rrt_crdgnt_weight
DESC Determines weight of credit grant allocated to retried reads in presence of pending retried writes
F 12 3 wrt_crdgnt_weight
DESC Determines weight of credit grant allocated to retried writes in presence of pending retried reads
F 16 10 max_rrt_outstd_chitxn_cnt
DESC Maximum number of outstanding reads allowed on CHI-side
PAR RNID_NUM_RD_REQ_PARAM
F 28 10 max_wrt_outstd_chitxn_cnt
DESC Maximum number of outstanding writes allowed on CHI-side
PAR RNID_NUM_WR_REQ_PARAM
R 0xa08 64 - S por_rnd_aux_ctl
RESET 0x12 0x3f
DESC Functions as the auxiliary control register for RN-D.
F 0 1 cg_disable
DESC Disables clock gating when set
F 1 1 ar_byp_en
DESC AR bypass enable; enables bypass path in the AR pipeline
F 2 1 park_port_arb_ptr
DESC Parks the AXI port arbitration pointer for Burst
F 3 1 dis_norm_rdstream
DESC Disables streaming of same ARID normal memory reads to different address
F 4 1 upstrm_datcheck_en
DESC Upstream supports Datacheck
PAR POR_DATACHECK_EN_PARAM
F 5 1 sameid_wrstash_stream_en
DESC Enables streaming of same-ID WrUniqStash
PAR POR_R2_ENABLE_PARAM
R 0xa10 64 - S por_rnd_s0_port_control
RESET 0x0 0x7ff
DESC Controls port S0 AXI/ACE slave interface settings.
F 0 11 s0_lpid_mask
DESC Port S0 LPID mask LPID[0]: Equal to the result of UnaryOR of BitwiseAND of LPID mask and AXID (LPID[0] = |(AXID & mask)); specifies which AXID bit is reflected in the LSB of LPID LPID[2:1]: Equal to port ID[1:0]; the MSB of LPID contains port ID
R 0xa18 64 - S por_rnd_s1_port_control
RESET 0x0 0x7ff
DESC Controls port S1 AXI/ACE slave interface settings.
F 0 11 s1_lpid_mask
DESC Port S1 LPID mask LPID[0]: Equal to the result of UnaryOR of BitwiseAND of LPID mask and AXID (LPID[0] = |(AXID & mask)); specifies which AXID bit is reflected in the LSB of LPID LPID[2:1]: Equal to port ID[1:0]; the MSB of LPID contains port ID
R 0xa20 64 - S por_rnd_s2_port_control
RESET 0x0 0x7ff
DESC Controls port S2 AXI/ACE slave interface settings.
F 0 11 s2_lpid_mask
DESC Port S2 LPID mask LPID[0]: Equal to the result of UnaryOR of BitwiseAND of LPID mask and AXID (LPID[0] = |(AXID & mask)); specifies which AXID bit is reflected in the LSB of LPID LPID[2:1]: Equal to port ID[1:0]; the MSB of LPID contains port ID
R 0xa80 64 - S por_rnd_s0_qos_control
RESET 0x0 0xff00ff
DESC Controls QoS settings for port S0 AXI/ACE slave interface.
F 0 1 s0_aw_lat_en
DESC Enables port S0 AW QoS regulation when set
F 1 1 s0_ar_lat_en
DESC Enables port S0 AR QoS regulation when set
F 2 1 s0_aw_qos_override_en
DESC Enables port S0 AW QoS override; when set, allows QoS value on inbound AW transactions to be overridden
F 3 1 s0_ar_qos_override_en
DESC Enables port S0 AR QoS override; when set, allows QoS value on inbound AR transactions to be overridden
F 4 1 s0_aw_reg_mode
DESC Configures the QoS regulator mode for write transactions 1'b0: Latency mode 1'b1: Period mode; used for bandwidth regulation
F 5 1 s0_ar_reg_mode
DESC Configures the QoS regulator mode for read transactions 1'b0: Latency mode 1'b1: Period mode; used for bandwidth regulation
F 6 1 s0_aw_pqv_mode
DESC Configures the QoS regulator mode for write transactions during period mode 1'b0: Normal mode; QoS value is stable when the master is idle 1'b1: Quiesce high mode; QoS value tends to the maximum value when the master is idle
F 7 1 s0_ar_pqv_mode
DESC Configures the QoS regulator mode for read transactions during period mode 1'b0: Normal mode; QoS value is stable when the master is idle 1'b1: Quiesce high mode; QoS value tends to the maximum value when the master is idle
F 16 4 s0_aw_qos_override
DESC AW QoS override value for port S0
F 20 4 s0_ar_qos_override
DESC AR QoS override value for port S0
R 0xa88 64 - S por_rnd_s0_qos_lat_tgt
RESET 0x0 0xfff0fff
DESC Controls QoS target latency (in cycles) for regulations of port S0 read and write transactions.
F 0 12 s0_aw_lat_tgt
DESC Port S0 AW channel target latency; a value of 0 corresponds to no regulation
F 16 12 s0_ar_lat_tgt
DESC Port S0 AR channel target latency; a value of 0 corresponds to no regulation
R 0xa90 64 - S por_rnd_s0_qos_lat_scale
RESET 0x0 0x707
DESC Controls the QoS target latency scale factor for port S0 read and write transactions. This register represents powers of two from the range 2^(-5) to 2^(-12); it is used to match a 16-bit integrator.
F 0 3 s0_aw_lat_scale
DESC Port S0 AW QoS scale factor 3'b000: 2^(-5) 3'b001: 2^(-6) 3'b010: 2^(-7) 3'b011: 2^(-8) 3'b100: 2^(-9) 3'b101: 2^(-10) 3'b110: 2^(-11) 3'b111: 2^(-12)
F 8 3 s0_ar_lat_scale
DESC Port S0 AR QoS scale factor 3'b000: 2^(-5) 3'b001: 2^(-6) 3'b010: 2^(-7) 3'b011: 2^(-8) 3'b100: 2^(-9) 3'b101: 2^(-10) 3'b110: 2^(-11) 3'b111: 2^(-12)
R 0xa98 64 - S por_rnd_s0_qos_lat_range
RESET 0x0 0xf0f0f0f
DESC Controls the minimum and maximum QoS values generated by the QoS latency regulator for port S0 read and write transactions.
F 0 4 s0_aw_lat_min_qos
DESC Port S0 AW QoS minimum value
F 8 4 s0_aw_lat_max_qos
DESC Port S0 AW QoS maximum value
F 16 4 s0_ar_lat_min_qos
DESC Port S0 AR QoS minimum value
F 24 4 s0_ar_lat_max_qos
DESC Port S0 AR QoS maximum value
R 0xaa0 64 - S por_rnd_s1_qos_control
RESET 0x0 0xff00ff
DESC Controls QoS settings for port S1 AXI/ACE slave interface.
F 0 1 s1_aw_lat_en
DESC Enables port S1 AW QoS regulation when set
F 1 1 s1_ar_lat_en
DESC Enables port S1 AR QoS regulation when set
F 2 1 s1_aw_qos_override_en
DESC Enables port S1 AW QoS override; when set, allows QoS value on inbound AW transactions to be overridden
F 3 1 s1_ar_qos_override_en
DESC Enables port S1 AR QoS override; when set, allows QoS value on inbound AR transactions to be overridden
F 4 1 s1_aw_reg_mode
DESC Configures the QoS regulator mode for write transactions 1'b0: Latency mode 1'b1: Period mode; used for bandwidth regulation
F 5 1 s1_ar_reg_mode
DESC Configures the QoS regulator mode for read transactions 1'b0: Latency mode 1'b1: Period mode; used for bandwidth regulation
F 6 1 s1_aw_pqv_mode
DESC Configures the QoS regulator mode for write transactions during period mode 1'b0: Normal mode; QoS value is stable when the master is idle 1'b1: Quiesce high mode; QoS value tends to the maximum value when the master is idle
F 7 1 s1_ar_pqv_mode
DESC Configures the QoS regulator mode for read transactions during period mode 1'b0: Normal mode; QoS value is stable when the master is idle 1'b1: Quiesce high mode; QoS value tends to the maximum value when the master is idle
F 16 4 s1_aw_qos_override
DESC AW QoS override value for port S1
F 20 4 s1_ar_qos_override
DESC AR QoS override value for port S1
R 0xaa8 64 - S por_rnd_s1_qos_lat_tgt
RESET 0x0 0xfff0fff
DESC Controls QoS target latency (in cycles) for regulation of port S1 read and write transactions.
F 0 12 s1_aw_lat_tgt
DESC Port S1 AW channel target latency; a value of 0 corresponds to no regulation
F 16 12 s1_ar_lat_tgt
DESC Port S1 AR channel target latency; a value of 0 corresponds to no regulation
R 0xab0 64 - S por_rnd_s1_qos_lat_scale
RESET 0x0 0x707
DESC Controls the QoS target latency scale factor for port S1 read and write transactions. This register represents powers of two from the range 2^(-5) to 2^(-12); it is used to match a 16-bit integrator.
F 0 3 s1_aw_lat_scale
DESC Port S1 AW QoS scale factor 3'b000: 2^(-5) 3'b001: 2^(-6) 3'b010: 2^(-7) 3'b011: 2^(-8) 3'b100: 2^(-9) 3'b101: 2^(-10) 3'b110: 2^(-11) 3'b111: 2^(-12)
F 8 3 s1_ar_lat_scale
DESC Port S1 AR QoS scale factor 3'b000: 2^(-5) 3'b001: 2^(-6) 3'b010: 2^(-7) 3'b011: 2^(-8) 3'b100: 2^(-9) 3'b101: 2^(-10) 3'b110: 2^(-11) 3'b111: 2^(-12)
R 0xab8 64 - S por_rnd_s1_qos_lat_range
RESET 0x0 0xf0f0f0f
DESC Controls the minimum and maximum QoS values generated by the QoS latency regulator for port S1 read and write transactions.
F 0 4 s1_aw_lat_min_qos
DESC Port S1 AW QoS minimum value
F 8 4 s1_aw_lat_max_qos
DESC Port S1 AW QoS maximum value
F 16 4 s1_ar_lat_min_qos
DESC Port S1 AR QoS minimum value
F 24 4 s1_ar_lat_max_qos
DESC Port S1 AR QoS maximum value
R 0xac0 64 - S por_rnd_s2_qos_control
RESET 0x0 0xff00ff
DESC Controls QoS settings for port S2 AXI/ACE slave interface.
F 0 1 s2_aw_lat_en
DESC Enables port S2 AW QoS regulation when set
F 1 1 s2_ar_lat_en
DESC Enables port S2 AR QoS regulation when set
F 2 1 s2_aw_qos_override_en
DESC Enables port S2 AW QoS override; when set, allows QoS value on inbound AW transactions to be overridden
F 3 1 s2_ar_qos_override_en
DESC Enables port S2 AR QoS override; when set, allows QoS value on inbound AR transactions to be overridden
F 4 1 s2_aw_reg_mode
DESC Configures the QoS regulator mode for write transactions 1'b0: Latency mode 1'b1: Period mode; used for bandwidth regulation
F 5 1 s2_ar_reg_mode
DESC Configures the QoS regulator mode for read transactions 1'b0: Latency mode 1'b1: Period mode; used for bandwidth regulation
F 6 1 s2_aw_pqv_mode
DESC Configures the QoS regulator mode for write transactions during period mode 1'b0: Normal mode; QoS value is stable when the master is idle 1'b1: Quiesce high mode; QoS value tends to the maximum value when the master is idle
F 7 1 s2_ar_pqv_mode
DESC Configures the QoS regulator mode for read transactions during period mode 1'b0: Normal mode; QoS value is stable when the master is idle 1'b1: Quiesce high mode; QoS value tends to the maximum value when the master is idle
F 16 4 s2_aw_qos_override
DESC AW QoS override value for port S2
F 20 4 s2_ar_qos_override
DESC AR QoS override value for port S2
R 0xac8 64 - S por_rnd_s2_qos_lat_tgt
RESET 0x0 0xfff0fff
DESC Controls QoS target latency (in cycles) for regulation of port S2 read and write transactions.
F 0 12 s2_aw_lat_tgt
DESC Port S2 AW channel target latency; a value of 0 corresponds to no regulation
F 16 12 s2_ar_lat_tgt
DESC Port S2 AR channel target latency; a value of 0 corresponds to no regulation
R 0xad0 64 - S por_rnd_s2_qos_lat_scale
RESET 0x0 0x707
DESC Controls the QoS target latency scale factor for port S2 read and write transactions. This register represents powers of two from the range 2^(-5) to 2^(-12); it is used to match a 16-bit integrator.
F 0 3 s2_aw_lat_scale
DESC Port S2 AW QoS scale factor 3'b000: 2^(-5) 3'b001: 2^(-6) 3'b010: 2^(-7) 3'b011: 2^(-8) 3'b100: 2^(-9) 3'b101: 2^(-10) 3'b110: 2^(-11) 3'b111: 2^(-12)
F 8 3 s2_ar_lat_scale
DESC Port S2 AR QoS scale factor 3'b000: 2^(-5) 3'b001: 2^(-6) 3'b010: 2^(-7) 3'b011: 2^(-8) 3'b100: 2^(-9) 3'b101: 2^(-10) 3'b110: 2^(-11) 3'b111: 2^(-12)
R 0xad8 64 - S por_rnd_s2_qos_lat_range
RESET 0x0 0xf0f0f0f
DESC Controls the minimum and maximum QoS values generated by the QoS latency regulator for port S2 read and write transactions.
F 0 4 s2_aw_lat_min_qos
DESC Port S2 AW QoS minimum value
F 8 4 s2_aw_lat_max_qos
DESC Port S2 AW QoS maximum value
F 16 4 s2_ar_lat_min_qos
DESC Port S2 AR QoS minimum value
F 24 4 s2_ar_lat_max_qos
DESC Port S2 AR QoS maximum value
R 0x1000 64 V S por_rnd_syscoreq_ctl
RESET 0x0 0x7
DESC Functions as the RN-D DVM domain control register. Provides a software alternative to hardware SYSCOREQ/SYSCOACK handshake. Works with por_rnd_syscoack_status.
F 0 1 s0_dvmdomain_req
DESC Controls DVM domain enable (SYSCOREQ) for port S0
F 1 1 s1_dvmdomain_req
DESC Controls DVM domain enable (SYSCOREQ) for port S1
F 2 1 s2_dvmdomain_req
DESC Controls DVM domain enable (SYSCOREQ) for port S2
R 0x1008 64 ROV S por_rnd_syscoack_status
RESET 0x0 0x7
DESC Functions as the RN-D DVM domain status register. Provides a software alternative to hardware SYSCOREQ/SYSCOACK handshake. Works with por_rnd_syscoreq_ctl.
F 0 1 s0_dvmdomain_ack
DESC Provides DVM domain status (SYSCOACK) for port S0
F 1 1 s1_dvmdomain_ack
DESC Provides DVM domain status (SYSCOACK) for port S1
F 2 1 s2_dvmdomain_ack
DESC Provides DVM domain status (SYSCOACK) for port S2
R 0x2000 64 - - por_rnd_pmu_event_sel
RESET 0x0 0x1f1f1f1f
DESC Specifies the PMU event to be counted.
F 0 5 pmu_event0_id
DESC RN-D PMU Event 0 ID 5'h00: No event 5'h01: Port S0 RDataBeats 5'h02: Port S1 RDataBeats 5'h03: Port S2 RDataBeats 5'h04: RXDAT flits received 5'h05: TXDAT flits sent 5'h06: Total TXREQ flits sent 5'h07: Retried TXREQ flits sent 5'h08: RRT occupancy count overflow 5'h09: WRT occupancy count overflow 5'h0A: Replayed TXREQ flits 5'h0B: WriteCancel sent 5'h0C: Port S0 WDataBeats 5'h0D: Port S1 WDataBeats 5'h0E: Port S2 WDataBeats 5'h0F: RRT allocation 5'h10: WRT allocation 5'h11: RDB pool state is all unordered 5'h12: RDB pool state is replay 5'h13: RDB pool state is hybrid 5'h14: RDB pool state is all ordered
F 8 5 pmu_event1_id
DESC RN-D PMU Event 1 ID; see pmu_event0_id for encodings
F 16 5 pmu_event2_id
DESC RN-D PMU Event 2 ID; see pmu_event0_id for encodings
F 24 5 pmu_event3_id
DESC RN-D PMU Event 3 ID; see pmu_event0_id for encodings
ENDGROUP
GROUP por_hnf_registers
R 0x0 64 RO - por_hnf_node_info
RESET 0x5 0xffffffffffff
DESC Provides component identification information.
F 0 16 node_type
DESC CMN-600 node type identifier
F 16 16 node_id
DESC Component node ID
PAR NODEID_PARAM
F 32 16 logical_id
DESC Component logical ID
PAR LOGICALID_PARAM
R 0x80 64 RO - por_hnf_child_info
RESET 0x0 0xffffffff
DESC Provides component child identification information.
F 0 16 child_count
DESC Number of child nodes; used in discovery process
F 16 16 child_ptr_offset
DESC Starting register offset which contains pointers to the child nodes
R 0x900 64 RO - por_hnf_unit_info
RESET 0x0 0x7f00000000
DESC Provides component identification information for HN-F.
F 0 3 slc_size
DESC SLC size 3'b000: No SLC 3'b001: 128KB 3'b010: 256KB 3'b011: 512KB 3'b100: 1MB 3'b101: 2MB 3'b110: 3MB 3'b111: 4MB
F 4 3 sf_size
DESC SF size 3'b000: 512KB 3'b001: 1MB 3'b010: 2MB 3'b011: 4MB 3'b100: 8MB
F 8 5 num_ways
DESC Number of cache ways in the SLC
F 16 3 tag_ram_lat
DESC SLC tag RAM latency (in cycles)
F 20 3 data_ram_latency
DESC SLC data RAM latency (in cycles)
F 24 8 num_excl
DESC Number of exclusive monitors
F 32 7 num_poc_entries
DESC Number of POCQ entries
PAR HNF_NUM_ENTRIES_POCQ_PARAM
R 0x980 64 - S por_hnf_secure_register_groups_override
RESET 0x0 0x3f
DESC Allows non-secure access to predefined groups of secure registers.
F 0 1 qos
DESC Allows non-secure access to secure QoS registers
F 1 1 cfg_ctl
DESC Allows non-secure access to secure configuration control register (por_hnf_cfg_ctl)
F 2 1 ppu
DESC Allows non-secure access to secure power policy registers
F 3 1 slc_lock_ways
DESC Allows non-secure access to secure cache way locking registers
F 4 1 sam_control
DESC Allows non-secure access to secure HN-F SAM control registers
F 5 1 slcsf_dbgrd
DESC Allows non-secure access to secure SLC/SF debug read registers
R 0xa00 64 - S por_hnf_cfg_ctl
RESET 0x0 0xf55
DESC Functions as the configuration control register for HN-F.
F 0 1 ecc_disable
DESC Disables SLC and SF ECC generation/detection when set
F 2 1 pois_dis
DESC Disables parity error data poison when set
F 4 1 slc_tag_ecc_scrub_disable
DESC Disables SLC tag single-bit ECC error scrubbing when set
F 6 1 sf_ecc_scrub_disable
DESC Disables SF tag single-bit ECC error scrubbing when set
F 8 1 ncdevcmo_mc_comp
DESC Disables HN-F completion when set NOTE: When set, HN-F sends completion for the following transactions received after completion from SN: 1. Non-cacheable WriteNoSnp 2. Device WriteNoSnp 3. CMO (cache maintenance operations) CONSTRAINT: When this bit is set, por_rni_cfg_ctl.dis_ncwr_stream and por_rnd_cfg_ctl.dis_ncwr_stream must also be set.
F 9 1 hnf_ocm_en
DESC Enables region locking with OCM support
F 10 1 hnf_ocm_allways_en
DESC Enables all SLC ways with OCM
F 11 1 hnf_dmt_disable
DESC Disables DMT when set
R 0xa08 64 - S por_hnf_aux_ctl
RESET 0x1c4c0000000002 0x19fff930001ffff
DESC Functions as the auxiliary control register for HN-F.
F 0 1 hnf_only_mode
DESC Enables HN-F only mode; disables SLC and SF when set
F 1 1 hnf_honor_ewa
DESC When set, postpones completion for writes where EWA=0 in the request until HN-F receives completion from MC or SBSX
F 2 1 no_wu_alloc
DESC Disables WriteUnique/WriteLineUnique allocations in SLC when set
F 3 1 rev_qos_pool_alloc
DESC Reverses QoS pool allocation algorithm
F 4 1 io_read_no_alloc
DESC When set, disables ReadOnce and ReadNoSnp allocation in SLC from RN-Is
F 5 1 non_sh_no_alloc
DESC Disables SLC allocation for non-shareable cacheable transactions when set
F 6 1 dis_snp_once
DESC When set, disables SnpOnce and converts to SnpShared
PAR HNF_DIS_SNP_ONCE_PARAM
F 7 1 hnf_stash_disable
DESC Disables HN-F stash support
PAR POR_CHIA_RNF_MODE_EN_PARAM
F 8 1 dis_likelysh
DESC Disables Likely Shared based allocations
F 9 1 dis_seqreq_coll
F 10 1 frz_mon_on_ovfl
DESC Freezes the exclusive monitors
F 11 1 slc_por_init_disable
DESC Disables SLC and SF initialization on Reset
F 12 1 cg_disable
DESC Disables HN-F architectural clock gates
F 13 1 sf_disable
DESC Disables SF
F 14 1 wlu_alloc_on_hit
DESC Forces WLU requests to allocate if the line hit in SLC
F 15 1 hnf_dct_disable
DESC Disables DCT when set
PAR POR_CHIA_RNF_MODE_EN_PARAM
F 16 1 hnf_poison_intr_en
DESC Enables reporting an interrupt by HN-F when poison is detected at SLC
PAR POR_CHIA_RNF_MODE_EN_PARAM
F 32 1 hnf_rd_excl_opt_en
DESC ReadNotSharedDirty exclusive optimization enable
F 33 1 hnf_excl_snp_fwd_en
DESC Snoop forwarding with exclusives enable
F 36 1 hnf_cu_excl_opt_en
DESC CleanUnique exclusive optimization enable
PAR POR_R2_ENABLE_PARAM
F 39 1 hnf_stash_datapull_disable
DESC Disables HN-F stash data pull support when set
F 40 1 hnf_sf_snp_vec_disable
DESC Disables SF snoop vector when set
F 41 1 hnf_slc_victim_qos_high
DESC SLC victim QoS behavior for SN write request 1'b0: Each victim inherits the QoS value of the request which caused it 1'b1: All victims use high QoS class (14)
F 42 1 hnf_slc_lru_victim_disable
DESC Disable enhanced LRU based victim selection for SLC 1'b0: SLC victim selection is based on eLRU. 1'b1: SLC victim selection is based on LFSR. NOTE: Victim selection for SF is always LFSR-based.
F 43 2 hnf_slc_lru_set_groups
DESC Number of sets in monitor group for enhance LRU 2'b00: 16 2'b01: 32 2'b10: 64 2'b11: 128 NOTE: Default is 32 sets per monitor group. If cache size is small (128KB or less), there would be only one set per group.
F 45 2 hnf_slc_lru_sel_cnt_value
DESC Selection counter value for eLRU to determine which group policy is more effective 2'b00: Sel counter is like an 8-bit range; upper limit is 255; middle point is 128 2'b01: Sel counter is like a 9-bit range; upper limit is 511; middle point is 256 2'b10: Sel counter is like a 10-bit range; upper limit is 1023; middle point is 512 2'b11: Sel counter is like an 11-bit range; upper limit is 2047; middle point is 1024 NOTE: Default is 10-bit with counter reset to a value of 512.
F 47 2 hnf_slc_lru_slcsrc_insert_value
DESC Insertion value if SLC source bit is set NOTE: Default is 2'b00.
F 49 2 hnf_slc_lru_staticmode_insert_value
DESC Insertion value for Static mode eLRU NOTE: Default is 2'b10.
F 51 2 hnf_slc_lru_dualmode_insert_value
DESC Insertion value for Dual mode eLRU NOTE: Default is 2'b11.
F 55 1 hnf_shared_intv_disable
DESC Disables snoop requests to CHIB RN-F with shared copy
PAR POR_CHIA_RNF_MODE_EN_PARAM
F 56 1 hnf_ord_stash_datapull_en
DESC Enables stash datapull for ordered write stash requests
PAR POR_R2_ENABLE_PARAM
R 0xa10 64 - S por_hnf_r2_aux_ctl
RESET 0x0 0x7
DESC Functions as the auxiliary control register for HN-F for CMN-600 R2 features.
F 0 1 hnf_chic_rdnosnpsep_dis
DESC Disables separation of Data and Comp in CHIC mode
F 1 1 hnf_pcmo_terminate_en
DESC Terminate PCMO in HNF when this bit is set to 1'b1
F 2 1 hnf_force_flush_ewa0_en
DESC Force SLC and SF flush to use EWA 0 for SN writes
R 0xa80 64 RO S por_hnf_qos_band
RESET 0xffecb870 0xffffffff
DESC Provides QoS classifications based on the QoS value ranges.
F 0 4 low_min_qos_val
DESC Minimum value for Low QoS class
F 4 4 low_max_qos_val
DESC Maximum value for Low QoS class
F 8 4 med_min_qos_val
DESC Minimum value for Medium QoS class
F 12 4 med_max_qos_val
DESC Maximum value for Medium QoS class
F 16 4 high_min_qos_val
DESC Minimum value for High QoS class
F 20 4 high_max_qos_val
DESC Maximum value for High QoS class
F 24 4 highhigh_min_qos_val
DESC Minimum value for HighHigh QoS class
F 28 4 highhigh_max_qos_val
DESC Maximum value for HighHigh QoS class
R 0xa88 64 - S por_hnf_qos_reservation
RESET 0x11f1e0f05 0x3f3f3f3f3f
DESC Controls POCQ maximum occupancy counts for each QoS class (HighHigh, High, Medium, and Low).
F 0 6 low_qos_max_cnt
DESC Maximum number of Low QoS class occupancy. CONSTRAINT: Minimum is 2 entries
PAR LOW_QOS_MAX_CNT_PARAM
F 8 6 med_qos_max_cnt
DESC Maximum number of Medium QoS class occupancy. CONSTRAINT: Minimum is 2 entries
PAR MED_QOS_MAX_CNT_PARAM
F 16 6 high_qos_max_cnt
DESC Maximum number of High QoS class occupancy. CONSTRAINT: Minimum is 2 entries
PAR HIGH_QOS_MAX_CNT_PARAM
F 24 6 highhigh_qos_max_cnt
DESC Maximum number of HighHigh QoS class occupancy. CONSTRAINT: Minimum is 2 entries
PAR HHIGH_QOS_MAX_CNT_PARAM
F 32 6 seq_qos_max_cnt
DESC Number of entries reserved for SF evictions in POCQ CONSTRAINT: Maximum number is 2 entries.
R 0xa90 64 - S por_hnf_rn_starvation
RESET 0x1f3f1f3f3f1f 0x1f3f1f7f3f1f
DESC Controls starvation counts for each QoS class. Determines static credit grantee selection.
F 0 5 rn_low_over_med_max_cnt
DESC Maximum number of consecutive instances where Medium QoS class wins priority over Low QoS class
F 8 6 rn_low_over_high_max_cnt
DESC Maximum number of consecutive instances where High QoS class wins priority over Low QoS class
F 16 7 rn_low_over_highhigh_max_cnt
DESC Maximum number of consecutive instances where HighHigh QoS class wins priority over Low QoS class
F 24 5 rn_med_over_high_max_cnt
DESC Maximum number of consecutive instances where High QoS class wins priority over Medium QoS class
F 32 6 rn_med_over_highhigh_max_cnt
DESC Maximum number of consecutive instances where HighHigh QoS class wins priority over Medium QoS class
F 40 5 rn_high_over_high_high_max_cnt
DESC Maximum number of consecutive instances where HighHigh QoS class wins priority over High QoS class
R 0xb80 64 WO S por_hnf_cfg_slcsf_dbgrd
RESET 0x0 0x37f1fff
DESC Controls access modes for SLC tasg, SLC data, and SF tag debug read.
F 0 13 slc_access_set
DESC Set address for SLC/SF debug read access
F 16 4 slc_access_way
DESC Way address for SLC/SF debug read access
F 20 3 slc_access_dw
DESC 64-bit chunk address for SLC data debug read access
F 24 2 slc_access_component
DESC Specifies SLC/SF array debug read 2'b01: SLC data read 2'b10: SLC tag read 2'b11: SF tag read
R 0xb88 64 RO S por_hnf_slc_cache_access_slc_tag
RESET 0x0 0xffffffffffff
DESC Contains SLC tag debug read data.
F 0 48 slc_cache_access_slc_tag
DESC SLC tag debug read data
R 0xb90 64 RO S por_hnf_slc_cache_access_slc_data
RESET 0x0 0xffffffffffffffff
DESC Contains SLC data RAM debug read data.
F 0 64 slc_cache_access_slc_data
DESC SLC data RAM debug read data
R 0xb98 64 RO S por_hnf_slc_cache_access_sf_tag
RESET 0x0 0xffffffffffffffff
DESC Contains SF tag debug read data. Bits[63:0]
F 0 64 slc_cache_access_sf_tag
DESC SF tag debug read data
R 0xba0 64 RO S por_hnf_slc_cache_access_sf_tag1
RESET 0x0 0xffffffffffffffff
DESC Contains SF tag debug read data bits [127:64], when present in SF Tag
F 0 64 slc_cache_access_sf_tag1
DESC SF tag debug read data
R 0xba8 64 RO S por_hnf_slc_cache_access_sf_tag2
RESET 0x0 0xffffffffffffffff
DESC Contains SF tag debug read data bits [128:191], when present in SF Tag
F 0 64 slc_cache_access_sf_tag2
DESC SF tag debug read data
R 0xc00 64 - S por_hnf_slc_lock_ways
RESET 0x800 0x7f0f
DESC Controls SLC way lock settings.
F 0 4 ways
DESC Number of SLC ways locked (1, 2, 4, 8, 12)
F 8 7 num_hnf
DESC Number of HN-Fs in NUMA (non-uniform memory access) region
PAR POR_NUM_HNF_PARAM
R 0xc08 64 - S por_hnf_slc_lock_base0
RESET 0x0 0x8000ffffffffffff
DESC Functions as the base register for lock region 0 [47:0].
F 0 48 base0
DESC Lock region 0 base address
F 63 1 base0_vld
DESC Lock region 0 base valid
R 0xc10 64 - S por_hnf_slc_lock_base1
RESET 0x0 0x8000ffffffffffff
DESC Functions as the base register for lock region 1 [47:0]. 
F 0 48 base1
DESC Lock region 1 base address
F 63 1 base1_vld
DESC Lock region 1 base valid
R 0xc18 64 - S por_hnf_slc_lock_base2
RESET 0x0 0x8000ffffffffffff
DESC Functions as the base register for lock region 2 [47:0]. 
F 0 48 base2
DESC Lock region 2 base address
F 63 1 base2_vld
DESC Lock region 2 base valid
R 0xc20 64 - S por_hnf_slc_lock_base3
RESET 0x0 0x8000ffffffffffff
DESC Functions as the base register for lock region 3 [47:0]. 
F 0 48 base3
DESC Lock region 3 base address
F 63 1 base3_vld
DESC Lock region 3 base valid
R 0xc28 64 - S por_hnf_rnf_region_vec1
RESET 0x0 0xffffffffffffffff
DESC Functions as the control register for RN-F source SLC way allocation for logical IDs 64 through 127.
F 0 64 rnf_region_vec1
DESC Bit vector mask; identifies which logical IDs of the RN-Fs to allocate to the locked region NOTE: Must be 64'b0 if range-based region locking or OCM is enabled.
R 0xc30 64 - S por_hnf_rni_region_vec
RESET 0x0 0xffffffff
DESC Functions as the control register for RN-I source SLC way allocation.
F 0 32 rni_region_vec
DESC Bit vector mask; identifies which logical IDs of the RN-Is to allocate to the locked region NOTE: Must be set to 32'b0 if range-based region locking or OCM is enabled.
R 0xc38 64 - S por_hnf_rnf_region_vec
RESET 0x0 0xffffffffffffffff
DESC Functions as the control register for RN-F source SLC way allocation.
F 0 64 rnf_region_vec
DESC Bit vector mask; identifies which logical IDs of the RN-Fs to allocate to the locked region NOTE: Must be 64'b0 if range-based region locking or OCM is enabled.
R 0xc40 64 - S por_hnf_rnd_region_vec
RESET 0x0 0xffffffff
DESC Functions as the control register for RN-D source SLC way allocation.
F 0 32 rnd_region_vec
DESC Bit vector mask; identifies which logical IDs of the RN-Ds to allocate to the locked region NOTE: Must be set to 32'b0 if range-based region locking or OCM is enabled.
R 0xc48 64 - S por_hnf_slcway_partition0_rnf_vec
RESET 0xffffffffffffffff 0xffffffffffffffff
DESC Functions as the control register for RN-Fs that can allocate to partition 0 (ways 0, 1, 2, and 3).
F 0 64 rnf_vec0
DESC Bit vector mask; identifies which logical IDs of the RN-F can allocate
R 0xc50 64 - S por_hnf_slcway_partition1_rnf_vec
RESET 0xffffffffffffffff 0xffffffffffffffff
DESC Functions as the control register for RN-Fs that can allocate to partition 1 (ways 4, 5, 6, and 7).
F 0 64 rnf_vec1
DESC Bit vector mask; identifies which logical IDs of the RN-F can allocate
R 0xc58 64 - S por_hnf_slcway_partition2_rnf_vec
RESET 0xffffffffffffffff 0xffffffffffffffff
DESC Functions as the control register for RN-Fs that can allocate to partition 2 (ways 8, 9, 10, and 11).
F 0 64 rnf_vec2
DESC Bit vector mask; identifies which logical IDs of the RN-F can allocate
R 0xc60 64 - S por_hnf_slcway_partition3_rnf_vec
RESET 0xffffffffffffffff 0xffffffffffffffff
DESC Functions as the control register for RN-Fs that can allocate to partition 3 (ways 12, 13, 14, and 15).
F 0 64 rnf_vec3
DESC Bit vector mask; identifies which logical IDs of the RN-F can allocate
R 0xc68 64 - S por_hnf_slcway_partition0_rni_vec
RESET 0xffffffff 0xffffffff
DESC Functions as the control register for RN-Is that can allocate to partition 0 (ways 0, 1, 2, and 3).
F 0 32 rni_vec0
DESC Bit vector mask; identifies which logical IDs of the RN-I/RN-D can allocate
R 0xc70 64 - S por_hnf_slcway_partition1_rni_vec
RESET 0xffffffff 0xffffffff
DESC Functions as the control register for RN-Is that can allocate to partition 1 (ways 4, 5, 6, and 7).
F 0 32 rni_vec1
DESC Bit vector mask; identifies which logical IDs of the RN-I/RN-D can allocate
R 0xc78 64 - S por_hnf_slcway_partition2_rni_vec
RESET 0xffffffff 0xffffffff
DESC Functions as the control register for RN-Is that can allocate to partition 2 (ways 8, 9, 10, and 11).
F 0 32 rni_vec2
DESC Bit vector mask; identifies which logical IDs of the RN-I/RN-D can allocate
R 0xc80 64 - S por_hnf_slcway_partition3_rni_vec
RESET 0xffffffff 0xffffffff
DESC Functions as the control register for RN-Is that can allocate to partition 3 (ways 12, 13, 14, and 15).
F 0 32 rni_vec3
DESC Bit vector mask; identifies which logical IDs of the RN-I/RN-D can allocate
R 0xc88 64 - S por_hnf_slcway_partition0_rnd_vec
RESET 0xffffffff 0xffffffff
DESC Functions as the control register for RN-Ds that can allocate to partition 0 (ways 0, 1, 2, and 3).
F 0 32 rnd_vec0
DESC Bit vector mask; identifies which logical IDs of the RN-I/RN-D can allocate
R 0xc90 64 - S por_hnf_slcway_partition1_rnd_vec
RESET 0xffffffff 0xffffffff
DESC Functions as the control register for RN-Ds that can allocate to partition 1 (ways 4, 5, 6, and 7).
F 0 32 rnd_vec1
DESC Bit vector mask; identifies which logical IDs of the RN-I/RN-D can allocate
R 0xc98 64 - S por_hnf_slcway_partition2_rnd_vec
RESET 0xffffffff 0xffffffff
DESC Functions as the control register for RN-Ds that can allocate to partition 2 (ways 8, 9, 10, and 11).
F 0 32 rnd_vec2
DESC Bit vector mask; identifies which logical IDs of the RN-I/RN-D can allocate
R 0xca0 64 - S por_hnf_slcway_partition3_rnd_vec
RESET 0xffffffff 0xffffffff
DESC Functions as the control register for RN-Ds that can allocate to partition 3 (ways 12, 13, 14, and 15).
F 0 32 rnd_vec3
DESC Bit vector mask; identifies which logical IDs of the RN-I/RN-D can allocate
R 0xca8 64 - S por_hnf_rn_region_lock
RESET 0x0 0x3
DESC Functions as the enable register for source-based SLC way allocation.
F 0 1 rn_region_lock_en
DESC Enables SRC-based region locking 1'b0: SRC based way locking is disabled 1'b1: SRC based way locking is enabled
F 1 1 rn_pick_locked_ways_only
DESC Specifies which ways the programmed RNs can allocate new cache lines to 1'b0: Programmed RN will choose all ways including locked 1'b1: Programmed RN will only allocate in locked ways
R 0xcb0 64 - S por_hnf_slcway_partition0_rnf_vec1
RESET 0xffffffffffffffff 0xffffffffffffffff
DESC Functions as the control register for RN-Fs that can allocate to partition 0 (ways 0, 1, 2, and 3).
F 0 64 rnf_vec4
DESC Bit vector mask; identifies which logical IDs of the RN-F can allocate
R 0xcb8 64 - S por_hnf_slcway_partition1_rnf_vec1
RESET 0xffffffffffffffff 0xffffffffffffffff
DESC Functions as the control register for RN-Fs that can allocate to partition 1 (ways 4, 5, 6, and 7) for Logical RNF IDs 64 to 127.
F 0 64 rnf_vec5
DESC Bit vector mask; identifies which logical IDs of the RN-F can allocate
R 0xcc0 64 - S por_hnf_slcway_partition2_rnf_vec1
RESET 0xffffffffffffffff 0xffffffffffffffff
DESC Functions as the control register for RN-Fs that can allocate to partition 2 (ways 8, 9, 10, and 11) for Logical RNF IDs 64 to 127.
F 0 64 rnf_vec6
DESC Bit vector mask; identifies which logical IDs of the RN-F can allocate
R 0xcc8 64 - S por_hnf_slcway_partition3_rnf_vec1
RESET 0xffffffffffffffff 0xffffffffffffffff
DESC Functions as the control register for RN-Fs that can allocate to partition 3 (ways 12, 13, 14, and 15) for Logical RNF IDs 64 to 127.
F 0 64 rnf_vec7
DESC Bit vector mask; identifies which logical IDs of the RN-F can allocate
R 0xd00 64 - S por_hnf_sam_control
RESET 0x0 0xbf3f3f37ff7ff7ff
DESC Configures HN-F SAM. All top_address_bit fields must be between bits 47 and 28 of the address. top_address_bit2 > top_address_bit1 > top_address_bit0. Must be configured to match corresponding por_rnsam_sys_cache_grp_sn_sam_cfgN register in the RN SAM.
F 0 11 hn_cfg_sn0_nodeid
DESC SN 0 node ID
F 12 11 hn_cfg_sn1_nodeid
DESC SN 1 node ID
F 24 11 hn_cfg_sn2_nodeid
DESC SN 2 node ID
F 36 1 hn_cfg_three_sn_en
DESC Enables 3-SN configuration
F 37 1 hn_cfg_six_sn_en
DESC Enables 6-SN configuration
F 40 6 hn_cfg_sam_top_address_bit0
DESC Bit position of top_address_bit0; used for address hashing in 3-SN/6-SN configuration
F 48 6 hn_cfg_sam_top_address_bit1
DESC Bit position of top_address_bit1; used for address hashing in 3-SN/6-SN configuration
F 56 6 hn_cfg_sam_top_address_bit2
DESC Bit position of top_address_bit2; used for address hashing in 6-SN configuration
F 63 1 hn_cfg_sam_inv_top_address_bit
DESC Inverts the top address bit (hn_cfg_sam_top_address_bit1 if 3-SN, hn_cfg_sam_top_address_bit2 if 6-SN) NOTE: Can only be used when the address map does not have unique address bit combinations.
R 0xd08 64 - S por_hnf_sam_memregion0
RESET 0x0 0x8000fffffc01f7ff
DESC Configures range-based memory region 0 in HN-F SAM.
F 63 1 valid
DESC Memory region 0 valid 1'b0: Not valid 1'b1: Valid for memory region comparison
F 26 22 base_addr
DESC Base address of memory region 0 CONSTRAINT: Must be an integer multiple of region size.
F 12 5 size
DESC Memory region 0 size CONSTRAINT: Memory region must be a power of two, from minimum size supported to maximum memory size (2^address width).
F 0 11 range0_nodeid
DESC Memory region 0 target node ID
R 0xd10 64 - S por_hnf_sam_memregion1
RESET 0x0 0x8000fffffc01f7ff
DESC Configures range-based memory region 1 in HN-F SAM.
F 63 1 valid
DESC Memory region 1 valid 1'b0: Not valid 1'b1: Valid for memory region comparison
F 26 22 base_addr
DESC Base address of memory region 1 CONSTRAINT: Must be an integer multiple of region size.
F 12 5 size
DESC Memory region 1 size CONSTRAINT: Memory region must be a power of two, from minimum size supported to maximum memory size (2^address width).
F 0 11 range1_nodeid
DESC Memory region 1 target node ID
R 0xd18 64 - S por_hnf_sam_sn_properties
RESET 0x0 0x1c71c71c71c7
DESC Configures properties for all six SN targets and two range-based SN targets.
F 44 1 range1_sn_pcmo_prop_dis
DESC Disables PCMO (persistent CMO) propagation for range 1 SN when set
F 43 1 range1_sn_cmo_prop_en
DESC Enables CMO propagation for range 1 SN
F 42 1 range1_sn_128b
DESC Data width of range 1 SN 1'b1: 128 bits 1'b0: 256 bits
F 38 1 range0_sn_pcmo_prop_dis
DESC Disables PCMO (persistent CMO) propagation for range 0 SN when set
F 37 1 range0_sn_cmo_prop_en
DESC Enables CMO propagation for range 0 SN
F 36 1 range0_sn_128b
DESC Data width of range 0 SN 1'b1: 128 bits 1'b0: 256 bits
F 32 1 sn5_pcmo_prop_dis
DESC Disables PCMO propagation for SN 5 when set
F 31 1 sn5_cmo_prop_en
DESC Enables CMO propagation for SN 5 when set
F 30 1 sn5_128b
DESC Data width of SN 5 1'b1: 128 bits 1'b0: 256 bits
F 26 1 sn4_pcmo_prop_dis
DESC Disables PCMO propagation for SN 4 when set
F 25 1 sn4_cmo_prop_en
DESC Enables CMO propagation for SN 4 when set
F 24 1 sn4_128b
DESC Data width of SN 4 1'b1: 128 bits 1'b0: 256 bits
F 20 1 sn3_pcmo_prop_dis
DESC Disables PCMO propagation for SN 3 when set
F 19 1 sn3_cmo_prop_en
DESC Enables CMO propagation for SN 3 when set
F 18 1 sn3_128b
DESC Data width of SN 3 1'b1: 128 bits 1'b0: 256 bits
F 14 1 sn2_pcmo_prop_dis
DESC Disables PCMO propagation for SN 2 when set
F 13 1 sn2_cmo_prop_en
DESC Enables CMO propagation for SN 2 when set
F 12 1 sn2_128b
DESC Data width of SN 2 1'b1: 128 bits 1'b0: 256 bits
F 8 1 sn1_pcmo_prop_dis
DESC Disables PCMO propagation for SN 1 when set
F 7 1 sn1_cmo_prop_en
DESC Enables CMO propagation for SN 1 when set
F 6 1 sn1_128b
DESC Data width of SN 1 1'b1: 128 bits 1'b0: 256 bits
F 2 1 sn0_pcmo_prop_dis
DESC Disables PCMO propagation for SN 0 when set
F 1 1 sn0_cmo_prop_en
DESC Enables CMO propagation for SN 0 when set
F 0 1 sn0_128b
DESC Data width of SN 0 1'b1: 128 bits 1'b0: 256 bits
R 0xd20 64 - S por_hnf_sam_6sn_nodeid
RESET 0x0 0x7ff7ff7ff
DESC Configures node IDs for slave nodes 3 to 5 in 6-SN configuration mode.
F 0 11 hn_cfg_sn3_nodeid
DESC SN 3 node ID
F 12 11 hn_cfg_sn4_nodeid
DESC SN 4 node ID
F 24 11 hn_cfg_sn5_nodeid
DESC SN 5 node ID
R 0xd28 64 - S por_hnf_rn_phys_id0
RESET 0x0 0xc00707ffc00707ff
DESC Configures node IDs for RNs in the system corresponding to each RN ID.
F 0 11 nodeid_ra0
DESC Specifies the node ID
F 16 1 remote_ra0
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 17 2 cpa_grp_ra0
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 30 1 cpa_en_ra0
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 31 1 valid_ra0
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
F 32 11 nodeid_ra1
DESC Specifies the node ID
F 48 1 remote_ra1
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 49 2 cpa_grp_ra1
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 62 1 cpa_en_ra1
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 63 1 valid_ra1
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
R 0xd30 64 - S por_hnf_rn_phys_id1
RESET 0x0 0xc00707ffc00707ff
DESC Configures node IDs for RNs in the system corresponding to each RN ID.
F 0 11 nodeid_ra2
DESC Specifies the node ID
F 16 1 remote_ra2
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 17 2 cpa_grp_ra2
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 30 1 cpa_en_ra2
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 31 1 valid_ra2
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
F 32 11 nodeid_ra3
DESC Specifies the node ID
F 48 1 remote_ra3
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 49 2 cpa_grp_ra3
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 62 1 cpa_en_ra3
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 63 1 valid_ra3
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
R 0xd38 64 - S por_hnf_rn_phys_id2
RESET 0x0 0xc00707ffc00707ff
DESC Configures node IDs for RNs in the system corresponding to each RN ID.
F 0 11 nodeid_ra4
DESC Specifies the node ID
F 16 1 remote_ra4
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 17 2 cpa_grp_ra4
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 30 1 cpa_en_ra4
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 31 1 valid_ra4
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
F 32 11 nodeid_ra5
DESC Specifies the node ID
F 48 1 remote_ra5
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 49 2 cpa_grp_ra5
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 62 1 cpa_en_ra5
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 63 1 valid_ra5
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
R 0xd40 64 - S por_hnf_rn_phys_id3
RESET 0x0 0xc00707ffc00707ff
DESC Configures node IDs for RNs in the system corresponding to each RN ID.
F 0 11 nodeid_ra6
DESC Specifies the node ID
F 16 1 remote_ra6
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 17 2 cpa_grp_ra6
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 30 1 cpa_en_ra6
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 31 1 valid_ra6
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
F 32 11 nodeid_ra7
DESC Specifies the node ID
F 48 1 remote_ra7
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 49 2 cpa_grp_ra7
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 62 1 cpa_en_ra7
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 63 1 valid_ra7
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
R 0xd48 64 - S por_hnf_rn_phys_id4
RESET 0x0 0xc00707ffc00707ff
DESC Configures node IDs for RNs in the system corresponding to each RN ID.
F 0 11 nodeid_ra8
DESC Specifies the node ID
F 16 1 remote_ra8
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 17 2 cpa_grp_ra8
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 30 1 cpa_en_ra8
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 31 1 valid_ra8
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
F 32 11 nodeid_ra9
DESC Specifies the node ID
F 48 1 remote_ra9
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 49 2 cpa_grp_ra9
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 62 1 cpa_en_ra9
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 63 1 valid_ra9
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
R 0xd50 64 - S por_hnf_rn_phys_id5
RESET 0x0 0xc00707ffc00707ff
DESC Configures node IDs for RNs in the system corresponding to each RN ID.
F 0 11 nodeid_ra10
DESC Specifies the node ID
F 16 1 remote_ra10
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 17 2 cpa_grp_ra10
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 30 1 cpa_en_ra10
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 31 1 valid_ra10
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
F 32 11 nodeid_ra11
DESC Specifies the node ID
F 48 1 remote_ra11
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 49 2 cpa_grp_ra11
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 62 1 cpa_en_ra11
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 63 1 valid_ra11
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
R 0xd58 64 - S por_hnf_rn_phys_id6
RESET 0x0 0xc00707ffc00707ff
DESC Configures node IDs for RNs in the system corresponding to each RN ID.
F 0 11 nodeid_ra12
DESC Specifies the node ID
F 16 1 remote_ra12
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 17 2 cpa_grp_ra12
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 30 1 cpa_en_ra12
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 31 1 valid_ra12
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
F 32 11 nodeid_ra13
DESC Specifies the node ID
F 48 1 remote_ra13
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 49 2 cpa_grp_ra13
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 62 1 cpa_en_ra13
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 63 1 valid_ra13
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
R 0xd60 64 - S por_hnf_rn_phys_id7
RESET 0x0 0xc00707ffc00707ff
DESC Configures node IDs for RNs in the system corresponding to each RN ID.
F 0 11 nodeid_ra14
DESC Specifies the node ID
F 16 1 remote_ra14
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 17 2 cpa_grp_ra14
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 30 1 cpa_en_ra14
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 31 1 valid_ra14
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
F 32 11 nodeid_ra15
DESC Specifies the node ID
F 48 1 remote_ra15
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 49 2 cpa_grp_ra15
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 62 1 cpa_en_ra15
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 63 1 valid_ra15
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
R 0xd68 64 - S por_hnf_rn_phys_id8
RESET 0x0 0xc00707ffc00707ff
DESC Configures node IDs for RNs in the system corresponding to each RN ID.
F 0 11 nodeid_ra16
DESC Specifies the node ID
F 16 1 remote_ra16
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 17 2 cpa_grp_ra16
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 30 1 cpa_en_ra16
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 31 1 valid_ra16
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
F 32 11 nodeid_ra17
DESC Specifies the node ID
F 48 1 remote_ra17
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 49 2 cpa_grp_ra17
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 62 1 cpa_en_ra17
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 63 1 valid_ra17
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
R 0xd70 64 - S por_hnf_rn_phys_id9
RESET 0x0 0xc00707ffc00707ff
DESC Configures node IDs for RNs in the system corresponding to each RN ID.
F 0 11 nodeid_ra18
DESC Specifies the node ID
F 16 1 remote_ra18
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 17 2 cpa_grp_ra18
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 30 1 cpa_en_ra18
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 31 1 valid_ra18
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
F 32 11 nodeid_ra19
DESC Specifies the node ID
F 48 1 remote_ra19
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 49 2 cpa_grp_ra19
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 62 1 cpa_en_ra19
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 63 1 valid_ra19
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
R 0xd78 64 - S por_hnf_rn_phys_id10
RESET 0x0 0xc00707ffc00707ff
DESC Configures node IDs for RNs in the system corresponding to each RN ID.
F 0 11 nodeid_ra20
DESC Specifies the node ID
F 16 1 remote_ra20
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 17 2 cpa_grp_ra20
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 30 1 cpa_en_ra20
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 31 1 valid_ra20
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
F 32 11 nodeid_ra21
DESC Specifies the node ID
F 48 1 remote_ra21
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 49 2 cpa_grp_ra21
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 62 1 cpa_en_ra21
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 63 1 valid_ra21
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
R 0xd80 64 - S por_hnf_rn_phys_id11
RESET 0x0 0xc00707ffc00707ff
DESC Configures node IDs for RNs in the system corresponding to each RN ID.
F 0 11 nodeid_ra22
DESC Specifies the node ID
F 16 1 remote_ra22
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 17 2 cpa_grp_ra22
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 30 1 cpa_en_ra22
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 31 1 valid_ra22
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
F 32 11 nodeid_ra23
DESC Specifies the node ID
F 48 1 remote_ra23
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 49 2 cpa_grp_ra23
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 62 1 cpa_en_ra23
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 63 1 valid_ra23
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
R 0xd88 64 - S por_hnf_rn_phys_id12
RESET 0x0 0xc00707ffc00707ff
DESC Configures node IDs for RNs in the system corresponding to each RN ID.
F 0 11 nodeid_ra24
DESC Specifies the node ID
F 16 1 remote_ra24
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 17 2 cpa_grp_ra24
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 30 1 cpa_en_ra24
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 31 1 valid_ra24
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
F 32 11 nodeid_ra25
DESC Specifies the node ID
F 48 1 remote_ra25
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 49 2 cpa_grp_ra25
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 62 1 cpa_en_ra25
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 63 1 valid_ra25
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
R 0xd90 64 - S por_hnf_rn_phys_id13
RESET 0x0 0xc00707ffc00707ff
DESC Configures node IDs for RNs in the system corresponding to each RN ID.
F 0 11 nodeid_ra26
DESC Specifies the node ID
F 16 1 remote_ra26
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 17 2 cpa_grp_ra26
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 30 1 cpa_en_ra26
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 31 1 valid_ra26
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
F 32 11 nodeid_ra27
DESC Specifies the node ID
F 48 1 remote_ra27
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 49 2 cpa_grp_ra27
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 62 1 cpa_en_ra27
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 63 1 valid_ra27
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
R 0xd98 64 - S por_hnf_rn_phys_id14
RESET 0x0 0xc00707ffc00707ff
DESC Configures node IDs for RNs in the system corresponding to each RN ID.
F 0 11 nodeid_ra28
DESC Specifies the node ID
F 16 1 remote_ra28
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 17 2 cpa_grp_ra28
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 30 1 cpa_en_ra28
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 31 1 valid_ra28
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
F 32 11 nodeid_ra29
DESC Specifies the node ID
F 48 1 remote_ra29
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 49 2 cpa_grp_ra29
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 62 1 cpa_en_ra29
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 63 1 valid_ra29
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
R 0xda0 64 - S por_hnf_rn_phys_id15
RESET 0x0 0xc00707ffc00707ff
DESC Configures node IDs for RNs in the system corresponding to each RN ID.
F 0 11 nodeid_ra30
DESC Specifies the node ID
F 16 1 remote_ra30
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 17 2 cpa_grp_ra30
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 30 1 cpa_en_ra30
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 31 1 valid_ra30
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
F 32 11 nodeid_ra31
DESC Specifies the node ID
F 48 1 remote_ra31
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 49 2 cpa_grp_ra31
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 62 1 cpa_en_ra31
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 63 1 valid_ra31
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
R 0xda8 64 - S por_hnf_rn_phys_id16
RESET 0x0 0xc00707ffc00707ff
DESC Configures node IDs for RNs in the system corresponding to each RN ID.
F 0 11 nodeid_ra32
DESC Specifies the node ID
F 16 1 remote_ra32
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 17 2 cpa_grp_ra32
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 30 1 cpa_en_ra32
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 31 1 valid_ra32
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
F 32 11 nodeid_ra33
DESC Specifies the node ID
F 48 1 remote_ra33
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 49 2 cpa_grp_ra33
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 62 1 cpa_en_ra33
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 63 1 valid_ra33
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
R 0xdb0 64 - S por_hnf_rn_phys_id17
RESET 0x0 0xc00707ffc00707ff
DESC Configures node IDs for RNs in the system corresponding to each RN ID.
F 0 11 nodeid_ra34
DESC Specifies the node ID
F 16 1 remote_ra34
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 17 2 cpa_grp_ra34
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 30 1 cpa_en_ra34
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 31 1 valid_ra34
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
F 32 11 nodeid_ra35
DESC Specifies the node ID
F 48 1 remote_ra35
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 49 2 cpa_grp_ra35
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 62 1 cpa_en_ra35
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 63 1 valid_ra35
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
R 0xdb8 64 - S por_hnf_rn_phys_id18
RESET 0x0 0xc00707ffc00707ff
DESC Configures node IDs for RNs in the system corresponding to each RN ID.
F 0 11 nodeid_ra36
DESC Specifies the node ID
F 16 1 remote_ra36
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 17 2 cpa_grp_ra36
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 30 1 cpa_en_ra36
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 31 1 valid_ra36
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
F 32 11 nodeid_ra37
DESC Specifies the node ID
F 48 1 remote_ra37
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 49 2 cpa_grp_ra37
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 62 1 cpa_en_ra37
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 63 1 valid_ra37
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
R 0xdc0 64 - S por_hnf_rn_phys_id19
RESET 0x0 0xc00707ffc00707ff
DESC Configures node IDs for RNs in the system corresponding to each RN ID.
F 0 11 nodeid_ra38
DESC Specifies the node ID
F 16 1 remote_ra38
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 17 2 cpa_grp_ra38
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 30 1 cpa_en_ra38
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 31 1 valid_ra38
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
F 32 11 nodeid_ra39
DESC Specifies the node ID
F 48 1 remote_ra39
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 49 2 cpa_grp_ra39
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 62 1 cpa_en_ra39
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 63 1 valid_ra39
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
R 0xdc8 64 - S por_hnf_rn_phys_id20
RESET 0x0 0xc00707ffc00707ff
DESC Configures node IDs for RNs in the system corresponding to each RN ID.
F 0 11 nodeid_ra40
DESC Specifies the node ID
F 16 1 remote_ra40
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 17 2 cpa_grp_ra40
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 30 1 cpa_en_ra40
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 31 1 valid_ra40
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
F 32 11 nodeid_ra41
DESC Specifies the node ID
F 48 1 remote_ra41
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 49 2 cpa_grp_ra41
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 62 1 cpa_en_ra41
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 63 1 valid_ra41
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
R 0xdd0 64 - S por_hnf_rn_phys_id21
RESET 0x0 0xc00707ffc00707ff
DESC Configures node IDs for RNs in the system corresponding to each RN ID.
F 0 11 nodeid_ra42
DESC Specifies the node ID
F 16 1 remote_ra42
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 17 2 cpa_grp_ra42
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 30 1 cpa_en_ra42
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 31 1 valid_ra42
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
F 32 11 nodeid_ra43
DESC Specifies the node ID
F 48 1 remote_ra43
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 49 2 cpa_grp_ra43
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 62 1 cpa_en_ra43
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 63 1 valid_ra43
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
R 0xdd8 64 - S por_hnf_rn_phys_id22
RESET 0x0 0xc00707ffc00707ff
DESC Configures node IDs for RNs in the system corresponding to each RN ID.
F 0 11 nodeid_ra44
DESC Specifies the node ID
F 16 1 remote_ra44
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 17 2 cpa_grp_ra44
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 30 1 cpa_en_ra44
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 31 1 valid_ra44
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
F 32 11 nodeid_ra45
DESC Specifies the node ID
F 48 1 remote_ra45
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 49 2 cpa_grp_ra45
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 62 1 cpa_en_ra45
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 63 1 valid_ra45
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
R 0xde0 64 - S por_hnf_rn_phys_id23
RESET 0x0 0xc00707ffc00707ff
DESC Configures node IDs for RNs in the system corresponding to each RN ID.
F 0 11 nodeid_ra46
DESC Specifies the node ID
F 16 1 remote_ra46
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 17 2 cpa_grp_ra46
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 30 1 cpa_en_ra46
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 31 1 valid_ra46
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
F 32 11 nodeid_ra47
DESC Specifies the node ID
F 48 1 remote_ra47
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 49 2 cpa_grp_ra47
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 62 1 cpa_en_ra47
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 63 1 valid_ra47
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
R 0xde8 64 - S por_hnf_rn_phys_id24
RESET 0x0 0xc00707ffc00707ff
DESC Configures node IDs for RNs in the system corresponding to each RN ID.
F 0 11 nodeid_ra48
DESC Specifies the node ID
F 16 1 remote_ra48
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 17 2 cpa_grp_ra48
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 30 1 cpa_en_ra48
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 31 1 valid_ra48
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
F 32 11 nodeid_ra49
DESC Specifies the node ID
F 48 1 remote_ra49
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 49 2 cpa_grp_ra49
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 62 1 cpa_en_ra49
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 63 1 valid_ra49
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
R 0xdf0 64 - S por_hnf_rn_phys_id25
RESET 0x0 0xc00707ffc00707ff
DESC Configures node IDs for RNs in the system corresponding to each RN ID.
F 0 11 nodeid_ra50
DESC Specifies the node ID
F 16 1 remote_ra50
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 17 2 cpa_grp_ra50
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 30 1 cpa_en_ra50
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 31 1 valid_ra50
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
F 32 11 nodeid_ra51
DESC Specifies the node ID
F 48 1 remote_ra51
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 49 2 cpa_grp_ra51
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 62 1 cpa_en_ra51
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 63 1 valid_ra51
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
R 0xdf8 64 - S por_hnf_rn_phys_id26
RESET 0x0 0xc00707ffc00707ff
DESC Configures node IDs for RNs in the system corresponding to each RN ID.
F 0 11 nodeid_ra52
DESC Specifies the node ID
F 16 1 remote_ra52
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 17 2 cpa_grp_ra52
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 30 1 cpa_en_ra52
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 31 1 valid_ra52
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
F 32 11 nodeid_ra53
DESC Specifies the node ID
F 48 1 remote_ra53
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 49 2 cpa_grp_ra53
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 62 1 cpa_en_ra53
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 63 1 valid_ra53
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
R 0xe00 64 - S por_hnf_rn_phys_id27
RESET 0x0 0xc00707ffc00707ff
DESC Configures node IDs for RNs in the system corresponding to each RN ID.
F 0 11 nodeid_ra54
DESC Specifies the node ID
F 16 1 remote_ra54
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 17 2 cpa_grp_ra54
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 30 1 cpa_en_ra54
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 31 1 valid_ra54
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
F 32 11 nodeid_ra55
DESC Specifies the node ID
F 48 1 remote_ra55
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 49 2 cpa_grp_ra55
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 62 1 cpa_en_ra55
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 63 1 valid_ra55
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
R 0xe08 64 - S por_hnf_rn_phys_id28
RESET 0x0 0xc00707ffc00707ff
DESC Configures node IDs for RNs in the system corresponding to each RN ID.
F 0 11 nodeid_ra56
DESC Specifies the node ID
F 16 1 remote_ra56
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 17 2 cpa_grp_ra56
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 30 1 cpa_en_ra56
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 31 1 valid_ra56
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
F 32 11 nodeid_ra57
DESC Specifies the node ID
F 48 1 remote_ra57
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 49 2 cpa_grp_ra57
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 62 1 cpa_en_ra57
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 63 1 valid_ra57
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
R 0xe10 64 - S por_hnf_rn_phys_id29
RESET 0x0 0xc00707ffc00707ff
DESC Configures node IDs for RNs in the system corresponding to each RN ID.
F 0 11 nodeid_ra58
DESC Specifies the node ID
F 16 1 remote_ra58
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 17 2 cpa_grp_ra58
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 30 1 cpa_en_ra58
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 31 1 valid_ra58
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
F 32 11 nodeid_ra59
DESC Specifies the node ID
F 48 1 remote_ra59
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 49 2 cpa_grp_ra59
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 62 1 cpa_en_ra59
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 63 1 valid_ra59
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
R 0xe18 64 - S por_hnf_rn_phys_id30
RESET 0x0 0xc00707ffc00707ff
DESC Configures node IDs for RNs in the system corresponding to each RN ID.
F 0 11 nodeid_ra60
DESC Specifies the node ID
F 16 1 remote_ra60
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 17 2 cpa_grp_ra60
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 30 1 cpa_en_ra60
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 31 1 valid_ra60
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
F 32 11 nodeid_ra61
DESC Specifies the node ID
F 48 1 remote_ra61
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 49 2 cpa_grp_ra61
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 62 1 cpa_en_ra61
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 63 1 valid_ra61
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
R 0xe20 64 - S por_hnf_rn_phys_id31
RESET 0x0 0xc00707ffc00707ff
DESC Configures node IDs for RNs in the system corresponding to each RN ID.
F 0 11 nodeid_ra62
DESC Specifies the node ID
F 16 1 remote_ra62
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 17 2 cpa_grp_ra62
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 30 1 cpa_en_ra62
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 31 1 valid_ra62
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
F 32 11 nodeid_ra63
DESC Specifies the node ID
F 48 1 remote_ra63
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 49 2 cpa_grp_ra63
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 62 1 cpa_en_ra63
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 63 1 valid_ra63
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
R 0xe28 64 - S por_hnf_rn_phys_id32
RESET 0x0 0xc00707ffc00707ff
DESC Configures node IDs for RNs in the system corresponding to each RN ID.
F 0 11 nodeid_ra64
DESC Specifies the node ID
F 16 1 remote_ra64
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 17 2 cpa_grp_ra64
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 30 1 cpa_en_ra64
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 31 1 valid_ra64
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
F 32 11 nodeid_ra65
DESC Specifies the node ID
F 48 1 remote_ra65
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 49 2 cpa_grp_ra65
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 62 1 cpa_en_ra65
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 63 1 valid_ra65
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
R 0xe30 64 - S por_hnf_rn_phys_id33
RESET 0x0 0xc00707ffc00707ff
DESC Configures node IDs for RNs in the system corresponding to each RN ID.
F 0 11 nodeid_ra66
DESC Specifies the node ID
F 16 1 remote_ra66
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 17 2 cpa_grp_ra66
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 30 1 cpa_en_ra66
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 31 1 valid_ra66
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
F 32 11 nodeid_ra67
DESC Specifies the node ID
F 48 1 remote_ra67
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 49 2 cpa_grp_ra67
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 62 1 cpa_en_ra67
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 63 1 valid_ra67
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
R 0xe38 64 - S por_hnf_rn_phys_id34
RESET 0x0 0xc00707ffc00707ff
DESC Configures node IDs for RNs in the system corresponding to each RN ID.
F 0 11 nodeid_ra68
DESC Specifies the node ID
F 16 1 remote_ra68
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 17 2 cpa_grp_ra68
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 30 1 cpa_en_ra68
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 31 1 valid_ra68
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
F 32 11 nodeid_ra69
DESC Specifies the node ID
F 48 1 remote_ra69
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 49 2 cpa_grp_ra69
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 62 1 cpa_en_ra69
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 63 1 valid_ra69
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
R 0xe40 64 - S por_hnf_rn_phys_id35
RESET 0x0 0xc00707ffc00707ff
DESC Configures node IDs for RNs in the system corresponding to each RN ID.
F 0 11 nodeid_ra70
DESC Specifies the node ID
F 16 1 remote_ra70
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 17 2 cpa_grp_ra70
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 30 1 cpa_en_ra70
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 31 1 valid_ra70
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
F 32 11 nodeid_ra71
DESC Specifies the node ID
F 48 1 remote_ra71
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 49 2 cpa_grp_ra71
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 62 1 cpa_en_ra71
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 63 1 valid_ra71
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
R 0xe48 64 - S por_hnf_rn_phys_id36
RESET 0x0 0xc00707ffc00707ff
DESC Configures node IDs for RNs in the system corresponding to each RN ID.
F 0 11 nodeid_ra72
DESC Specifies the node ID
F 16 1 remote_ra72
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 17 2 cpa_grp_ra72
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 30 1 cpa_en_ra72
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 31 1 valid_ra72
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
F 32 11 nodeid_ra73
DESC Specifies the node ID
F 48 1 remote_ra73
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 49 2 cpa_grp_ra73
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 62 1 cpa_en_ra73
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 63 1 valid_ra73
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
R 0xe50 64 - S por_hnf_rn_phys_id37
RESET 0x0 0xc00707ffc00707ff
DESC Configures node IDs for RNs in the system corresponding to each RN ID.
F 0 11 nodeid_ra74
DESC Specifies the node ID
F 16 1 remote_ra74
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 17 2 cpa_grp_ra74
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 30 1 cpa_en_ra74
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 31 1 valid_ra74
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
F 32 11 nodeid_ra75
DESC Specifies the node ID
F 48 1 remote_ra75
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 49 2 cpa_grp_ra75
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 62 1 cpa_en_ra75
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 63 1 valid_ra75
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
R 0xe58 64 - S por_hnf_rn_phys_id38
RESET 0x0 0xc00707ffc00707ff
DESC Configures node IDs for RNs in the system corresponding to each RN ID.
F 0 11 nodeid_ra76
DESC Specifies the node ID
F 16 1 remote_ra76
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 17 2 cpa_grp_ra76
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 30 1 cpa_en_ra76
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 31 1 valid_ra76
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
F 32 11 nodeid_ra77
DESC Specifies the node ID
F 48 1 remote_ra77
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 49 2 cpa_grp_ra77
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 62 1 cpa_en_ra77
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 63 1 valid_ra77
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
R 0xe60 64 - S por_hnf_rn_phys_id39
RESET 0x0 0xc00707ffc00707ff
DESC Configures node IDs for RNs in the system corresponding to each RN ID.
F 0 11 nodeid_ra78
DESC Specifies the node ID
F 16 1 remote_ra78
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 17 2 cpa_grp_ra78
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 30 1 cpa_en_ra78
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 31 1 valid_ra78
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
F 32 11 nodeid_ra79
DESC Specifies the node ID
F 48 1 remote_ra79
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 49 2 cpa_grp_ra79
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 62 1 cpa_en_ra79
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 63 1 valid_ra79
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
R 0xe68 64 - S por_hnf_rn_phys_id40
RESET 0x0 0xc00707ffc00707ff
DESC Configures node IDs for RNs in the system corresponding to each RN ID.
F 0 11 nodeid_ra80
DESC Specifies the node ID
F 16 1 remote_ra80
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 17 2 cpa_grp_ra80
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 30 1 cpa_en_ra80
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 31 1 valid_ra80
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
F 32 11 nodeid_ra81
DESC Specifies the node ID
F 48 1 remote_ra81
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 49 2 cpa_grp_ra81
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 62 1 cpa_en_ra81
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 63 1 valid_ra81
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
R 0xe70 64 - S por_hnf_rn_phys_id41
RESET 0x0 0xc00707ffc00707ff
DESC Configures node IDs for RNs in the system corresponding to each RN ID.
F 0 11 nodeid_ra82
DESC Specifies the node ID
F 16 1 remote_ra82
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 17 2 cpa_grp_ra82
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 30 1 cpa_en_ra82
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 31 1 valid_ra82
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
F 32 11 nodeid_ra83
DESC Specifies the node ID
F 48 1 remote_ra83
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 49 2 cpa_grp_ra83
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 62 1 cpa_en_ra83
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 63 1 valid_ra83
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
R 0xe78 64 - S por_hnf_rn_phys_id42
RESET 0x0 0xc00707ffc00707ff
DESC Configures node IDs for RNs in the system corresponding to each RN ID.
F 0 11 nodeid_ra84
DESC Specifies the node ID
F 16 1 remote_ra84
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 17 2 cpa_grp_ra84
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 30 1 cpa_en_ra84
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 31 1 valid_ra84
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
F 32 11 nodeid_ra85
DESC Specifies the node ID
F 48 1 remote_ra85
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 49 2 cpa_grp_ra85
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 62 1 cpa_en_ra85
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 63 1 valid_ra85
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
R 0xe80 64 - S por_hnf_rn_phys_id43
RESET 0x0 0xc00707ffc00707ff
DESC Configures node IDs for RNs in the system corresponding to each RN ID.
F 0 11 nodeid_ra86
DESC Specifies the node ID
F 16 1 remote_ra86
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 17 2 cpa_grp_ra86
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 30 1 cpa_en_ra86
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 31 1 valid_ra86
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
F 32 11 nodeid_ra87
DESC Specifies the node ID
F 48 1 remote_ra87
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 49 2 cpa_grp_ra87
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 62 1 cpa_en_ra87
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 63 1 valid_ra87
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
R 0xe88 64 - S por_hnf_rn_phys_id44
RESET 0x0 0xc00707ffc00707ff
DESC Configures node IDs for RNs in the system corresponding to each RN ID.
F 0 11 nodeid_ra88
DESC Specifies the node ID
F 16 1 remote_ra88
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 17 2 cpa_grp_ra88
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 30 1 cpa_en_ra88
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 31 1 valid_ra88
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
F 32 11 nodeid_ra89
DESC Specifies the node ID
F 48 1 remote_ra89
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 49 2 cpa_grp_ra89
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 62 1 cpa_en_ra89
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 63 1 valid_ra89
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
R 0xe90 64 - S por_hnf_rn_phys_id45
RESET 0x0 0xc00707ffc00707ff
DESC Configures node IDs for RNs in the system corresponding to each RN ID.
F 0 11 nodeid_ra90
DESC Specifies the node ID
F 16 1 remote_ra90
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 17 2 cpa_grp_ra90
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 30 1 cpa_en_ra90
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 31 1 valid_ra90
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
F 32 11 nodeid_ra91
DESC Specifies the node ID
F 48 1 remote_ra91
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 49 2 cpa_grp_ra91
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 62 1 cpa_en_ra91
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 63 1 valid_ra91
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
R 0xe98 64 - S por_hnf_rn_phys_id46
RESET 0x0 0xc00707ffc00707ff
DESC Configures node IDs for RNs in the system corresponding to each RN ID.
F 0 11 nodeid_ra92
DESC Specifies the node ID
F 16 1 remote_ra92
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 17 2 cpa_grp_ra92
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 30 1 cpa_en_ra92
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 31 1 valid_ra92
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
F 32 11 nodeid_ra93
DESC Specifies the node ID
F 48 1 remote_ra93
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 49 2 cpa_grp_ra93
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 62 1 cpa_en_ra93
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 63 1 valid_ra93
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
R 0xea0 64 - S por_hnf_rn_phys_id47
RESET 0x0 0xc00707ffc00707ff
DESC Configures node IDs for RNs in the system corresponding to each RN ID.
F 0 11 nodeid_ra94
DESC Specifies the node ID
F 16 1 remote_ra94
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 17 2 cpa_grp_ra94
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 30 1 cpa_en_ra94
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 31 1 valid_ra94
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
F 32 11 nodeid_ra95
DESC Specifies the node ID
F 48 1 remote_ra95
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 49 2 cpa_grp_ra95
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 62 1 cpa_en_ra95
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 63 1 valid_ra95
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
R 0xea8 64 - S por_hnf_rn_phys_id48
RESET 0x0 0xc00707ffc00707ff
DESC Configures node IDs for RNs in the system corresponding to each RN ID.
F 0 11 nodeid_ra96
DESC Specifies the node ID
F 16 1 remote_ra96
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 17 2 cpa_grp_ra96
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 30 1 cpa_en_ra96
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 31 1 valid_ra96
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
F 32 11 nodeid_ra97
DESC Specifies the node ID
F 48 1 remote_ra97
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 49 2 cpa_grp_ra97
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 62 1 cpa_en_ra97
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 63 1 valid_ra97
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
R 0xeb0 64 - S por_hnf_rn_phys_id49
RESET 0x0 0xc00707ffc00707ff
DESC Configures node IDs for RNs in the system corresponding to each RN ID.
F 0 11 nodeid_ra98
DESC Specifies the node ID
F 16 1 remote_ra98
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 17 2 cpa_grp_ra98
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 30 1 cpa_en_ra98
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 31 1 valid_ra98
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
F 32 11 nodeid_ra99
DESC Specifies the node ID
F 48 1 remote_ra99
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 49 2 cpa_grp_ra99
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 62 1 cpa_en_ra99
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 63 1 valid_ra99
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
R 0xeb8 64 - S por_hnf_rn_phys_id50
RESET 0x0 0xc00707ffc00707ff
DESC Configures node IDs for RNs in the system corresponding to each RN ID.
F 0 11 nodeid_ra100
DESC Specifies the node ID
F 16 1 remote_ra100
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 17 2 cpa_grp_ra100
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 30 1 cpa_en_ra100
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 31 1 valid_ra100
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
F 32 11 nodeid_ra101
DESC Specifies the node ID
F 48 1 remote_ra101
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 49 2 cpa_grp_ra101
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 62 1 cpa_en_ra101
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 63 1 valid_ra101
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
R 0xec0 64 - S por_hnf_rn_phys_id51
RESET 0x0 0xc00707ffc00707ff
DESC Configures node IDs for RNs in the system corresponding to each RN ID.
F 0 11 nodeid_ra102
DESC Specifies the node ID
F 16 1 remote_ra102
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 17 2 cpa_grp_ra102
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 30 1 cpa_en_ra102
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 31 1 valid_ra102
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
F 32 11 nodeid_ra103
DESC Specifies the node ID
F 48 1 remote_ra103
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 49 2 cpa_grp_ra103
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 62 1 cpa_en_ra103
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 63 1 valid_ra103
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
R 0xec8 64 - S por_hnf_rn_phys_id52
RESET 0x0 0xc00707ffc00707ff
DESC Configures node IDs for RNs in the system corresponding to each RN ID.
F 0 11 nodeid_ra104
DESC Specifies the node ID
F 16 1 remote_ra104
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 17 2 cpa_grp_ra104
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 30 1 cpa_en_ra104
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 31 1 valid_ra104
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
F 32 11 nodeid_ra105
DESC Specifies the node ID
F 48 1 remote_ra105
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 49 2 cpa_grp_ra105
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 62 1 cpa_en_ra105
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 63 1 valid_ra105
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
R 0xed0 64 - S por_hnf_rn_phys_id53
RESET 0x0 0xc00707ffc00707ff
DESC Configures node IDs for RNs in the system corresponding to each RN ID.
F 0 11 nodeid_ra106
DESC Specifies the node ID
F 16 1 remote_ra106
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 17 2 cpa_grp_ra106
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 30 1 cpa_en_ra106
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 31 1 valid_ra106
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
F 32 11 nodeid_ra107
DESC Specifies the node ID
F 48 1 remote_ra107
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 49 2 cpa_grp_ra107
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 62 1 cpa_en_ra107
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 63 1 valid_ra107
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
R 0xed8 64 - S por_hnf_rn_phys_id54
RESET 0x0 0xc00707ffc00707ff
DESC Configures node IDs for RNs in the system corresponding to each RN ID.
F 0 11 nodeid_ra108
DESC Specifies the node ID
F 16 1 remote_ra108
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 17 2 cpa_grp_ra108
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 30 1 cpa_en_ra108
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 31 1 valid_ra108
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
F 32 11 nodeid_ra109
DESC Specifies the node ID
F 48 1 remote_ra109
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 49 2 cpa_grp_ra109
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 62 1 cpa_en_ra109
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 63 1 valid_ra109
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
R 0xee0 64 - S por_hnf_rn_phys_id55
RESET 0x0 0xc00707ffc00707ff
DESC Configures node IDs for RNs in the system corresponding to each RN ID.
F 0 11 nodeid_ra110
DESC Specifies the node ID
F 16 1 remote_ra110
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 17 2 cpa_grp_ra110
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 30 1 cpa_en_ra110
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 31 1 valid_ra110
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
F 32 11 nodeid_ra111
DESC Specifies the node ID
F 48 1 remote_ra111
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 49 2 cpa_grp_ra111
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 62 1 cpa_en_ra111
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 63 1 valid_ra111
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
R 0xee8 64 - S por_hnf_rn_phys_id56
RESET 0x0 0xc00707ffc00707ff
DESC Configures node IDs for RNs in the system corresponding to each RN ID.
F 0 11 nodeid_ra112
DESC Specifies the node ID
F 16 1 remote_ra112
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 17 2 cpa_grp_ra112
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 30 1 cpa_en_ra112
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 31 1 valid_ra112
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
F 32 11 nodeid_ra113
DESC Specifies the node ID
F 48 1 remote_ra113
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 49 2 cpa_grp_ra113
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 62 1 cpa_en_ra113
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 63 1 valid_ra113
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
R 0xef0 64 - S por_hnf_rn_phys_id57
RESET 0x0 0xc00707ffc00707ff
DESC Configures node IDs for RNs in the system corresponding to each RN ID.
F 0 11 nodeid_ra114
DESC Specifies the node ID
F 16 1 remote_ra114
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 17 2 cpa_grp_ra114
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 30 1 cpa_en_ra114
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 31 1 valid_ra114
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
F 32 11 nodeid_ra115
DESC Specifies the node ID
F 48 1 remote_ra115
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 49 2 cpa_grp_ra115
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 62 1 cpa_en_ra115
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 63 1 valid_ra115
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
R 0xef8 64 - S por_hnf_rn_phys_id58
RESET 0x0 0xc00707ffc00707ff
DESC Configures node IDs for RNs in the system corresponding to each RN ID.
F 0 11 nodeid_ra116
DESC Specifies the node ID
F 16 1 remote_ra116
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 17 2 cpa_grp_ra116
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 30 1 cpa_en_ra116
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 31 1 valid_ra116
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
F 32 11 nodeid_ra117
DESC Specifies the node ID
F 48 1 remote_ra117
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 49 2 cpa_grp_ra117
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 62 1 cpa_en_ra117
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 63 1 valid_ra117
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
R 0xf00 64 - S por_hnf_sf_cxg_blocked_ways
RESET 0x0 0x3
DESC Specifies the SF ways that are blocked for remote chip to use in CML mode.
F 0 2 sf_blocked_ways
DESC Number of SF ways blocked for remote chips to use in CML mode (0, 4, 8, or 12) 2'b00: No ways are blocked; all 16 SF ways could be used by local or remote RN-Fs 2'b01: Lower 4 ways are blocked from remote RN-Fs; ways 3:0 for local RN-Fs only; ways 15:4 for local and remote RN-Fs 2'b10: Lower 8 ways are blocked from remote RN-Fs; ways 7:0 for local RN-Fs only; ways 15:8 for local and remote RN-Fs 2'b11: Lower 12 ways are blocked from remote RN-Fs; ways 11:0 for local RN-Fs only; ways 15:12 for local and remote RN-Fs
R 0xf10 64 - S por_hnf_cml_port_aggr_grp0_add_mask
RESET 0x40 0xffffffffffc0
DESC Configures the CCIX port aggregation address mask for group 0.
F 6 42 addr_mask
DESC Address mask to be applied before hashing
R 0xf18 64 - S por_hnf_cml_port_aggr_grp1_add_mask
RESET 0x40 0xffffffffffc0
DESC Configures the CCIX port aggregation address mask for group 1.
F 6 42 addr_mask
DESC Address mask to be applied before hashing
R 0xf28 64 - S por_hnf_cml_port_aggr_grp0_reg
RESET 0x0 0x37ff7ff7ff7ff
DESC Configures the CCIX port aggregation port IDs for group 0.
F 48 2 num_cxg_pag0
DESC Specifies the number of CXRAs in CPAG 2'b00: 1 port used 2'b01: 2 ports used 2'b10: 4 ports used 2'b11: Reserved
F 36 11 pag0_tgtid3
DESC Specifies the target ID for CPAG
F 24 11 pag0_tgtid2
DESC Specifies the target ID for CPAG
F 12 11 pag0_tgtid1
DESC Specifies the target ID for CPAG
F 0 11 pag0_tgtid0
DESC Specifies the target ID for CPAG
R 0xf30 64 - S por_hnf_cml_port_aggr_grp1_reg
RESET 0x0 0x37ff7ff7ff7ff
DESC Configures the CCIX port aggregation port IDs for group 1.
F 48 2 num_cxg_pag1
DESC Specifies the number of CXRAs in CPAG
F 36 11 pag1_tgtid3
DESC Specifies the target ID for CPAG
F 24 11 pag1_tgtid2
DESC Specifies the target ID for CPAG
F 12 11 pag1_tgtid1
DESC Specifies the target ID for CPAG
F 0 11 pag1_tgtid0
DESC Specifies the target ID for CPAG
R 0xf40 64 - S hn_sam_hash_addr_mask_reg
RESET 0xffffffffffc0 0xffffffffffc0
DESC Configures the address mask that is applied before hashing the address bits.
F 6 42 addr_mask
DESC Address mask applied before hashing
R 0xf48 64 - S hn_sam_region_cmp_addr_mask_reg
RESET 0xfffffc000000 0xfffffc000000
DESC Configures the address mask that is applied before memory region compare.
F 26 22 addr_mask
DESC Address mask applied before memory region compare
R 0xf50 64 - S por_hnf_abf_lo_addr
RESET 0x0 0xffffffffffff
DESC Lower address range for Address Based Flush (ABF) [47:0].
F 0 48 abf_lo_addr
DESC Lower address range for ABF
R 0xf58 64 - S por_hnf_abf_hi_addr
RESET 0x0 0xffffffffffff
DESC Upper address range for Address Based Flush (ABF) [47:0].
F 0 48 abf_hi_addr
DESC Upper address range for ABF
R 0xf60 64 - S por_hnf_abf_pr
RESET 0x0 0x7
DESC Functions as the Address Based Flush (ABF) policy register.
F 0 1 abf_enable
DESC Start Address Based Flushing based on high and low address ranges
F 1 2 abf_mode
DESC ABF mode 2'b00: Clean Invalidate; WB dirty data and invalidate local copy 2'b01: Make Invalidate; invalidate without writing back dirty data 2'b10: Clean Shared; WB dirty data and can keep clean copy 2'b11: Reserved
R 0xf68 64 RO - por_hnf_abf_sr
RESET 0x0 0xf
DESC Functions as the Address Based Flush (ABF) status register.
F 0 1 abf_complete
DESC ABF completed
F 1 1 abf_invalid_req_abort
DESC ABF request made while PM is not in FAM/HAM/SF_ONLY mode; request aborted in this case
F 2 1 abf_sf_pm_transition_abort
DESC ABF aborted due to PM transition while ABF in progress, or both PM and ABF requested at the same time
F 3 1 abf_sf_disable_abort
DESC ABF aborted due to SF not being enabled, either by configuration or double-bit ECC error
R 0xf70 64 - S por_hnf_rn_phys_id59
RESET 0x0 0xc00707ffc00707ff
DESC Configures node IDs for RNs in the system corresponding to each RN ID.
F 0 11 nodeid_ra118
DESC Specifies the node ID
F 16 1 remote_ra118
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 17 2 cpa_grp_ra118
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 30 1 cpa_en_ra118
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 31 1 valid_ra118
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
F 32 11 nodeid_ra119
DESC Specifies the node ID
F 48 1 remote_ra119
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 49 2 cpa_grp_ra119
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 62 1 cpa_en_ra119
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 63 1 valid_ra119
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
R 0xf78 64 - S por_hnf_rn_phys_id60
RESET 0x0 0xc00707ffc00707ff
DESC Configures node IDs for RNs in the system corresponding to each RN ID.
F 0 11 nodeid_ra120
DESC Specifies the node ID
F 16 1 remote_ra120
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 17 2 cpa_grp_ra120
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 30 1 cpa_en_ra120
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 31 1 valid_ra120
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
F 32 11 nodeid_ra121
DESC Specifies the node ID
F 48 1 remote_ra121
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 49 2 cpa_grp_ra121
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 62 1 cpa_en_ra121
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 63 1 valid_ra121
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
R 0xf80 64 - S por_hnf_rn_phys_id61
RESET 0x0 0xc00707ffc00707ff
DESC Configures node IDs for RNs in the system corresponding to each RN ID.
F 0 11 nodeid_ra122
DESC Specifies the node ID
F 16 1 remote_ra122
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 17 2 cpa_grp_ra122
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 30 1 cpa_en_ra122
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 31 1 valid_ra122
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
F 32 11 nodeid_ra123
DESC Specifies the node ID
F 48 1 remote_ra123
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 49 2 cpa_grp_ra123
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 62 1 cpa_en_ra123
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 63 1 valid_ra123
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
R 0xf88 64 - S por_hnf_rn_phys_id62
RESET 0x0 0xc00707ffc00707ff
DESC Configures node IDs for RNs in the system corresponding to each RN ID.
F 0 11 nodeid_ra124
DESC Specifies the node ID
F 16 1 remote_ra124
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 17 2 cpa_grp_ra124
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 30 1 cpa_en_ra124
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 31 1 valid_ra124
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
F 32 11 nodeid_ra125
DESC Specifies the node ID
F 48 1 remote_ra125
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 49 2 cpa_grp_ra125
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 62 1 cpa_en_ra125
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 63 1 valid_ra125
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
R 0xf90 64 - S por_hnf_rn_phys_id63
RESET 0x0 0xc00707ffc00707ff
DESC Configures node IDs for RNs in the system corresponding to each RN ID.
F 0 11 nodeid_ra126
DESC Specifies the node ID
F 16 1 remote_ra126
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 17 2 cpa_grp_ra126
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 30 1 cpa_en_ra126
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 31 1 valid_ra126
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
F 32 11 nodeid_ra127
DESC Specifies the node ID
F 48 1 remote_ra127
DESC Specifies whether the RN is remote or local 1'b0: Local RN 1'b1: Remote RN
F 49 2 cpa_grp_ra127
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 62 1 cpa_en_ra127
DESC Specifies whether the CCIX port aggregation is enabled 1'b0: CPA not enabled 1'b1: CPA enabled
F 63 1 valid_ra127
DESC Specifies whether the RN is valid 1'b0: RN ID is not valid 1'b1: RN ID is pointing to a valid CHI device
R 0xf98 64 - S por_hnf_ldid_map_table_reg0
RESET 0x0 0x807f07ff807f07ff
DESC Configures LDID start pointer for remote RN-F's behind each CXG
F 0 11 srcid_cxha0
DESC Specifies the node ID for CXHA 0
F 16 7 starting_ldid_cxha0
DESC Specifies the starting LDID for RN-F's behind CXHA 0
F 31 1 valid_cxha0
DESC Specifies CXHA 0 programming is valid
F 32 11 srcid_cxha1
DESC Specifies the node ID for CXHA 1
F 48 7 starting_ldid_cxha1
DESC Specifies the starting LDID for RN-F's behind CXHA 1
F 63 1 valid_cxha1
DESC Specifies CXHA 1 programming is valid
R 0xfa0 64 - S por_hnf_ldid_map_table_reg1
RESET 0x0 0x807f07ff807f07ff
DESC Configures LDID start pointer for remote RN-F's behind each CXG
F 0 11 srcid_cxha2
DESC Specifies the node ID for CXHA 2
F 16 7 starting_ldid_cxha2
DESC Specifies the starting LDID for RN-F's behind CXHA 2
F 31 1 valid_cxha2
DESC Specifies CXHA 2 programming is valid
F 32 11 srcid_cxha3
DESC Specifies the node ID for CXHA 3
F 48 7 starting_ldid_cxha3
DESC Specifies the starting LDID for RN-F's behind CXHA 3
F 63 1 valid_cxha3
DESC Specifies CXHA 3 programming is valid
R 0xfa8 64 - S por_hnf_ldid_map_table_reg2
RESET 0x0 0x807f07ff807f07ff
DESC Configures LDID start pointer for remote RN-F's behind each CXG
F 0 11 srcid_cxha4
DESC Specifies the node ID for CXHA 4
F 16 7 starting_ldid_cxha4
DESC Specifies the starting LDID for RN-F's behind CXHA 4
F 31 1 valid_cxha4
DESC Specifies CXHA 4 programming is valid
F 32 11 srcid_cxha5
DESC Specifies the node ID for CXHA 5
F 48 7 starting_ldid_cxha5
DESC Specifies the starting LDID for RN-F's behind CXHA 5
F 63 1 valid_cxha5
DESC Specifies CXHA 5 programming is valid
R 0xfb0 64 - S por_hnf_ldid_map_table_reg3
RESET 0x0 0x807f07ff807f07ff
DESC Configures LDID start pointer for remote RN-F's behind each CXG
F 0 11 srcid_cxha6
DESC Specifies the node ID for CXHA 6
F 16 7 starting_ldid_cxha6
DESC Specifies the starting LDID for RN-F's behind CXHA 6
F 31 1 valid_cxha6
DESC Specifies CXHA 6 programming is valid
F 32 11 srcid_cxha7
DESC Specifies the node ID for CXHA 7
F 48 7 starting_ldid_cxha7
DESC Specifies the starting LDID for RN-F's behind CXHA 7
F 63 1 valid_cxha7
DESC Specifies CXHA 7 programming is valid
R 0x1000 32 - S por_hnf_ppu_pwpr
RESET 0x0 0x1ff
DESC Functions as the power policy register for HN-F.
F 0 4 policy
DESC HN-F power mode policy 4'b1000: ON 4'b0111: FUNC_RET 4'b0010: MEM_RET 4'b0000: OFF
F 4 4 op_mode
DESC HN-F operational power mode 4'b0011: FAM 4'b0010: HAM 4'b0001: SFONLY 4'b0000: NOSFSLC
F 8 1 dyn_en
DESC Dynamic transition enable
R 0x1008 32 ROV - por_hnf_ppu_pwsr
RESET 0x0 0x1ff
DESC Provides power status information for HN-F.
F 0 4 pow_status
DESC HN-F power mode status 4'b1000: ON 4'b0111: FUNC_RET 4'b0010: MEM_RET 4'b0000: OFF
F 4 4 op_mode_status
DESC HN-F operational mode status 4'b0011: FAM 4'b0010: HAM 4'b0001: SFONLY 4'b0000: NOSFSLC
F 8 1 dyn_en_status
DESC Dynamic transition status
R 0x1014 32 RO - por_hnf_ppu_misr
RESET 0x0 0x1
DESC Functions as the power miscellaneous input current status register for HN-F.
F 0 1 pcsmaccept_status
DESC HN-F RAM PCSMACCEPT status
R 0x1100 64 - S por_hnf_ppu_dyn_ret_threshold
RESET 0x0 0xfff
DESC Configures the dynamic retention threshold for SLC and SF RAM.
F 0 12 dyn_ret_threshold
DESC HN-F RAM idle cycle count threshold
R 0x1fb0 32 RO - por_hnf_ppu_idr0
RESET 0x801a540 0x3ff7ffff
DESC Provides identification information for the HN-F PPU.
F 29 1 dyn_wrm_rst_spt
DESC Dynamic warm_rst support
F 28 1 dyn_all_on_spt
DESC Dynamic on support
F 27 1 dyn_fnc_ret_spt
DESC Dynamic func_ret support
F 26 1 dyn_full_ret_spt
DESC Dynamic full_ret support
F 25 1 dyn_mem_off_spt
DESC Dynamic mem_off support
F 24 1 dyn_lgc_ret_spt
DESC Dynamic logic_ret support
F 23 1 dyn_mem_ret_emu_spt
DESC Dynamic mem_ret_emu support
F 22 1 dyn_mem_ret_spt
DESC Dynamic mem_ret support
F 21 1 dyn_off_emu_spt
DESC Dynamic off_emu support
F 20 1 dyn_all_off_spt
DESC Dynamic off support
F 18 1 sta_dbg_recov_spt
DESC Static dbg_recov support
F 17 1 sta_wrm_rst_spt
DESC Static warm_rst support
F 16 1 sta_all_on_spt
DESC Static on support
F 15 1 sta_fnc_ret_spt
DESC Static func_ret support
F 14 1 sta_full_ret_spt
DESC Static full_ret support
F 13 1 sta_mem_off_spt
DESC Static mem_off support
F 12 1 sta_lgc_ret_spt
DESC Static logic_ret support
F 11 1 sta_mem_ret_emu_spt
DESC Static mem_ret_emu support
F 10 1 sta_mem_ret_spt
DESC Static mem_ret support
F 9 1 sta_off_emu_spt
DESC Static off_emu support
F 8 1 sta_all_off_spt
DESC Static off support
F 4 4 num_opmodes
DESC Number of operational modes
F 0 4 devchan
DESC Number of device interface channels
R 0x1fb4 32 RO - por_hnf_ppu_idr1
RESET 0x0 0xf
DESC Provides identification information for the HN-F PPU.
F 3 1 dyn_policy_min_irq_spt
DESC Dynamic minimum policy interrupt support
F 2 1 off_lock_spt
DESC Off and mem_ret lock support
F 1 1 sw_dev_del_config_spt
DESC Software device delay control configuration support
F 0 1 pwr_mode_entry_del_spt
DESC Power mode entry delay support
R 0x1fc8 32 RO - por_hnf_ppu_iidr
RESET 0x4340043b 0xffffffff
DESC Functions as the power implementation identification register for HN-F.
F 20 12 product_id
DESC Implementation identifier
F 16 4 variant
DESC Implementation variant
F 12 4 revision
DESC Implementation revision
F 0 12 implementer
DESC Arm implementation
R 0x1fcc 32 RO - por_hnf_ppu_aidr
RESET 0x11 0xff
DESC Functions as the power architecture identification register for HN-F.
F 4 4 arch_rev_major
DESC PPU architecture major revision
F 0 4 arch_rev_minor
DESC PPU architecture minor revision
R 0x2000 64 - - por_hnf_pmu_event_sel
RESET 0x0 0x71f1f1f1f
DESC Specifies the PMU event to be counted.
F 0 5 pmu_event0_id
DESC HN-F PMU Event 0 select 5'h00: No event 5'h01: PMU_HN_CACHE_MISS_EVENT; counts total cache misses in first lookup result (high priority) 5'h02: PMU_HN_SLCSF_CACHE_ACCESS_EVENT; counts number of cache accesses in first access (high priority) 5'h03: PMU_HN_CACHE_FILL_EVENT; counts total allocations in HN SLC (all cache line allocations to SLC) 5'h04: PMU_HN_POCQ_RETRY_EVENT; counts number of retried requests 5'h05: PMU_HN_POCQ_REQS_RECVD_EVENT; counts number of requests received by HN 5'h06: PMU_HN_SF_HIT_EVENT; counts number of SF hits 5'h07: PMU_HN_SF_EVICTIONS_EVENT; counts number of SF eviction cache invalidations initiated 5'h08: PMU_HN_DIR_SNOOPS_SENT_EVENT; counts number of directed snoops sent (not including SF back invalidation) 5'h09: PMU_HN_DIR_SNOOPS_SENTEVENT; counts number of multicast snoops send (not including SF back invalidation) 5'h0A: PMU_HN_SLC_EVICTION_EVENT; counts number of SLC evictions (dirty only) 5'h0B: PMU_HN_SLC_FILL_INVALID_WAY_EVENT; counts number of SLC fills to an invalid way 5'h0C: PMU_HN_MC_RETRIES_EVENT; counts number of retried transactions by the MC 5'h0D: PMU_HN_MC_REQS_EVENT; counts number of requests sent to MC 5'h0E: PMU_HN_QOS_HH_RETRY_EVENT; counts number of times a HighHigh priority request is protocol retried at the HN-F 5'h0F: PMU_HN_POCQ_OCCUPANCY_EVENT; counts the POCQ occupancy in HN-F; occupancy filtering is programmed in pmu_occup1_id 5'h10: PMU_HN_POCQ_ADDRHAZ_EVENT; counts number of POCQ address hazards upon allocation 5'h11: PMU_HN_POCQ_ATOMICS_ADDRHAZ_EVENT; counts number of POCQ address hazards upon allocation for atomic operations 5'h12: PMU_HN_LD_ST_SWP_ADQ_FULL_EVENT; counts number of times ADQ is full for Ld/St/SWP type atomic operations while POCQ has pending operations 5'h13: PMU_HN_CMP_ADQ_FULL_EVENT; counts number of times ADQ is full for CMP type atomic operations while POCQ has pending operations 5'h14: PMU_HN_TXDAT_STALL_EVENT; counts number of times HN-F has a pending TXDAT flit but no credits to upload 5'h15: PMU_HN_TXRSP_STALL_EVENT; counts number of times HN-F has a pending TXRSP flit but no credits to upload 5'h16: PMU_HN_SEQ_FULL_EVENT; counts number of times requests are replayed in SLC pipe due to SEQ being full 5'h17: PMU_HN_SEQ_HIT_EVENT; counts number of times a request in SLC hit a pending SF eviction in SEQ 5'h18: PMU_HN_SNP_SENT_EVENT; counts number of snoops sent including directed/multicast/SF back invalidation 5'h19: PMU_HN_SFBI_DIR_SNP_SENT_EVENT; counts number of times directed snoops were sent due to SF back invalidation 5'h1a: PMU_HN_SFBI_BRD_SNP_SENT_EVENT; counts number of times multicast snoops were sent due to SF back invalidation 5'h1b: PMU_HN_SNP_SENT_UNTRK_EVENT; counts number of times snooped were sent due to untracked RN-Fs 5'h1c: PMU_HN_INTV_DIRTY_EVENT; counts number of times SF back invalidation resulted in dirty line intervention from the RN 5'h1d: PMU_HN_STASH_SNP_SENT_EVENT; counts number of times stash snoops sent 5'h1e: PMU_HN_STASH_DATA_PULL_EVENT; counts number of times stash snoops resulted in data pull from the RN 5'h1f: PMU_HN_SNP_FWDED_EVENT; counts number of times data forward snoops sent
F 8 5 pmu_event1_id
DESC HN-F PMU Event 1 select; see pmu_event0_id for encodings
F 16 5 pmu_event2_id
DESC HN-F PMU Event 2 select; see pmu_event0_id for encodings
F 24 5 pmu_event3_id
DESC HN-F PMU Event 3 select; see pmu_event0_id for encodings
F 32 3 pmu_occup1_id
DESC HN-F PMU occupancy 1 select 3'b000: All occupancy selected 3'b001: Read requests 3'b010: Write requests 3'b011: Atomic operation requests 3'b100: Stash requests
R 0x3000 64 RO S por_hnf_errfr
RESET 0x48a5 0x7cff
DESC Functions as the error feature register.
F 0 2 ED
DESC Error detection
F 2 2 DE
DESC Deferred errors for data poison
F 4 2 UI
DESC Uncorrected error interrupt
F 6 2 FI
DESC Fault handling interrupt
F 10 2 CFI
DESC Corrected error interrupt
F 12 3 CEC
DESC Standard corrected error count mechanism 3'b000: Does not implement standardized error counter model 3'b010: Implements 8-bit error counter in por_hnf_errmisc[39:32] 3'b100: Implements 16-bit error counter in por_hnf_errmisc[47:32]
R 0x3008 64 - S por_hnf_errctlr
RESET 0x0 0x10f
DESC Functions as the error control register. Controls whether specific error-handling interrupts and error detection/deferment are enabled.
F 0 1 ED
DESC Enables error detection as specified in por_hnf_errfr.ED
F 1 1 DE
DESC Enables error deferment as specified in por_hnf_errfr.DE
F 2 1 UI
DESC Enables uncorrected error interrupt as specified in por_hnf_errfr.UI
F 3 1 FI
DESC Enables fault handling interrupt for all detected deferred errors as specified in por_hnf_errfr.FI
F 8 1 CFI
DESC Enables corrected error interrupt as specified in por_hnf_errfr.CFI
R 0x3010 64 - S por_hnf_errstatus
RESET 0x0 0xed800000
DESC Functions as the error status register. AV and MV bits must be cleared in the same cycle, otherwise the error record does not have a consistent view.
F 31 1 AV
DESC Address register valid; writes to this bit are ignored if any of the UE, DE, or CE bits are set to 1, and the highest priority are not cleared to 0 in the same write; write a 1 to clear 1'b1: Address is valid; por_hnf_erraddr contains a physical address for that recorded error 1'b0: Address is not valid
F 30 1 V
DESC Register valid; writes to this bit are ignored if any of the UE, DE, or CE bits are set to 1, and are not cleared to 0 in the same write; write a 1 to clear 1'b1: At least one error recorded; register is valid 1'b0: No errors recorded
F 29 1 UE
DESC Uncorrected errors; writes to this bit are ignored if the OF bit is set to 1, and is not cleared to 0 in the same write; write a 1 to clear 1'b1: At least one error detected that is not corrected and is not deferred to a slave 1'b0: No uncorrected errors detected
F 27 1 OF
DESC Overflow; asserted when multiple errors of the highest priority type are detected; write a 1 to clear 1'b1: More than one error detected 1'b0: Only one error of the highest priority type detected as described by UE/DE/CE fields
F 26 1 MV
DESC por_hnf_errmisc valid; writes to this bit are ignored if any of the UE, DE, or CE bits are set to 1, and the highest priority are not cleared to 0 in the same write; write a 1 to clear 1'b1: Miscellaneous registers are valid 1'b0: Miscellaneous registers are not valid
F 24 1 CE
DESC Corrected errors; writes to this bit are ignored if the OF bit is set to 1, and is not cleared to 0 in the same write; write a 1 to clear 1'b1: At least one transient corrected error recorded 1'b0: No corrected errors recorded
F 23 1 DE
DESC Deferred errors; writes to this bit are ignored if the OF bit is set to 1, and is not cleared to 0 in the same write; write a 1 to clear 1'b1: At least one error is not corrected and is deferred 1'b0: No errors deferred
R 0x3018 64 - S por_hnf_erraddr
RESET 0x0 0x8000ffffffffffff
DESC Contains the error record address.
F 63 1 NS
DESC Security status of transaction 1'b1: Non-secure transaction 1'b0: Secure transaction CONSTRAINT: por_hnf_erraddr.NS is redundant. Since it is writable, it cannot be used for logic qualification.
F 0 48 ADDR
DESC Transaction address
R 0x3020 64 - S por_hnf_errmisc
RESET 0x0 0xdfffffff00037fff
DESC Functions as the miscellaneous error register. Contains miscellaneous information about deferred/uncorrected errors.
F 63 1 CECOF
DESC Corrected error counter overflow
F 32 16 CEC
DESC Corrected ECC error count
F 4 11 SRCID
DESC Error source ID
F 16 2 OPTYPE
DESC Error op type 2'b00: Writes, CleanShared, Atomics and stash requests with invalid targets 2'b01: WriteBack, Evict, and Stash requests with valid target 2'b10: CMO 2'b11: Other op types
F 48 13 ERRSET
DESC SLC/SF set address for ECC error
F 62 1 SETMATCH
DESC Set address match
F 0 4 ERRSRC
DESC Error source 4'b0001: Data single-bit ECC 4'b0010: Data double-bit ECC 4'b0011: Single-bit ECC overflow 4'b0100: Tag single-bit ECC 4'b0101: Tag double-bit ECC 4'b0111: SF tag single-bit ECC 4'b1000: SF tag double-bit ECC 4'b1010: Data parity error 4'b1011: Data parity and poison 4'b1100: NDE
R 0x3030 64 - S por_hnf_err_inj
RESET 0x0 0x7ff01f1
DESC Enables error injection and setup. When enabled for a given source ID and logic processor ID, HN-F returns a slave error and reports an error interrupt. This error interrupt emulates a SLC double-bit data ECC error. This feature enables software to test the error handler. The slave error is reported for cacheable read access for which SLC hit is the data source. No slave error or error interrupt is reported for cacheable read access in which SLC miss is the data source.
F 0 1 hnf_err_inj_en
DESC Enables error injection and report
F 4 5 hnf_err_inj_lpid
DESC LPID used to match for error injection
F 16 11 hnf_err_inj_srcid
DESC RN source ID for read access which results in a SLC miss; does not report slave error or error to match error injection
R 0x3038 64 WO S por_hnf_byte_par_err_inj
RESET 0x0 0x1f
DESC Functions as the byte parity error injection register for HN-F.
F 0 5 hnf_byte_par_err_inj
DESC Specifies a byte lane; once this register is written, a byte parity error is injected in the specified byte lane on the next SLC hit; the error will be injected in all data flits on specified byte (0 to 31)
R 0x3100 64 RO - por_hnf_errfr_NS
RESET 0x48a5 0x7cff
DESC Functions as the non-secure error feature register.
F 0 2 ED
DESC Error detection
F 2 2 DE
DESC Deferred errors for data poison
F 4 2 UI
DESC Uncorrected error interrupt
F 6 2 FI
DESC Fault handling interrupt
F 10 2 CFI
DESC Corrected error interrupt
F 12 3 CEC
DESC Standard corrected error count mechanism 3'b000: Does not implement standardized error counter model 3'b010: Implements 8-bit error counter in por_hnf_errmisc_NS[39:32] 3'b100: Implements 16-bit error counter in por_hnf_errmisc_NS[47:32]
R 0x3108 64 - - por_hnf_errctlr_NS
RESET 0x0 0x10f
DESC Functions as the non-secure error control register. Controls whether specific error-handling interrupts and error detection/deferment are enabled.
F 0 1 ED
DESC Enables error detection as specified in por_hnf_errfr_NS.ED
F 1 1 DE
DESC Enables error deferment as specified in por_hnf_errfr_NS.DE
F 2 1 UI
DESC Enables uncorrected error interrupt as specified in por_hnf_errfr_NS.UI
F 3 1 FI
DESC Enables fault handling interrupt for all detected deferred errors as specified in por_hnf_errfr_NS.FI
F 8 1 CFI
DESC Enables corrected error interrupt as specified in por_hnf_errfr_NS.CFI
R 0x3110 64 - - por_hnf_errstatus_NS
RESET 0x0 0xed800000
DESC Functions as the non-secure error status register. AV and MV bits must be cleared in the same cycle, otherwise the error record does not have a consistent view.
F 31 1 AV
DESC Address register valid; writes to this bit are ignored if any of the UE, DE, or CE bits are set to 1, and the highest priority are not cleared to 0 in the same write; write a 1 to clear 1'b1: Address is valid; por_hnf_erraddr_NS contains a physical address for that recorded error 1'b0: Address is not valid
F 30 1 V
DESC Register valid; writes to this bit are ignored if any of the UE, DE, or CE bits are set to 1, and are not cleared to 0 in the same write; write a 1 to clear 1'b1: At least one error recorded; register is valid 1'b0: No errors recorded
F 29 1 UE
DESC Uncorrected errors; writes to this bit are ignored if the OF bit is set to 1, and is not cleared to 0 in the same write; write a 1 to clear 1'b1: At least one error detected that is not corrected and is not deferred to a slave 1'b0: No uncorrected errors detected
F 27 1 OF
DESC Overflow; asserted when multiple errors of the highest priority type are detected; write a 1 to clear 1'b1: More than one error detected 1'b0: Only one error of the highest priority type detected as described by UE/DE/CE fields
F 26 1 MV
DESC por_hnf_errmisc_NS valid; writes to this bit are ignored if any of the UE, DE, or CE bits are set to 1, and the highest priority are not cleared to 0 in the same write; write a 1 to clear 1'b1: Miscellaneous registers are valid 1'b0: Miscellaneous registers are not valid
F 24 1 CE
DESC Corrected errors; writes to this bit are ignored if the OF bit is set to 1, and is not cleared to 0 in the same write; write a 1 to clear 1'b1: At least one transient corrected error recorded 1'b0: No corrected errors recorded
F 23 1 DE
DESC Deferred errors; writes to this bit are ignored if the OF bit is set to 1, and is not cleared to 0 in the same write; write a 1 to clear 1'b1: At least one error is not corrected and is deferred 1'b0: No errors deferred
R 0x3118 64 - - por_hnf_erraddr_NS
RESET 0x0 0x8000ffffffffffff
DESC Contains the non-secure error record address.
F 63 1 NS
DESC Security status of transaction 1'b1: Non-secure transaction 1'b0: Secure transaction CONSTRAINT: por_hnf_erraddr_NS.NS is redundant. Since it is writable, it cannot be used for logic qualification.
F 0 48 ADDR
DESC Transaction address
R 0x3120 64 - - por_hnf_errmisc_NS
RESET 0x0 0xdfffffff00037fff
DESC Functions as the non-secure miscellaneous error register. Contains miscellaneous information about deferred/uncorrected errors.
F 63 1 CECOF
DESC Corrected error counter overflow
F 32 16 CEC
DESC Corrected ECC error count
F 4 11 SRCID
DESC Error source ID
F 16 2 OPTYPE
DESC Error op type 2'b00: Writes, CleanShared, Atomics and stash requests with invalid targets 2'b01: WriteBack, Evict, and Stash requests with valid target 2'b10: CMO 2'b11: Other op types
F 48 13 ERRSET
DESC SLC/SF set address for ECC error
F 62 1 SETMATCH
DESC Set address match
F 0 4 ERRSRC
DESC Error source 4'b0001: Data single-bit ECC 4'b0010: Data double-bit ECC 4'b0011: Single-bit ECC overflow 4'b0100: Tag single-bit ECC 4'b0101: Tag double-bit ECC 4'b0111: SF tag single-bit ECC 4'b1000: SF tag double-bit ECC 4'b1010: Data parity error 4'b1011: Data parity and poison 4'b1100: NDE
ENDGROUP
GROUP por_dn_registers
R 0x0 64 RO - por_dn_node_info
RESET 0x1 0xffffffffffff
DESC Provides component identification information.
F 0 16 node_type
DESC CMN-600 node type identifier
F 16 16 node_id
DESC Component CHI node ID
PAR NODEID_PARAM
F 32 16 logical_id
DESC Component logical ID
PAR LOGICALID_PARAM
R 0x80 64 RO - por_dn_child_info
RESET 0x0 0xffffffff
DESC Provides component child identification information.
F 0 16 child_count
DESC Number of child nodes; used in discovery process
F 16 16 child_ptr_offset
DESC Starting register offset which contains pointers to the child nodes
R 0x900 64 RO - por_dn_build_info
RESET 0x1 0x1
DESC Contains the configuration parameter values. Indicates the specific DN configuration.
F 0 1 dvm_v8_1_en
DESC Determines whether all nodes receiving DVM snoops support DVM v8.1 operations; must be set to 0 if not supported by all nodes, therefore allowing the node to perform demotion before sending out the DVM snoop
PAR DN_DVM_V8_1_EN_PARAM
R 0x980 64 - S por_dn_secure_register_groups_override
RESET 0x0 0x1
DESC Allows non-secure access to predefined groups of secure registers.
F 0 1 vmf
DESC Allows non-secure access to secure VMF registers
R 0xa00 64 - S por_dn_aux_ctl
RESET 0x0 0x7
DESC Functions as the auxiliary control register for DN.
F 0 1 disable_vmf
DESC This bit is currently not supported. Software must not program this bit.
PAR POR_R2_ENABLE_PARAM
F 1 1 disable_clk_gating
DESC Disables autonomous clock gating when set
F 2 1 enable_rnd_icache_ops
DESC Filters out BPI and VICI/PICI Snps to RNDs when set
PAR POR_R2_ENABLE_PARAM
R 0xc00 64 - S por_dn_vmf0_ctrl
RESET 0xffff00000000 0xffff0001ffff
DESC Functions as the control register for VMID-based DVM snoop filtering. NOTE: This register has no effect when por_dn_aux_ctl.disable_vmf is set to 1.
F 0 1 valid
DESC Register valid 1'b1: Register is enabled 1'b0: Register is not enabled
F 1 16 vmid
DESC VMID value NOTE: The incoming request's VMID is only compared with this VMID value if the request's VMID valid bit is set. If the request's VMID is valid and the two VMIDs match, filtering is applied to the incoming request.
F 32 16 mask
DESC VMID mask; enables mapping of multiple VMID values to a single register NOTE: Logically, the AND operator is performed on the mask and por_dn_vmf0_ctrl.vmid. Then, the AND operator is performed on the mask and the incoming request's VMID. The two results are then compared, and filtering is applied to the incoming request if the masked VMIDs match.
R 0xc08 64 - S por_dn_vmf0_rnf0
RESET 0x0 0xffffffffffffffff
DESC Contains the logical RN-F bit vector 63:0 corresponding to por_dn_vmf0_ctrl.vmid. Used for VMID-based DVM snoop filtering.
F 0 64 snp_destvec0
DESC RN-F bit vector 63:0 corresponding to por_dn_vmf0_ctrl.vmid
R 0xc10 64 - S por_dn_vmf0_rnd
RESET 0x0 0xffffffffffffffff
DESC Contains the logical RN-D bit vector 63:0 corresponding to por_dn_vmf0_ctrl.vmid. Used for VMID-based DVM snoop filtering.
F 0 64 snp_destvec
DESC RN-D bit vector 63:0 corresponding to por_dn_vmf0_ctrl.vmid
R 0xc18 64 - S por_dn_vmf0_cxra
RESET 0x0 0xffffffffffffffff
DESC Contains the logical CXRA bit vector 63:0 corresponding to por_dn_vmf0_ctrl.vmid. Used for VMID-based DVM snoop filtering. NOTE: Not applicable in a single-chip CMN-600 system. Does not have any effect.
F 0 64 snp_destvec
DESC CXRA bit vector 63:0 corresponding to por_dn_vmf0_ctrl.vmid
R 0xc20 64 - S por_dn_vmf1_ctrl
RESET 0xffff00000000 0xffff0001ffff
DESC Functions as the control register for VMID-based DVM snoop filtering. NOTE: This register has no effect when por_dn_aux_ctl.disable_vmf is set to 1.
F 0 1 valid
DESC Register valid 1'b1: Register is enabled 1'b0: Register is not enabled
F 1 16 vmid
DESC VMID value NOTE: The incoming request's VMID is only compared with this VMID value if the request's VMID valid bit is set. If the request's VMID is valid and the two VMIDs match, filtering is applied to the incoming request.
F 32 16 mask
DESC VMID mask; enables mapping of multiple VMID values to a single register NOTE: Logically, the AND operator is performed on the mask and por_dn_vmf1_ctrl.vmid. Then, the AND operator is performed on the mask and the incoming request's VMID. The two results are then compared, and filtering is applied to the incoming request if the masked VMIDs match.
R 0xc28 64 - S por_dn_vmf1_rnf0
RESET 0x0 0xffffffffffffffff
DESC Contains the logical RN-F bit vector 63:0 corresponding to por_dn_vmf1_ctrl.vmid. Used for VMID-based DVM snoop filtering.
F 0 64 snp_destvec0
DESC RN-F bit vector 63:0 corresponding to por_dn_vmf1_ctrl.vmid
R 0xc30 64 - S por_dn_vmf1_rnd
RESET 0x0 0xffffffffffffffff
DESC Contains the logical RN-D bit vector 63:0 corresponding to por_dn_vmf1_ctrl.vmid. Used for VMID-based DVM snoop filtering.
F 0 64 snp_destvec
DESC RN-D bit vector 63:0 corresponding to por_dn_vmf1_ctrl.vmid
R 0xc38 64 - S por_dn_vmf1_cxra
RESET 0x0 0xffffffffffffffff
DESC Contains the logical CXRA bit vector 63:0 corresponding to por_dn_vmf1_ctrl.vmid. Used for VMID-based DVM snoop filtering. NOTE: Not applicable in a single-chip CMN-600 system. Does not have any effect.
F 0 64 snp_destvec
DESC CXRA bit vector 63:0 corresponding to por_dn_vmf1_ctrl.vmid
R 0xc40 64 - S por_dn_vmf2_ctrl
RESET 0xffff00000000 0xffff0001ffff
DESC Functions as the control register for VMID-based DVM snoop filtering. NOTE: This register has no effect when por_dn_aux_ctl.disable_vmf is set to 1.
F 0 1 valid
DESC Register valid 1'b1: Register is enabled 1'b0: Register is not enabled
F 1 16 vmid
DESC VMID value NOTE: The incoming request's VMID is only compared with this VMID value if the request's VMID valid bit is set. If the request's VMID is valid and the two VMIDs match, filtering is applied to the incoming request.
F 32 16 mask
DESC VMID mask; enables mapping of multiple VMID values to a single register NOTE: Logically, the AND operator is performed on the mask and por_dn_vmf2_ctrl.vmid. Then, the AND operator is performed on the mask and the incoming request's VMID. The two results are then compared, and filtering is applied to the incoming request if the masked VMIDs match.
R 0xc48 64 - S por_dn_vmf2_rnf0
RESET 0x0 0xffffffffffffffff
DESC Contains the logical RN-F bit vector 63:0 corresponding to por_dn_vmf2_ctrl.vmid. Used for VMID-based DVM snoop filtering.
F 0 64 snp_destvec0
DESC RN-F bit vector 63:0 corresponding to por_dn_vmf2_ctrl.vmid
R 0xc50 64 - S por_dn_vmf2_rnd
RESET 0x0 0xffffffffffffffff
DESC Contains the logical RN-D bit vector 63:0 corresponding to por_dn_vmf2_ctrl.vmid. Used for VMID-based DVM snoop filtering.
F 0 64 snp_destvec
DESC RN-D bit vector 63:0 corresponding to por_dn_vmf2_ctrl.vmid
R 0xc58 64 - S por_dn_vmf2_cxra
RESET 0x0 0xffffffffffffffff
DESC Contains the logical CXRA bit vector 63:0 corresponding to por_dn_vmf2_ctrl.vmid. Used for VMID-based DVM snoop filtering. NOTE: Not applicable in a single-chip CMN-600 system. Does not have any effect.
F 0 64 snp_destvec
DESC CXRA bit vector 63:0 corresponding to por_dn_vmf2_ctrl.vmid
R 0xc60 64 - S por_dn_vmf3_ctrl
RESET 0xffff00000000 0xffff0001ffff
DESC Functions as the control register for VMID-based DVM snoop filtering. NOTE: This register has no effect when por_dn_aux_ctl.disable_vmf is set to 1.
F 0 1 valid
DESC Register valid 1'b1: Register is enabled 1'b0: Register is not enabled
F 1 16 vmid
DESC VMID value NOTE: The incoming request's VMID is only compared with this VMID value if the request's VMID valid bit is set. If the request's VMID is valid and the two VMIDs match, filtering is applied to the incoming request.
F 32 16 mask
DESC VMID mask; enables mapping of multiple VMID values to a single register NOTE: Logically, the AND operator is performed on the mask and por_dn_vmf3_ctrl.vmid. Then, the AND operator is performed on the mask and the incoming request's VMID. The two results are then compared, and filtering is applied to the incoming request if the masked VMIDs match.
R 0xc68 64 - S por_dn_vmf3_rnf0
RESET 0x0 0xffffffffffffffff
DESC Contains the logical RN-F bit vector 63:0 corresponding to por_dn_vmf3_ctrl.vmid. Used for VMID-based DVM snoop filtering.
F 0 64 snp_destvec0
DESC RN-F bit vector 63:0 corresponding to por_dn_vmf3_ctrl.vmid
R 0xc70 64 - S por_dn_vmf3_rnd
RESET 0x0 0xffffffffffffffff
DESC Contains the logical RN-D bit vector 63:0 corresponding to por_dn_vmf3_ctrl.vmid. Used for VMID-based DVM snoop filtering.
F 0 64 snp_destvec
DESC RN-D bit vector 63:0 corresponding to por_dn_vmf3_ctrl.vmid
R 0xc78 64 - S por_dn_vmf3_cxra
RESET 0x0 0xffffffffffffffff
DESC Contains the logical CXRA bit vector 63:0 corresponding to por_dn_vmf3_ctrl.vmid. Used for VMID-based DVM snoop filtering. NOTE: Not applicable in a single-chip CMN-600 system. Does not have any effect.
F 0 64 snp_destvec
DESC CXRA bit vector 63:0 corresponding to por_dn_vmf3_ctrl.vmid
R 0xc80 64 - S por_dn_vmf4_ctrl
RESET 0xffff00000000 0xffff0001ffff
DESC Functions as the control register for VMID-based DVM snoop filtering. NOTE: This register has no effect when por_dn_aux_ctl.disable_vmf is set to 1.
F 0 1 valid
DESC Register valid 1'b1: Register is enabled 1'b0: Register is not enabled
F 1 16 vmid
DESC VMID value NOTE: The incoming request's VMID is only compared with this VMID value if the request's VMID valid bit is set. If the request's VMID is valid and the two VMIDs match, filtering is applied to the incoming request.
F 32 16 mask
DESC VMID mask; enables mapping of multiple VMID values to a single register NOTE: Logically, the AND operator is performed on the mask and por_dn_vmf4_ctrl.vmid. Then, the AND operator is performed on the mask and the incoming request's VMID. The two results are then compared, and filtering is applied to the incoming request if the masked VMIDs match.
R 0xc88 64 - S por_dn_vmf4_rnf0
RESET 0x0 0xffffffffffffffff
DESC Contains the logical RN-F bit vector 63:0 corresponding to por_dn_vmf4_ctrl.vmid. Used for VMID-based DVM snoop filtering.
F 0 64 snp_destvec0
DESC RN-F bit vector 63:0 corresponding to por_dn_vmf4_ctrl.vmid
R 0xc90 64 - S por_dn_vmf4_rnd
RESET 0x0 0xffffffffffffffff
DESC Contains the logical RN-D bit vector 63:0 corresponding to por_dn_vmf4_ctrl.vmid. Used for VMID-based DVM snoop filtering.
F 0 64 snp_destvec
DESC RN-D bit vector 63:0 corresponding to por_dn_vmf4_ctrl.vmid
R 0xc98 64 - S por_dn_vmf4_cxra
RESET 0x0 0xffffffffffffffff
DESC Contains the logical CXRA bit vector 63:0 corresponding to por_dn_vmf4_ctrl.vmid. Used for VMID-based DVM snoop filtering. NOTE: Not applicable in a single-chip CMN-600 system. Does not have any effect.
F 0 64 snp_destvec
DESC CXRA bit vector 63:0 corresponding to por_dn_vmf4_ctrl.vmid
R 0xca0 64 - S por_dn_vmf5_ctrl
RESET 0xffff00000000 0xffff0001ffff
DESC Functions as the control register for VMID-based DVM snoop filtering. NOTE: This register has no effect when por_dn_aux_ctl.disable_vmf is set to 1.
F 0 1 valid
DESC Register valid 1'b1: Register is enabled 1'b0: Register is not enabled
F 1 16 vmid
DESC VMID value NOTE: The incoming request's VMID is only compared with this VMID value if the request's VMID valid bit is set. If the request's VMID is valid and the two VMIDs match, filtering is applied to the incoming request.
F 32 16 mask
DESC VMID mask; enables mapping of multiple VMID values to a single register NOTE: Logically, the AND operator is performed on the mask and por_dn_vmf5_ctrl.vmid. Then, the AND operator is performed on the mask and the incoming request's VMID. The two results are then compared, and filtering is applied to the incoming request if the masked VMIDs match.
R 0xca8 64 - S por_dn_vmf5_rnf0
RESET 0x0 0xffffffffffffffff
DESC Contains the logical RN-F bit vector 63:0 corresponding to por_dn_vmf5_ctrl.vmid. Used for VMID-based DVM snoop filtering.
F 0 64 snp_destvec0
DESC RN-F bit vector 63:0 corresponding to por_dn_vmf5_ctrl.vmid
R 0xcb0 64 - S por_dn_vmf5_rnd
RESET 0x0 0xffffffffffffffff
DESC Contains the logical RN-D bit vector 63:0 corresponding to por_dn_vmf5_ctrl.vmid. Used for VMID-based DVM snoop filtering.
F 0 64 snp_destvec
DESC RN-D bit vector 63:0 corresponding to por_dn_vmf5_ctrl.vmid
R 0xcb8 64 - S por_dn_vmf5_cxra
RESET 0x0 0xffffffffffffffff
DESC Contains the logical CXRA bit vector 63:0 corresponding to por_dn_vmf5_ctrl.vmid. Used for VMID-based DVM snoop filtering. NOTE: Not applicable in a single-chip CMN-600 system. Does not have any effect.
F 0 64 snp_destvec
DESC CXRA bit vector 63:0 corresponding to por_dn_vmf5_ctrl.vmid
R 0xcc0 64 - S por_dn_vmf6_ctrl
RESET 0xffff00000000 0xffff0001ffff
DESC Functions as the control register for VMID-based DVM snoop filtering. NOTE: This register has no effect when por_dn_aux_ctl.disable_vmf is set to 1.
F 0 1 valid
DESC Register valid 1'b1: Register is enabled 1'b0: Register is not enabled
F 1 16 vmid
DESC VMID value NOTE: The incoming request's VMID is only compared with this VMID value if the request's VMID valid bit is set. If the request's VMID is valid and the two VMIDs match, filtering is applied to the incoming request.
F 32 16 mask
DESC VMID mask; enables mapping of multiple VMID values to a single register NOTE: Logically, the AND operator is performed on the mask and por_dn_vmf6_ctrl.vmid. Then, the AND operator is performed on the mask and the incoming request's VMID. The two results are then compared, and filtering is applied to the incoming request if the masked VMIDs match.
R 0xcc8 64 - S por_dn_vmf6_rnf0
RESET 0x0 0xffffffffffffffff
DESC Contains the logical RN-F bit vector 63:0 corresponding to por_dn_vmf6_ctrl.vmid. Used for VMID-based DVM snoop filtering.
F 0 64 snp_destvec0
DESC RN-F bit vector 63:0 corresponding to por_dn_vmf6_ctrl.vmid
R 0xcd0 64 - S por_dn_vmf6_rnd
RESET 0x0 0xffffffffffffffff
DESC Contains the logical RN-D bit vector 63:0 corresponding to por_dn_vmf6_ctrl.vmid. Used for VMID-based DVM snoop filtering.
F 0 64 snp_destvec
DESC RN-D bit vector 63:0 corresponding to por_dn_vmf6_ctrl.vmid
R 0xcd8 64 - S por_dn_vmf6_cxra
RESET 0x0 0xffffffffffffffff
DESC Contains the logical CXRA bit vector 63:0 corresponding to por_dn_vmf6_ctrl.vmid. Used for VMID-based DVM snoop filtering. NOTE: Not applicable in a single-chip CMN-600 system. Does not have any effect.
F 0 64 snp_destvec
DESC CXRA bit vector 63:0 corresponding to por_dn_vmf6_ctrl.vmid
R 0xce0 64 - S por_dn_vmf7_ctrl
RESET 0xffff00000000 0xffff0001ffff
DESC Functions as the control register for VMID-based DVM snoop filtering. NOTE: This register has no effect when por_dn_aux_ctl.disable_vmf is set to 1.
F 0 1 valid
DESC Register valid 1'b1: Register is enabled 1'b0: Register is not enabled
F 1 16 vmid
DESC VMID value NOTE: The incoming request's VMID is only compared with this VMID value if the request's VMID valid bit is set. If the request's VMID is valid and the two VMIDs match, filtering is applied to the incoming request.
F 32 16 mask
DESC VMID mask; enables mapping of multiple VMID values to a single register NOTE: Logically, the AND operator is performed on the mask and por_dn_vmf7_ctrl.vmid. Then, the AND operator is performed on the mask and the incoming request's VMID. The two results are then compared, and filtering is applied to the incoming request if the masked VMIDs match.
R 0xce8 64 - S por_dn_vmf7_rnf0
RESET 0x0 0xffffffffffffffff
DESC Contains the logical RN-F bit vector 63:0 corresponding to por_dn_vmf7_ctrl.vmid. Used for VMID-based DVM snoop filtering.
F 0 64 snp_destvec0
DESC RN-F bit vector 63:0 corresponding to por_dn_vmf7_ctrl.vmid
R 0xcf0 64 - S por_dn_vmf7_rnd
RESET 0x0 0xffffffffffffffff
DESC Contains the logical RN-D bit vector 63:0 corresponding to por_dn_vmf7_ctrl.vmid. Used for VMID-based DVM snoop filtering.
F 0 64 snp_destvec
DESC RN-D bit vector 63:0 corresponding to por_dn_vmf7_ctrl.vmid
R 0xcf8 64 - S por_dn_vmf7_cxra
RESET 0x0 0xffffffffffffffff
DESC Contains the logical CXRA bit vector 63:0 corresponding to por_dn_vmf7_ctrl.vmid. Used for VMID-based DVM snoop filtering. NOTE: Not applicable in a single-chip CMN-600 system. Does not have any effect.
F 0 64 snp_destvec
DESC CXRA bit vector 63:0 corresponding to por_dn_vmf7_ctrl.vmid
R 0xd00 64 - S por_dn_vmf8_ctrl
RESET 0xffff00000000 0xffff0001ffff
DESC Functions as the control register for VMID-based DVM snoop filtering. NOTE: This register has no effect when por_dn_aux_ctl.disable_vmf is set to 1.
F 0 1 valid
DESC Register valid 1'b1: Register is enabled 1'b0: Register is not enabled
F 1 16 vmid
DESC VMID value NOTE: The incoming request's VMID is only compared with this VMID value if the request's VMID valid bit is set. If the request's VMID is valid and the two VMIDs match, filtering is applied to the incoming request.
F 32 16 mask
DESC VMID mask; enables mapping of multiple VMID values to a single register NOTE: Logically, the AND operator is performed on the mask and por_dn_vmf8_ctrl.vmid. Then, the AND operator is performed on the mask and the incoming request's VMID. The two results are then compared, and filtering is applied to the incoming request if the masked VMIDs match.
R 0xd08 64 - S por_dn_vmf8_rnf0
RESET 0x0 0xffffffffffffffff
DESC Contains the logical RN-F bit vector 63:0 corresponding to por_dn_vmf8_ctrl.vmid. Used for VMID-based DVM snoop filtering.
F 0 64 snp_destvec0
DESC RN-F bit vector 63:0 corresponding to por_dn_vmf8_ctrl.vmid
R 0xd10 64 - S por_dn_vmf8_rnd
RESET 0x0 0xffffffffffffffff
DESC Contains the logical RN-D bit vector 63:0 corresponding to por_dn_vmf8_ctrl.vmid. Used for VMID-based DVM snoop filtering.
F 0 64 snp_destvec
DESC RN-D bit vector 63:0 corresponding to por_dn_vmf8_ctrl.vmid
R 0xd18 64 - S por_dn_vmf8_cxra
RESET 0x0 0xffffffffffffffff
DESC Contains the logical CXRA bit vector 63:0 corresponding to por_dn_vmf8_ctrl.vmid. Used for VMID-based DVM snoop filtering. NOTE: Not applicable in a single-chip CMN-600 system. Does not have any effect.
F 0 64 snp_destvec
DESC CXRA bit vector 63:0 corresponding to por_dn_vmf8_ctrl.vmid
R 0xd20 64 - S por_dn_vmf9_ctrl
RESET 0xffff00000000 0xffff0001ffff
DESC Functions as the control register for VMID-based DVM snoop filtering. NOTE: This register has no effect when por_dn_aux_ctl.disable_vmf is set to 1.
F 0 1 valid
DESC Register valid 1'b1: Register is enabled 1'b0: Register is not enabled
F 1 16 vmid
DESC VMID value NOTE: The incoming request's VMID is only compared with this VMID value if the request's VMID valid bit is set. If the request's VMID is valid and the two VMIDs match, filtering is applied to the incoming request.
F 32 16 mask
DESC VMID mask; enables mapping of multiple VMID values to a single register NOTE: Logically, the AND operator is performed on the mask and por_dn_vmf9_ctrl.vmid. Then, the AND operator is performed on the mask and the incoming request's VMID. The two results are then compared, and filtering is applied to the incoming request if the masked VMIDs match.
R 0xd28 64 - S por_dn_vmf9_rnf0
RESET 0x0 0xffffffffffffffff
DESC Contains the logical RN-F bit vector 63:0 corresponding to por_dn_vmf9_ctrl.vmid. Used for VMID-based DVM snoop filtering.
F 0 64 snp_destvec0
DESC RN-F bit vector 63:0 corresponding to por_dn_vmf9_ctrl.vmid
R 0xd30 64 - S por_dn_vmf9_rnd
RESET 0x0 0xffffffffffffffff
DESC Contains the logical RN-D bit vector 63:0 corresponding to por_dn_vmf9_ctrl.vmid. Used for VMID-based DVM snoop filtering.
F 0 64 snp_destvec
DESC RN-D bit vector 63:0 corresponding to por_dn_vmf9_ctrl.vmid
R 0xd38 64 - S por_dn_vmf9_cxra
RESET 0x0 0xffffffffffffffff
DESC Contains the logical CXRA bit vector 63:0 corresponding to por_dn_vmf9_ctrl.vmid. Used for VMID-based DVM snoop filtering. NOTE: Not applicable in a single-chip CMN-600 system. Does not have any effect.
F 0 64 snp_destvec
DESC CXRA bit vector 63:0 corresponding to por_dn_vmf9_ctrl.vmid
R 0xd40 64 - S por_dn_vmf10_ctrl
RESET 0xffff00000000 0xffff0001ffff
DESC Functions as the control register for VMID-based DVM snoop filtering. NOTE: This register has no effect when por_dn_aux_ctl.disable_vmf is set to 1.
F 0 1 valid
DESC Register valid 1'b1: Register is enabled 1'b0: Register is not enabled
F 1 16 vmid
DESC VMID value NOTE: The incoming request's VMID is only compared with this VMID value if the request's VMID valid bit is set. If the request's VMID is valid and the two VMIDs match, filtering is applied to the incoming request.
F 32 16 mask
DESC VMID mask; enables mapping of multiple VMID values to a single register NOTE: Logically, the AND operator is performed on the mask and por_dn_vmf10_ctrl.vmid. Then, the AND operator is performed on the mask and the incoming request's VMID. The two results are then compared, and filtering is applied to the incoming request if the masked VMIDs match.
R 0xd48 64 - S por_dn_vmf10_rnf0
RESET 0x0 0xffffffffffffffff
DESC Contains the logical RN-F bit vector 63:0 corresponding to por_dn_vmf10_ctrl.vmid. Used for VMID-based DVM snoop filtering.
F 0 64 snp_destvec0
DESC RN-F bit vector 63:0 corresponding to por_dn_vmf10_ctrl.vmid
R 0xd50 64 - S por_dn_vmf10_rnd
RESET 0x0 0xffffffffffffffff
DESC Contains the logical RN-D bit vector 63:0 corresponding to por_dn_vmf10_ctrl.vmid. Used for VMID-based DVM snoop filtering.
F 0 64 snp_destvec
DESC RN-D bit vector 63:0 corresponding to por_dn_vmf10_ctrl.vmid
R 0xd58 64 - S por_dn_vmf10_cxra
RESET 0x0 0xffffffffffffffff
DESC Contains the logical CXRA bit vector 63:0 corresponding to por_dn_vmf10_ctrl.vmid. Used for VMID-based DVM snoop filtering. NOTE: Not applicable in a single-chip CMN-600 system. Does not have any effect.
F 0 64 snp_destvec
DESC CXRA bit vector 63:0 corresponding to por_dn_vmf10_ctrl.vmid
R 0xd60 64 - S por_dn_vmf11_ctrl
RESET 0xffff00000000 0xffff0001ffff
DESC Functions as the control register for VMID-based DVM snoop filtering. NOTE: This register has no effect when por_dn_aux_ctl.disable_vmf is set to 1.
F 0 1 valid
DESC Register valid 1'b1: Register is enabled 1'b0: Register is not enabled
F 1 16 vmid
DESC VMID value NOTE: The incoming request's VMID is only compared with this VMID value if the request's VMID valid bit is set. If the request's VMID is valid and the two VMIDs match, filtering is applied to the incoming request.
F 32 16 mask
DESC VMID mask; enables mapping of multiple VMID values to a single register NOTE: Logically, the AND operator is performed on the mask and por_dn_vmf11_ctrl.vmid. Then, the AND operator is performed on the mask and the incoming request's VMID. The two results are then compared, and filtering is applied to the incoming request if the masked VMIDs match.
R 0xd68 64 - S por_dn_vmf11_rnf0
RESET 0x0 0xffffffffffffffff
DESC Contains the logical RN-F bit vector 63:0 corresponding to por_dn_vmf11_ctrl.vmid. Used for VMID-based DVM snoop filtering.
F 0 64 snp_destvec0
DESC RN-F bit vector 63:0 corresponding to por_dn_vmf11_ctrl.vmid
R 0xd70 64 - S por_dn_vmf11_rnd
RESET 0x0 0xffffffffffffffff
DESC Contains the logical RN-D bit vector 63:0 corresponding to por_dn_vmf11_ctrl.vmid. Used for VMID-based DVM snoop filtering.
F 0 64 snp_destvec
DESC RN-D bit vector 63:0 corresponding to por_dn_vmf11_ctrl.vmid
R 0xd78 64 - S por_dn_vmf11_cxra
RESET 0x0 0xffffffffffffffff
DESC Contains the logical CXRA bit vector 63:0 corresponding to por_dn_vmf11_ctrl.vmid. Used for VMID-based DVM snoop filtering. NOTE: Not applicable in a single-chip CMN-600 system. Does not have any effect.
F 0 64 snp_destvec
DESC CXRA bit vector 63:0 corresponding to por_dn_vmf11_ctrl.vmid
R 0xd80 64 - S por_dn_vmf12_ctrl
RESET 0xffff00000000 0xffff0001ffff
DESC Functions as the control register for VMID-based DVM snoop filtering. NOTE: This register has no effect when por_dn_aux_ctl.disable_vmf is set to 1.
F 0 1 valid
DESC Register valid 1'b1: Register is enabled 1'b0: Register is not enabled
F 1 16 vmid
DESC VMID value NOTE: The incoming request's VMID is only compared with this VMID value if the request's VMID valid bit is set. If the request's VMID is valid and the two VMIDs match, filtering is applied to the incoming request.
F 32 16 mask
DESC VMID mask; enables mapping of multiple VMID values to a single register NOTE: Logically, the AND operator is performed on the mask and por_dn_vmf12_ctrl.vmid. Then, the AND operator is performed on the mask and the incoming request's VMID. The two results are then compared, and filtering is applied to the incoming request if the masked VMIDs match.
R 0xd88 64 - S por_dn_vmf12_rnf0
RESET 0x0 0xffffffffffffffff
DESC Contains the logical RN-F bit vector 63:0 corresponding to por_dn_vmf12_ctrl.vmid. Used for VMID-based DVM snoop filtering.
F 0 64 snp_destvec0
DESC RN-F bit vector 63:0 corresponding to por_dn_vmf12_ctrl.vmid
R 0xd90 64 - S por_dn_vmf12_rnd
RESET 0x0 0xffffffffffffffff
DESC Contains the logical RN-D bit vector 63:0 corresponding to por_dn_vmf12_ctrl.vmid. Used for VMID-based DVM snoop filtering.
F 0 64 snp_destvec
DESC RN-D bit vector 63:0 corresponding to por_dn_vmf12_ctrl.vmid
R 0xd98 64 - S por_dn_vmf12_cxra
RESET 0x0 0xffffffffffffffff
DESC Contains the logical CXRA bit vector 63:0 corresponding to por_dn_vmf12_ctrl.vmid. Used for VMID-based DVM snoop filtering. NOTE: Not applicable in a single-chip CMN-600 system. Does not have any effect.
F 0 64 snp_destvec
DESC CXRA bit vector 63:0 corresponding to por_dn_vmf12_ctrl.vmid
R 0xda0 64 - S por_dn_vmf13_ctrl
RESET 0xffff00000000 0xffff0001ffff
DESC Functions as the control register for VMID-based DVM snoop filtering. NOTE: This register has no effect when por_dn_aux_ctl.disable_vmf is set to 1.
F 0 1 valid
DESC Register valid 1'b1: Register is enabled 1'b0: Register is not enabled
F 1 16 vmid
DESC VMID value NOTE: The incoming request's VMID is only compared with this VMID value if the request's VMID valid bit is set. If the request's VMID is valid and the two VMIDs match, filtering is applied to the incoming request.
F 32 16 mask
DESC VMID mask; enables mapping of multiple VMID values to a single register NOTE: Logically, the AND operator is performed on the mask and por_dn_vmf13_ctrl.vmid. Then, the AND operator is performed on the mask and the incoming request's VMID. The two results are then compared, and filtering is applied to the incoming request if the masked VMIDs match.
R 0xda8 64 - S por_dn_vmf13_rnf0
RESET 0x0 0xffffffffffffffff
DESC Contains the logical RN-F bit vector 63:0 corresponding to por_dn_vmf13_ctrl.vmid. Used for VMID-based DVM snoop filtering.
F 0 64 snp_destvec0
DESC RN-F bit vector 63:0 corresponding to por_dn_vmf13_ctrl.vmid
R 0xdb0 64 - S por_dn_vmf13_rnd
RESET 0x0 0xffffffffffffffff
DESC Contains the logical RN-D bit vector 63:0 corresponding to por_dn_vmf13_ctrl.vmid. Used for VMID-based DVM snoop filtering.
F 0 64 snp_destvec
DESC RN-D bit vector 63:0 corresponding to por_dn_vmf13_ctrl.vmid
R 0xdb8 64 - S por_dn_vmf13_cxra
RESET 0x0 0xffffffffffffffff
DESC Contains the logical CXRA bit vector 63:0 corresponding to por_dn_vmf13_ctrl.vmid. Used for VMID-based DVM snoop filtering. NOTE: Not applicable in a single-chip CMN-600 system. Does not have any effect.
F 0 64 snp_destvec
DESC CXRA bit vector 63:0 corresponding to por_dn_vmf13_ctrl.vmid
R 0xdc0 64 - S por_dn_vmf14_ctrl
RESET 0xffff00000000 0xffff0001ffff
DESC Functions as the control register for VMID-based DVM snoop filtering. NOTE: This register has no effect when por_dn_aux_ctl.disable_vmf is set to 1.
F 0 1 valid
DESC Register valid 1'b1: Register is enabled 1'b0: Register is not enabled
F 1 16 vmid
DESC VMID value NOTE: The incoming request's VMID is only compared with this VMID value if the request's VMID valid bit is set. If the request's VMID is valid and the two VMIDs match, filtering is applied to the incoming request.
F 32 16 mask
DESC VMID mask; enables mapping of multiple VMID values to a single register NOTE: Logically, the AND operator is performed on the mask and por_dn_vmf14_ctrl.vmid. Then, the AND operator is performed on the mask and the incoming request's VMID. The two results are then compared, and filtering is applied to the incoming request if the masked VMIDs match.
R 0xdc8 64 - S por_dn_vmf14_rnf0
RESET 0x0 0xffffffffffffffff
DESC Contains the logical RN-F bit vector 63:0 corresponding to por_dn_vmf14_ctrl.vmid. Used for VMID-based DVM snoop filtering.
F 0 64 snp_destvec0
DESC RN-F bit vector 63:0 corresponding to por_dn_vmf14_ctrl.vmid
R 0xdd0 64 - S por_dn_vmf14_rnd
RESET 0x0 0xffffffffffffffff
DESC Contains the logical RN-D bit vector 63:0 corresponding to por_dn_vmf14_ctrl.vmid. Used for VMID-based DVM snoop filtering.
F 0 64 snp_destvec
DESC RN-D bit vector 63:0 corresponding to por_dn_vmf14_ctrl.vmid
R 0xdd8 64 - S por_dn_vmf14_cxra
RESET 0x0 0xffffffffffffffff
DESC Contains the logical CXRA bit vector 63:0 corresponding to por_dn_vmf14_ctrl.vmid. Used for VMID-based DVM snoop filtering. NOTE: Not applicable in a single-chip CMN-600 system. Does not have any effect.
F 0 64 snp_destvec
DESC CXRA bit vector 63:0 corresponding to por_dn_vmf14_ctrl.vmid
R 0xde0 64 - S por_dn_vmf15_ctrl
RESET 0xffff00000000 0xffff0001ffff
DESC Functions as the control register for VMID-based DVM snoop filtering. NOTE: This register has no effect when por_dn_aux_ctl.disable_vmf is set to 1.
F 0 1 valid
DESC Register valid 1'b1: Register is enabled 1'b0: Register is not enabled
F 1 16 vmid
DESC VMID value NOTE: The incoming request's VMID is only compared with this VMID value if the request's VMID valid bit is set. If the request's VMID is valid and the two VMIDs match, filtering is applied to the incoming request.
F 32 16 mask
DESC VMID mask; enables mapping of multiple VMID values to a single register NOTE: Logically, the AND operator is performed on the mask and por_dn_vmf15_ctrl.vmid. Then, the AND operator is performed on the mask and the incoming request's VMID. The two results are then compared, and filtering is applied to the incoming request if the masked VMIDs match.
R 0xde8 64 - S por_dn_vmf15_rnf0
RESET 0x0 0xffffffffffffffff
DESC Contains the logical RN-F bit vector 63:0 corresponding to por_dn_vmf15_ctrl.vmid. Used for VMID-based DVM snoop filtering.
F 0 64 snp_destvec0
DESC RN-F bit vector 63:0 corresponding to por_dn_vmf15_ctrl.vmid
R 0xdf0 64 - S por_dn_vmf15_rnd
RESET 0x0 0xffffffffffffffff
DESC Contains the logical RN-D bit vector 63:0 corresponding to por_dn_vmf15_ctrl.vmid. Used for VMID-based DVM snoop filtering.
F 0 64 snp_destvec
DESC RN-D bit vector 63:0 corresponding to por_dn_vmf15_ctrl.vmid
R 0xdf8 64 - S por_dn_vmf15_cxra
RESET 0x0 0xffffffffffffffff
DESC Contains the logical CXRA bit vector 63:0 corresponding to por_dn_vmf15_ctrl.vmid. Used for VMID-based DVM snoop filtering. NOTE: Not applicable in a single-chip CMN-600 system. Does not have any effect.
F 0 64 snp_destvec
DESC CXRA bit vector 63:0 corresponding to por_dn_vmf15_ctrl.vmid
R 0x2000 64 - - por_dn_pmu_event_sel
RESET 0x0 0xf3f3f3f3f
DESC Specifies the PMU event to be counted.
F 0 6 pmu_event0_id
DESC PMU Event 0 ID 6'h00: No event 6'h01: Number of TLBI DVM op requests 6'h02: Number of BPI DVM op requests 6'h03: Number of PICI DVM op requests 6'h04: Number of VICI DVM op requests 6'h05: Number of DVM sync requests 6'h06: Number of DVM op requests that were filtered using VMID filtering 6'h07: Number of DVM op requests to RNDs, BPI or PICI/VICI, that were filtered 6'h08: Number of retried REQ 6'h09: Number of SNPs sent to RNs 6'h0a: Number of SNPs stalled to RNs due to lack of Crds 6'h0b: DVM tracker full counter 6'h0c: DVM tracker occupancy counter
F 8 6 pmu_event1_id
DESC PMU Event 1 ID; see pmu_event0_id for encodings
F 16 6 pmu_event2_id
DESC PMU Event 2 ID; see pmu_event0_id for encodings
F 24 6 pmu_event3_id
DESC PMU Event 3 ID; see pmu_event0_id for encodings
F 32 4 pmu_occup1_id
DESC PMU occupancy event selector ID 4'b0000: All 4'b0001: DVM ops 4'b0010: DVM syncs
ENDGROUP
GROUP por_cxg_ha_registers
R 0x0 64 RO - por_cxg_ha_node_info
RESET 0x101 0xffffffffffff
DESC Provides component identification information.
F 0 16 node_type
DESC CMN-600 node type identifier
F 16 16 node_id
DESC Component CHI node ID
PAR NODEID_PARAM
F 32 16 logical_id
DESC Component logical ID
PAR LOGICALID_PARAM
R 0x8 64 - S por_cxg_ha_id
RESET 0x0 0x3f
DESC Contains the CCIX-assigned HAID.
F 0 6 ccix_haid
DESC CCIX HAID
R 0x80 64 RO - por_cxg_ha_child_info
RESET 0x0 0xffffffff
DESC Provides component child identification information.
F 0 16 child_count
DESC Number of child nodes; used in discovery process
F 16 16 child_ptr_offset
DESC Starting register offset which contains pointers to the child nodes
R 0x900 64 RO - por_cxg_ha_unit_info
RESET 0x404100802010100 0x7fffffffffffffff
DESC Provides component identification information for CXHA.
F 0 9 request_tracker_depth
DESC Depth of request tracker
PAR CXG_HA_NUM_REQS_PARAM
F 9 9 rdb_depth
DESC Depth of read data buffer
PAR CXG_HA_NUM_RDBUF_PARAM
F 18 9 wdb_depth
DESC Depth of write data buffer
PAR CXG_HA_NUM_WRBUF_PARAM
F 27 9 snoop_request_sinkbuffer_depth
DESC Depth of snoop request sink buffer; number of CHI SNP requests that can be sunk by CXHA
PAR CXG_HA_SSB_DEPTH_PARAM
F 36 9 snoop_tracker_depth
DESC Depth of snoop tracker; number of outstanding SNP requests on CCIX
PAR CXG_HA_NUM_SNPREQS_PARAM
F 45 9 snoop_databuffer_depth
DESC Depth of snoop data buffer
PAR CXG_HA_NUM_SNPBUF_PARAM
F 54 9 snoop_compack_hazbuf_depth
DESC Depth of CompAck snoop hazard buffer
PAR CXG_HA_CSHAZBUF_DEPTH_PARAM
R 0x980 64 - S por_cxg_ha_secure_register_groups_override
RESET 0x0 0x3
DESC Allows non-secure access to predefined groups of secure registers.
F 0 1 ldid_ctl
DESC Allows non-secure access to secure HA LDID registers
F 1 1 linkid_ctl
DESC Allows non-secure access to secure HA Link ID registers
R 0xa08 64 - S por_cxg_ha_aux_ctl
RESET 0x8 0x1003f
DESC Functions as the auxiliary control register for CXHA.
F 0 1 cg_disable
DESC Disables clock gating when set
F 1 1 snoop_dataret_disable
DESC Disables setting data return for CCIX snoop requests for all CHI snoop opcodes
F 2 1 remote_chia_rnf_present
DESC Indicates existence of CHIA RN-F in system; HA uses this indication to send SnpToS or SnpToSC 1'b0: HA converts SnpShared, SnpClean, and SnpNotSharedDirty to SnpToSC 1'b1: HA converts SnpShared, SnpClean, and SnpNotSharedDirty to SnpToS
F 3 1 early_compack_en
DESC Early CompAck enable; enables sending early CompAck on CCIX for requests that require CompAck
F 4 1 disable_secure_access
DESC Converts all accesses to non-secure
F 5 1 disable_cg_flopen
DESC Disables enhanced flop enable control for dynamic power savings
F 16 1 smp_mode_en
DESC When set, enables Symmetric Multiprocessor Mode (SMP) Mode.
PAR CXG_SMP_MODE_EN_PARAM
R 0xc00 64 - S por_cxg_ha_rnf_raid_to_ldid_reg0
RESET 0x0 0xbfbfbfbfbfbfbfbf
DESC Specifies the mapping of RAID to RN-F LDID for RAIDs 0 to 7.
F 0 6 ldid0
DESC Specifies the LDID for RAID 0
F 7 1 ldid0_rnf
DESC Specifies if RAID 0 is RN-F
F 8 6 ldid1
DESC Specifies the LDID for RAID 1
F 15 1 ldid1_rnf
DESC Specifies if RAID 1 is RN-F
F 16 6 ldid2
DESC Specifies the LDID for RAID 2
F 23 1 ldid2_rnf
DESC Specifies if RAID 2 is RN-F
F 24 6 ldid3
DESC Specifies the LDID for RAID 3
F 31 1 ldid3_rnf
DESC Specifies if RAID 3 is RN-F
F 32 6 ldid4
DESC Specifies the LDID for RAID 4
F 39 1 ldid4_rnf
DESC Specifies if RAID 4 is RN-F
F 40 6 ldid5
DESC Specifies the LDID for RAID 5
F 47 1 ldid5_rnf
DESC Specifies if RAID 5 is RN-F
F 48 6 ldid6
DESC Specifies the LDID for RAID 6
F 55 1 ldid6_rnf
DESC Specifies if RAID 6 is RN-F
F 56 6 ldid7
DESC Specifies the LDID for RAID 7
F 63 1 ldid7_rnf
DESC Specifies if RAID 7 is RN-F
R 0xc08 64 - S por_cxg_ha_rnf_raid_to_ldid_reg1
RESET 0x0 0xbfbfbfbfbfbfbfbf
DESC Specifies the mapping of RAID to RN-F LDID for RAIDs 8 to 15.
F 0 6 ldid8
DESC Specifies the LDID for RAID 8
F 7 1 ldid8_rnf
DESC Specifies if RAID 8 is RN-F
F 8 6 ldid9
DESC Specifies the LDID for RAID 9
F 15 1 ldid9_rnf
DESC Specifies if RAID 9 is RN-F
F 16 6 ldid10
DESC Specifies the LDID for RAID 10
F 23 1 ldid10_rnf
DESC Specifies if RAID 10 is RN-F
F 24 6 ldid11
DESC Specifies the LDID for RAID 11
F 31 1 ldid11_rnf
DESC Specifies if RAID 11 is RN-F
F 32 6 ldid12
DESC Specifies the LDID for RAID 12
F 39 1 ldid12_rnf
DESC Specifies if RAID 12 is RN-F
F 40 6 ldid13
DESC Specifies the LDID for RAID 13
F 47 1 ldid13_rnf
DESC Specifies if RAID 13 is RN-F
F 48 6 ldid14
DESC Specifies the LDID for RAID 14
F 55 1 ldid14_rnf
DESC Specifies if RAID 14 is RN-F
F 56 6 ldid15
DESC Specifies the LDID for RAID 15
F 63 1 ldid15_rnf
DESC Specifies if RAID 15 is RN-F
R 0xc10 64 - S por_cxg_ha_rnf_raid_to_ldid_reg2
RESET 0x0 0xbfbfbfbfbfbfbfbf
DESC Specifies the mapping of RAID to RN-F LDID for RAIDs 16 to 23.
F 0 6 ldid16
DESC Specifies the LDID for RAID 16
F 7 1 ldid16_rnf
DESC Specifies if RAID 16 is RN-F
F 8 6 ldid17
DESC Specifies the LDID for RAID 17
F 15 1 ldid17_rnf
DESC Specifies if RAID 17 is RN-F
F 16 6 ldid18
DESC Specifies the LDID for RAID 18
F 23 1 ldid18_rnf
DESC Specifies if RAID 18 is RN-F
F 24 6 ldid19
DESC Specifies the LDID for RAID 19
F 31 1 ldid19_rnf
DESC Specifies if RAID 19 is RN-F
F 32 6 ldid20
DESC Specifies the LDID for RAID 20
F 39 1 ldid20_rnf
DESC Specifies if RAID 20 is RN-F
F 40 6 ldid21
DESC Specifies the LDID for RAID 21
F 47 1 ldid21_rnf
DESC Specifies if RAID 21 is RN-F
F 48 6 ldid22
DESC Specifies the LDID for RAID 22
F 55 1 ldid22_rnf
DESC Specifies if RAID 22 is RN-F
F 56 6 ldid23
DESC Specifies the LDID for RAID 23
F 63 1 ldid23_rnf
DESC Specifies if RAID 23 is RN-F
R 0xc18 64 - S por_cxg_ha_rnf_raid_to_ldid_reg3
RESET 0x0 0xbfbfbfbfbfbfbfbf
DESC Specifies the mapping of RAID to RN-F LDID for RAIDs 24 to 31.
F 0 6 ldid24
DESC Specifies the LDID for RAID 24
F 7 1 ldid24_rnf
DESC Specifies if RAID 24 is RN-F
F 8 6 ldid25
DESC Specifies the LDID for RAID 25
F 15 1 ldid25_rnf
DESC Specifies if RAID 25 is RN-F
F 16 6 ldid26
DESC Specifies the LDID for RAID 26
F 23 1 ldid26_rnf
DESC Specifies if RAID 26 is RN-F
F 24 6 ldid27
DESC Specifies the LDID for RAID 27
F 31 1 ldid27_rnf
DESC Specifies if RAID 27 is RN-F
F 32 6 ldid28
DESC Specifies the LDID for RAID 28
F 39 1 ldid28_rnf
DESC Specifies if RAID 28 is RN-F
F 40 6 ldid29
DESC Specifies the LDID for RAID 29
F 47 1 ldid29_rnf
DESC Specifies if RAID 29 is RN-F
F 48 6 ldid30
DESC Specifies the LDID for RAID 30
F 55 1 ldid30_rnf
DESC Specifies if RAID 30 is RN-F
F 56 6 ldid31
DESC Specifies the LDID for RAID 31
F 63 1 ldid31_rnf
DESC Specifies if RAID 31 is RN-F
R 0xc20 64 - S por_cxg_ha_rnf_raid_to_ldid_reg4
RESET 0x0 0xbfbfbfbfbfbfbfbf
DESC Specifies the mapping of RAID to RN-F LDID for RAIDs 32 to 39.
F 0 6 ldid32
DESC Specifies the LDID for RAID 32
F 7 1 ldid32_rnf
DESC Specifies if RAID 32 is RN-F
F 8 6 ldid33
DESC Specifies the LDID for RAID 33
F 15 1 ldid33_rnf
DESC Specifies if RAID 33 is RN-F
F 16 6 ldid34
DESC Specifies the LDID for RAID 34
F 23 1 ldid34_rnf
DESC Specifies if RAID 34 is RN-F
F 24 6 ldid35
DESC Specifies the LDID for RAID 35
F 31 1 ldid35_rnf
DESC Specifies if RAID 35 is RN-F
F 32 6 ldid36
DESC Specifies the LDID for RAID 36
F 39 1 ldid36_rnf
DESC Specifies if RAID 36 is RN-F
F 40 6 ldid37
DESC Specifies the LDID for RAID 37
F 47 1 ldid37_rnf
DESC Specifies if RAID 37 is RN-F
F 48 6 ldid38
DESC Specifies the LDID for RAID 38
F 55 1 ldid38_rnf
DESC Specifies if RAID 38 is RN-F
F 56 6 ldid39
DESC Specifies the LDID for RAID 39
F 63 1 ldid39_rnf
DESC Specifies if RAID 39 is RN-F
R 0xc28 64 - S por_cxg_ha_rnf_raid_to_ldid_reg5
RESET 0x0 0xbfbfbfbfbfbfbfbf
DESC Specifies the mapping of RAID to RN-F LDID for RAIDs 40 to 47.
F 0 6 ldid40
DESC Specifies the LDID for RAID 40
F 7 1 ldid40_rnf
DESC Specifies if RAID 40 is RN-F
F 8 6 ldid41
DESC Specifies the LDID for RAID 41
F 15 1 ldid41_rnf
DESC Specifies if RAID 41 is RN-F
F 16 6 ldid42
DESC Specifies the LDID for RAID 42
F 23 1 ldid42_rnf
DESC Specifies if RAID 42 is RN-F
F 24 6 ldid43
DESC Specifies the LDID for RAID 43
F 31 1 ldid43_rnf
DESC Specifies if RAID 43 is RN-F
F 32 6 ldid44
DESC Specifies the LDID for RAID 44
F 39 1 ldid44_rnf
DESC Specifies if RAID 44 is RN-F
F 40 6 ldid45
DESC Specifies the LDID for RAID 45
F 47 1 ldid45_rnf
DESC Specifies if RAID 45 is RN-F
F 48 6 ldid46
DESC Specifies the LDID for RAID 46
F 55 1 ldid46_rnf
DESC Specifies if RAID 46 is RN-F
F 56 6 ldid47
DESC Specifies the LDID for RAID 47
F 63 1 ldid47_rnf
DESC Specifies if RAID 47 is RN-F
R 0xc30 64 - S por_cxg_ha_rnf_raid_to_ldid_reg6
RESET 0x0 0xbfbfbfbfbfbfbfbf
DESC Specifies the mapping of RAID to RN-F LDID for RAIDs 48 to 55.
F 0 6 ldid48
DESC Specifies the LDID for RAID 48
F 7 1 ldid48_rnf
DESC Specifies if RAID 48 is RN-F
F 8 6 ldid49
DESC Specifies the LDID for RAID 49
F 15 1 ldid49_rnf
DESC Specifies if RAID 49 is RN-F
F 16 6 ldid50
DESC Specifies the LDID for RAID 50
F 23 1 ldid50_rnf
DESC Specifies if RAID 50 is RN-F
F 24 6 ldid51
DESC Specifies the LDID for RAID 51
F 31 1 ldid51_rnf
DESC Specifies if RAID 51 is RN-F
F 32 6 ldid52
DESC Specifies the LDID for RAID 52
F 39 1 ldid52_rnf
DESC Specifies if RAID 52 is RN-F
F 40 6 ldid53
DESC Specifies the LDID for RAID 53
F 47 1 ldid53_rnf
DESC Specifies if RAID 53 is RN-F
F 48 6 ldid54
DESC Specifies the LDID for RAID 54
F 55 1 ldid54_rnf
DESC Specifies if RAID 54 is RN-F
F 56 6 ldid55
DESC Specifies the LDID for RAID 55
F 63 1 ldid55_rnf
DESC Specifies if RAID 55 is RN-F
R 0xc38 64 - S por_cxg_ha_rnf_raid_to_ldid_reg7
RESET 0x0 0xbfbfbfbfbfbfbfbf
DESC Specifies the mapping of RAID to RN-F LDID for RAIDs 56 to 63.
F 0 6 ldid56
DESC Specifies the LDID for RAID 56
F 7 1 ldid56_rnf
DESC Specifies if RAID 56 is RN-F
F 8 6 ldid57
DESC Specifies the LDID for RAID 57
F 15 1 ldid57_rnf
DESC Specifies if RAID 57 is RN-F
F 16 6 ldid58
DESC Specifies the LDID for RAID 58
F 23 1 ldid58_rnf
DESC Specifies if RAID 58 is RN-F
F 24 6 ldid59
DESC Specifies the LDID for RAID 59
F 31 1 ldid59_rnf
DESC Specifies if RAID 59 is RN-F
F 32 6 ldid60
DESC Specifies the LDID for RAID 60
F 39 1 ldid60_rnf
DESC Specifies if RAID 60 is RN-F
F 40 6 ldid61
DESC Specifies the LDID for RAID 61
F 47 1 ldid61_rnf
DESC Specifies if RAID 61 is RN-F
F 48 6 ldid62
DESC Specifies the LDID for RAID 62
F 55 1 ldid62_rnf
DESC Specifies if RAID 62 is RN-F
F 56 6 ldid63
DESC Specifies the LDID for RAID 63
F 63 1 ldid63_rnf
DESC Specifies if RAID 63 is RN-F
R 0xc40 64 - S por_cxg_ha_agentid_to_linkid_reg0
RESET 0x0 0x303030303030303
DESC Specifies the mapping of Agent ID to Link ID for Agent IDs 0 to 7.
F 0 2 agent0_linkid
DESC Specifies Link ID 0
F 8 2 agent1_linkid
DESC Specifies Link ID 1
F 16 2 agent2_linkid
DESC Specifies Link ID 2
F 24 2 agent3_linkid
DESC Specifies Link ID 3
F 32 2 agent4_linkid
DESC Specifies Link ID 4
F 40 2 agent5_linkid
DESC Specifies Link ID 5
F 48 2 agent6_linkid
DESC Specifies Link ID 6
F 56 2 agent7_linkid
DESC Specifies Link ID 7
R 0xc48 64 - S por_cxg_ha_agentid_to_linkid_reg1
RESET 0x0 0x303030303030303
DESC Specifies the mapping of Agent ID to Link ID for Agent IDs 8 to 15.
F 0 2 agent8_linkid
DESC Specifies Link ID 8
F 8 2 agent9_linkid
DESC Specifies Link ID 9
F 16 2 agent10_linkid
DESC Specifies Link ID 10
F 24 2 agent11_linkid
DESC Specifies Link ID 11
F 32 2 agent12_linkid
DESC Specifies Link ID 12
F 40 2 agent13_linkid
DESC Specifies Link ID 13
F 48 2 agent14_linkid
DESC Specifies Link ID 14
F 56 2 agent15_linkid
DESC Specifies Link ID 15
R 0xc50 64 - S por_cxg_ha_agentid_to_linkid_reg2
RESET 0x0 0x303030303030303
DESC Specifies the mapping of Agent ID to Link ID for Agent IDs 16 to 23.
F 0 2 agent16_linkid
DESC Specifies Link ID 16
F 8 2 agent17_linkid
DESC Specifies Link ID 17
F 16 2 agent18_linkid
DESC Specifies Link ID 18
F 24 2 agent19_linkid
DESC Specifies Link ID 19
F 32 2 agent20_linkid
DESC Specifies Link ID 20
F 40 2 agent21_linkid
DESC Specifies Link ID 21
F 48 2 agent22_linkid
DESC Specifies Link ID 22
F 56 2 agent23_linkid
DESC Specifies Link ID 23
R 0xc58 64 - S por_cxg_ha_agentid_to_linkid_reg3
RESET 0x0 0x303030303030303
DESC Specifies the mapping of Agent ID to Link ID for Agent IDs 24 to 31.
F 0 2 agent24_linkid
DESC Specifies Link ID 24
F 8 2 agent25_linkid
DESC Specifies Link ID 25
F 16 2 agent26_linkid
DESC Specifies Link ID 26
F 24 2 agent27_linkid
DESC Specifies Link ID 27
F 32 2 agent28_linkid
DESC Specifies Link ID 28
F 40 2 agent29_linkid
DESC Specifies Link ID 29
F 48 2 agent30_linkid
DESC Specifies Link ID 30
F 56 2 agent31_linkid
DESC Specifies Link ID 31
R 0xc60 64 - S por_cxg_ha_agentid_to_linkid_reg4
RESET 0x0 0x303030303030303
DESC Specifies the mapping of Agent ID to Link ID for Agent IDs 32 to 39.
F 0 2 agent32_linkid
DESC Specifies Link ID 32
F 8 2 agent33_linkid
DESC Specifies Link ID 33
F 16 2 agent34_linkid
DESC Specifies Link ID 34
F 24 2 agent35_linkid
DESC Specifies Link ID 35
F 32 2 agent36_linkid
DESC Specifies Link ID 36
F 40 2 agent37_linkid
DESC Specifies Link ID 37
F 48 2 agent38_linkid
DESC Specifies Link ID 38
F 56 2 agent39_linkid
DESC Specifies Link ID 39
R 0xc68 64 - S por_cxg_ha_agentid_to_linkid_reg5
RESET 0x0 0x303030303030303
DESC Specifies the mapping of Agent ID to Link ID for Agent IDs 40 to 47.
F 0 2 agent40_linkid
DESC Specifies Link ID 40
F 8 2 agent41_linkid
DESC Specifies Link ID 41
F 16 2 agent42_linkid
DESC Specifies Link ID 42
F 24 2 agent43_linkid
DESC Specifies Link ID 43
F 32 2 agent44_linkid
DESC Specifies Link ID 44
F 40 2 agent45_linkid
DESC Specifies Link ID 45
F 48 2 agent46_linkid
DESC Specifies Link ID 46
F 56 2 agent47_linkid
DESC Specifies Link ID 47
R 0xc70 64 - S por_cxg_ha_agentid_to_linkid_reg6
RESET 0x0 0x303030303030303
DESC Specifies the mapping of Agent ID to Link ID for Agent IDs 48 to 55.
F 0 2 agent48_linkid
DESC Specifies Link ID 48
F 8 2 agent49_linkid
DESC Specifies Link ID 49
F 16 2 agent50_linkid
DESC Specifies Link ID 50
F 24 2 agent51_linkid
DESC Specifies Link ID 51
F 32 2 agent52_linkid
DESC Specifies Link ID 52
F 40 2 agent53_linkid
DESC Specifies Link ID 53
F 48 2 agent54_linkid
DESC Specifies Link ID 54
F 56 2 agent55_linkid
DESC Specifies Link ID 55
R 0xc78 64 - S por_cxg_ha_agentid_to_linkid_reg7
RESET 0x0 0x303030303030303
DESC Specifies the mapping of Agent ID to Link ID for Agent IDs 56 to 63.
F 0 2 agent56_linkid
DESC Specifies Link ID 56
F 8 2 agent57_linkid
DESC Specifies Link ID 57
F 16 2 agent58_linkid
DESC Specifies Link ID 58
F 24 2 agent59_linkid
DESC Specifies Link ID 59
F 32 2 agent60_linkid
DESC Specifies Link ID 60
F 40 2 agent61_linkid
DESC Specifies Link ID 61
F 48 2 agent62_linkid
DESC Specifies Link ID 62
F 56 2 agent63_linkid
DESC Specifies Link ID 63
R 0xd00 64 - S por_cxg_ha_agentid_to_linkid_val
RESET 0x0 0xffffffffffffffff
DESC Specifies which Agent ID to Link ID mappings are valid.
F 0 64 valid
DESC Specifies whether the Link ID is valid; bit number corresponds to logical Agent ID number (from 0 to 63)
R 0xd08 64 - S por_cxg_ha_rnf_raid_to_ldid_val
RESET 0x0 0xffffffffffffffff
DESC Specifies which RAID to RN-F LDID mappings are valid.
F 0 64 valid
DESC Specifies whether the LDID is valid; bit number corresponds to logical RN-F LDID number (from 0 to 63)
R 0x1000 64 V S por_cxg_ha_cxprtcl_link0_ctl
RESET 0x0 0xfff
DESC Functions as the CXHA CCIX Protocol Link 0 control register. Works with por_cxg_ha_cxprtcl_link0_status.
F 0 1 lnk0_link_en
DESC Enables CCIX Link 0 when set 1'b0: Link is disabled 1'b1: Link is enabled
F 1 1 lnk0_link_req
DESC Link Up/Down request; software writes this register bit to request a Link Up or Link Down in the local agent 1'b0: Link Down request NOTE: The local agent does not return remote protocol credits yet since remote agent may still be in Link_UP state. 1'b1: Link Up request
F 2 1 lnk0_link_up
DESC Link Up status. Software writes this register bit to indicate Link status after polling Link_ACK and Link_DN status in the remote agent 1'b0: Link is not Up. Software clears Link_UP when Link_ACK status is clear and Link_DN status is set in both local and remote agents. The local agent stops responding to any protocol activity from remote agent, including acceptance of protocol credits, when Link_UP is clear 1'b1: Link is Up. Software sets Link_UP when Link_ACK status is set and Link_DN status is clear in both local and remote agents; the local agent starts sending local protocol credits to remote agent
F 3 1 lnk0_snoopdomain_req
DESC Controls Snoop domain enable (SYSCOREQ) for CCIX Link 0
F 4 4 lnk0_num_reqcrds
DESC Controls the number of CCIX request credits assigned to Link 0 4'h0: Total credits are equally divided across all links 4'h1: 25% of credits assigned 4'h2: 50% of credits assigned 4'h3: 75% of credits assigned 4'h4: 100% of credits assigned 4'hF: 0% of credits assigned 
F 8 4 lnk0_num_datcrds
DESC Controls the number of CCIX data credits assigned to Link 0 4'h0: Total credits are equally divided across all links 4'h1: 25% of credits assigned 4'h2: 50% of credits assigned 4'h3: 75% of credits assigned 4'h4: 100% of credits assigned 4'hF: 0% of credits assigned 
R 0x1008 64 ROV S por_cxg_ha_cxprtcl_link0_status
RESET 0x2 0x7
DESC Functions as the CXHA CCIX Protocol Link 0 status register. Works with por_cxg_ha_cxprtcl_link0_ctl.
F 0 1 lnk0_link_ack
DESC Link Up/Down acknowledge; hardware updates this register bit to acknowledge the software link request 1'b0: Link Down acknowledge; hardware clears Link_ACK on receiving a Link Down request; the local agent stops sending protocol credits to the remote agent when Link_ACK is clear 1'b1: Link Up acknowledge; hardware sets Link_ACK when the local agent is ready to start accepting protocol credits from the remote agent NOTE: The local agent must clear Link_DN before setting Link_ACK.
F 1 1 lnk0_link_down
DESC Link Down status; hardware updates this register bit to indicate Link Down status 1'b0: Link is not Down; hardware clears Link_DN when it receives a Link Up request 1'b1: Link is Down; hardware sets Link_DN after the local agent has received all local protocol credits. The local agent must continue to respond to any remote protocol activity, including accepting and returning remote protocol credits until Link Up is clear 
F 2 1 lnk0_snoopdomain_ack
DESC Provides Snoop domain status (SYSCOACK) for CCIX Link 0
R 0x1010 64 V S por_cxg_ha_cxprtcl_link1_ctl
RESET 0x0 0xfff
DESC Functions as the CXHA CCIX Protocol Link 1 control register. Works with por_cxg_ha_cxprtcl_link1_status.
F 0 1 lnk1_link_en
DESC Enables CCIX Link 1 when set 1'b0: Link is disabled 1'b1: Link is enabled
F 1 1 lnk1_link_req
DESC Link Up/Down request; software writes this register bit to request a Link Up or Link Down in the local agent 1'b0: Link Down request NOTE: The local agent does not return remote protocol credits yet since remote agent may still be in Link_UP state. 1'b1: Link Up request
F 2 1 lnk1_link_up
DESC Link Up status. Software writes this register bit to indicate Link status after polling Link_ACK and Link_DN status in the remote agent 1'b0: Link is not Up. Software clears Link_UP when Link_ACK status is clear and Link_DN status is set in both local and remote agents. The local agent stops responding to any protocol activity from remote agent, including acceptance of protocol credits, when Link_UP is clear 1'b1: Link is Up. Software sets Link_UP when Link_ACK status is set and Link_DN status is clear in both local and remote agents; the local agent starts sending local protocol credits to remote agent
F 3 1 lnk1_snoopdomain_req
DESC Controls Snoop domain enable (SYSCOREQ) for CCIX Link 1
F 4 4 lnk1_num_reqcrds
DESC Controls the number of CCIX request credits assigned to Link 1 4'h0: Total credits are equally divided across all links 4'h1: 25% of credits assigned 4'h2: 50% of credits assigned 4'h3: 75% of credits assigned 4'h4: 100% of credits assigned 4'hF: 0% of credits assigned
F 8 4 lnk1_num_datcrds
DESC Controls the number of CCIX data credits assigned to Link 1 4'h0: Total credits equally divided across all links 4'h1: 25% of credits assigned 4'h2: 50% of credits assigned 4'h3: 75% of credits assigned 4'h4: 100% of credits assigned 4'hF: 0% of credits assigned
R 0x1018 64 ROV S por_cxg_ha_cxprtcl_link1_status
RESET 0x2 0x7
DESC Functions as the CXHA CCIX Protocol Link 1 status register. Works with por_cxg_ha_cxprtcl_link1_ctl.
F 0 1 lnk1_link_ack
DESC Link Up/Down Acknowledge; hardware updates this register bit to acknowledge the software link request 1'b0: Link Down acknowledge; hardware clears Link_ACK on receiving a Link Down request; the local agent stops sending protocol credits to the remote agent when Link_ACK is clear 1'b1: Link Up acknowledge; hardware sets Link_ACK when the local agent is ready to start accepting protocol credits from the remote agent NOTE: The local agent must clear Link_DN before setting Link_ACK.
F 1 1 lnk1_link_down
DESC Link Down status; hardware updates this register bit to indicate Link Down status 1'b0: Link is not Down; hardware clears Link_DN when it receives a Link Up request 1'b1: Link is Down; hardware sets Link_DN after the local agent has received all local protocol credits. The local agent must continue to respond to any remote protocol activity, including accepting and returning remote protocol credits until Link Up is clear 
F 2 1 lnk1_snoopdomain_ack
DESC Provides Snoop domain status (SYSCOACK) for CCIX Link 1
R 0x1020 64 V S por_cxg_ha_cxprtcl_link2_ctl
RESET 0x0 0xfff
DESC Functions as the CXHA CCIX Protocol Link 2 control register. Works with por_cxg_ha_cxprtcl_link2_status.
F 0 1 lnk2_link_en
DESC Enables CCIX Link 2 when set 1'b0: Link is disabled 1'b1: Link is enabled
F 1 1 lnk2_link_req
DESC Link Up/Down request; software writes this register bit to request a Link Up or Link Down in the local agent 1'b0: Link Down request NOTE: The local agent does not return remote protocol credits yet since remote agent may still be in Link_UP state. 1'b1: Link Up request
F 2 1 lnk2_link_up
DESC Link Up status. Software writes this register bit to indicate Link status after polling Link_ACK and Link_DN status in the remote agent 1'b0: Link is not Up. Software clears Link_UP when Link_ACK status is clear and Link_DN status is set in both local and remote agents. The local agent stops responding to any protocol activity from remote agent, including acceptance of protocol credits, when Link_UP is clear 1'b1: Link is Up. Software sets Link_UP when Link_ACK status is set and Link_DN status is clear in both local and remote agents; the local agent starts sending local protocol credits to remote agent
F 3 1 lnk2_snoopdomain_req
DESC Controls Snoop domain enable (SYSCOREQ) for CCIX Link 2
F 4 4 lnk2_num_reqcrds
DESC Controls the number of CCIX request credits assigned to Link 2 4'h0: Total credits are equally divided across all links 4'h1: 25% of credits assigned 4'h2: 50% of credits assigned 4'h3: 75% of credits assigned 4'h4: 100% of credits assigned 4'hF: 0% of credits assigned
F 8 4 lnk2_num_datcrds
DESC Controls the number of CCIX data credits assigned to Link 2 4'h0: Total credits are equally divided across all links 4'h1: 25% of credits assigned 4'h2: 50% of credits assigned 4'h3: 75% of credits assigned 4'h4: 100% of credits assigned 4'hF: 0% of credits assigned
R 0x1028 64 ROV S por_cxg_ha_cxprtcl_link2_status
RESET 0x2 0x7
DESC Functions as the CXHA CCIX Protocol Link 2 status register. Works with por_cxg_ha_cxprtcl_link2_ctl.
F 0 1 lnk2_link_ack
DESC Link Up/Down acknowledge; hardware updates this register bit to acknowledge the software link request 1'b0: Link Down acknowledge; hardware clears Link_ACK on receiving a Link Down request; the local agent stops sending protocol credits to the remote agent when Link_ACK is clear 1'b1: Link Up acknowledge; hardware sets Link_ACK when the local agent is ready to start accepting protocol credits from the remote agent NOTE: The local agent must clear Link_DN before setting Link_ACK.
F 1 1 lnk2_link_down
DESC Link Down status; hardware updates this register bit to indicate Link Down status 1'b0: Link is not Down; hardware clears Link_DN when it receives a Link Up request 1'b1: Link is Down; hardware sets Link_DN after the local agent has received all local protocol credits. The local agent must continue to respond to any remote protocol activity, including accepting and returning remote protocol credits until Link Up is clear 
F 2 1 lnk2_snoopdomain_ack
DESC Provides Snoop domain status (SYSCOACK) for CCIX Link 2
R 0x2000 64 - - por_cxg_ha_pmu_event_sel
RESET 0x0 0xf3f3f3f3f
DESC Specifies the PMU event to be counted as a 6-bit ID with the following encodings: 6'b000000: CXHA_PMU_EVENT_NULL 6'b100001: CXHA_PMU_EVENT_RDDATBYP 6'b100010: CXHA_PMU_EVENT_CHIRSP_UP_STALL 6'b100011: CXHA_PMU_EVENT_CHIDAT_UP_STALL 6'b100100: CXHA_PMU_EVENT_SNPPCRD_LNK0_STALL 6'b100101: CXHA_PMU_EVENT_SNPPCRD_LNK1_STALL 6'b100110: CXHA_PMU_EVENT_SNPPCRD_LNK2_STALL 6'b100111: CXHA_PMU_EVENT_REQTRK_OCC 6'b101000: CXHA_PMU_EVENT_RDB_OCC 6'b101001: CXHA_PMU_EVENT_RDBBYP_OCC 6'b101010: CXHA_PMU_EVENT_WDB_OCC 6'b101011: CXHA_PMU_EVENT_SNPTRK_OCC 6'b101100: CXHA_PMU_EVENT_SDB_OCC 6'b101101: CXHA_PMU_EVENT_SNPHAZ_OCC
F 0 6 pmu_event0_id
DESC CXHA PMU Event 0 ID
F 8 6 pmu_event1_id
DESC CXHA PMU Event 1 ID
F 16 6 pmu_event2_id
DESC CXHA PMU Event 2 ID
F 24 6 pmu_event3_id
DESC CXHA PMU Event 3 ID
F 32 4 pmu_occup1_id
DESC CXHA PMU occupancy event selector ID
R 0x3000 64 RO S por_cxg_ha_errfr
RESET 0xa5 0x7cff
DESC Functions as the error feature register.
F 0 2 ED
DESC Error detection
F 2 2 DE
DESC Deferred errors for data poison
F 4 2 UI
DESC Uncorrected error interrupt
F 6 2 FI
DESC Fault handling interrupt
F 10 2 CFI
DESC Corrected error interrupt
F 12 3 CEC
DESC Standard corrected error count mechanism 3'b000: Does not implement standardized error counter model 3'b010: Implements 8-bit error counter in por_cxg_ha_errmisc[39:32] 3'b100: Implements 16-bit error counter in por_cxg_ha_errmisc[47:32]
R 0x3008 64 - S por_cxg_ha_errctlr
RESET 0x0 0x10f
DESC Functions as the error control register. Controls whether specific error-handling interrupts and error detection/deferment are enabled.
F 0 1 ED
DESC Enables error detection as specified in por_cxg_ha_errfr.ED
F 1 1 DE
DESC Enables error deferment as specified in por_cxg_ha_errfr.DE
F 2 1 UI
DESC Enables uncorrected error interrupt as specified in por_cxg_ha_errfr.UI
F 3 1 FI
DESC Enables fault handling interrupt for all detected deferred errors as specified in por_cxg_ha_errfr.FI
F 8 1 CFI
DESC Enables corrected error interrupt as specified in por_cxg_ha_errfr.CFI
R 0x3010 64 - S por_cxg_ha_errstatus
RESET 0x0 0xed800000
DESC Functions as the error status register. AV and MV bits must be cleared in the same cycle, otherwise the error record does not have a consistent view.
F 31 1 AV
DESC Address register valid; writes to this bit are ignored if any of the UE, DE, or CE bits are set to 1, and the highest priority are not cleared to 0 in the same write; write a 1 to clear 1'b1: Address is valid; por_cxg_ha_erraddr contains a physical address for that recorded error 1'b0: Address is not valid
F 30 1 V
DESC Register valid; writes to this bit are ignored if any of the UE, DE, or CE bits are set to 1, and are not cleared to 0 in the same write; write a 1 to clear 1'b1: At least one error recorded; register is valid 1'b0: No errors recorded
F 29 1 UE
DESC Uncorrected errors; writes to this bit are ignored if the OF bit is set to 1, and is not cleared to 0 in the same write; write a 1 to clear 1'b1: At least one error detected that is not corrected and is not deferred to a slave 1'b0: No uncorrected errors detected
F 27 1 OF
DESC Overflow; asserted when multiple errors of the highest priority type are detected; write a 1 to clear 1'b1: More than one error detected 1'b0: Only one error of the highest priority type detected as described by UE/DE/CE fields
F 26 1 MV
DESC por_cxg_ha_errmisc valid; writes to this bit are ignored if any of the UE, DE, or CE bits are set to 1, and the highest priority are not cleared to 0 in the same write; write a 1 to clear 1'b1: Miscellaneous registers are valid 1'b0: Miscellaneous registers are not valid
F 24 1 CE
DESC Corrected errors; writes to this bit are ignored if the OF bit is set to 1, and is not cleared to 0 in the same write; write a 1 to clear 1'b1: At least one transient corrected error recorded 1'b0: No corrected errors recorded
F 23 1 DE
DESC Deferred errors; writes to this bit are ignored if the OF bit is set to 1, and is not cleared to 0 in the same write; write a 1 to clear 1'b1: At least one error is not corrected and is deferred 1'b0: No errors deferred
R 0x3018 64 - S por_cxg_ha_erraddr
RESET 0x0 0x8000ffffffffffff
DESC Contains the error record address.
F 63 1 NS
DESC Security status of transaction 1'b1: Non-secure transaction 1'b0: Secure transaction CONSTRAINT: por_cxg_ha_erraddr.NS is redundant. Since it is writable, it cannot be used for logic qualification.
F 0 48 ADDR
DESC Transaction address
R 0x3020 64 - S por_cxg_ha_errmisc
RESET 0x0 0xff0000000003f3
DESC Functions as the miscellaneous error register. Contains miscellaneous information about deferred/uncorrected errors.
F 4 6 SRCID
DESC CCIX RAID of the requestor or the snoop target
F 48 8 ERRSET
DESC RAM entry set address for parity error
F 0 2 ERRSRC
DESC Source of the parity error 2'b00: Read data buffer 0 2'b01: Read data buffer 1 2'b10: Write data buffer 0 2'b11: Write data buffer 1
R 0x3100 64 RO S por_cxg_ha_errfr_NS
RESET 0xa5 0x7cff
DESC Functions as the non-secure error feature register.
F 0 2 ED
DESC Error detection
F 2 2 DE
DESC Deferred errors for data poison
F 4 2 UI
DESC Uncorrected error interrupt
F 6 2 FI
DESC Fault handling interrupt
F 10 2 CFI
DESC Corrected error interrupt
F 12 3 CEC
DESC Standard corrected error count mechanism 3'b000: Does not implement standardized error counter model 3'b010: Implements 8-bit error counter in por_cxg_ha_errmisc[39:32] 3'b100: Implements 16-bit error counter in por_cxg_ha_errmisc[47:32]
R 0x3108 64 - S por_cxg_ha_errctlr_NS
RESET 0x0 0x10f
DESC Functions as the non-secure error control register. Controls whether specific error-handling interrupts and error detection/deferment are enabled.
F 0 1 ED
DESC Enables error detection as specified in por_cxg_ha_errfr.ED
F 1 1 DE
DESC Enables error deferment as specified in por_cxg_ha_errfr.DE
F 2 1 UI
DESC Enables uncorrected error interrupt as specified in por_cxg_ha_errfr.UI
F 3 1 FI
DESC Enables fault handling interrupt for all detected deferred errors as specified in por_cxg_ha_errfr.FI
F 8 1 CFI
DESC Enables corrected error interrupt as specified in por_cxg_ha_errfr.CFI
R 0x3110 64 - S por_cxg_ha_errstatus_NS
RESET 0x0 0xed800000
DESC Functions as the non-secure error status register. AV and MV bits must be cleared in the same cycle, otherwise the error record does not have a consistent view.
F 31 1 AV
DESC Address register valid; writes to this bit are ignored if any of the UE, DE, or CE bits are set to 1, and the highest priority are not cleared to 0 in the same write; write a 1 to clear 1'b1: Address is valid; por_cxg_ha_erraddr contains a physical address for that recorded error 1'b0: Address is not valid
F 30 1 V
DESC Register valid; writes to this bit are ignored if any of the UE, DE, or CE bits are set to 1, and are not cleared to 0 in the same write; write a 1 to clear 1'b1: At least one error recorded; register is valid 1'b0: No errors recorded
F 29 1 UE
DESC Uncorrected errors; writes to this bit are ignored if the OF bit is set to 1, and is not cleared to 0 in the same write; write a 1 to clear 1'b1: At least one error detected that is not corrected and is not deferred to a slave 1'b0: No uncorrected errors detected
F 27 1 OF
DESC Overflow; asserted when multiple errors of the highest priority type are detected; write a 1 to clear 1'b1: More than one error detected 1'b0: Only one error of the highest priority type detected as described by UE/DE/CE fields
F 26 1 MV
DESC por_cxg_ha_errmisc valid; writes to this bit are ignored if any of the UE, DE, or CE bits are set to 1, and the highest priority are not cleared to 0 in the same write; write a 1 to clear 1'b1: Miscellaneous registers are valid 1'b0: Miscellaneous registers are not valid
F 24 1 CE
DESC Corrected errors; writes to this bit are ignored if the OF bit is set to 1, and is not cleared to 0 in the same write; write a 1 to clear 1'b1: At least one transient corrected error recorded 1'b0: No corrected errors recorded
F 23 1 DE
DESC Deferred errors; writes to this bit are ignored if the OF bit is set to 1, and is not cleared to 0 in the same write; write a 1 to clear 1'b1: At least one error is not corrected and is deferred 1'b0: No errors deferred
R 0x3118 64 - S por_cxg_ha_erraddr_NS
RESET 0x0 0x8000ffffffffffff
DESC Contains the non-secure error record address.
F 63 1 NS
DESC Security status of transaction 1'b1: Non-secure transaction 1'b0: Secure transaction CONSTRAINT: por_cxg_ha_erraddr.NS is redundant. Since it is writable, it cannot be used for logic qualification.
F 0 48 ADDR
DESC Transaction address
R 0x3120 64 - S por_cxg_ha_errmisc_NS
RESET 0x0 0xff0000000003f3
DESC Functions as the non-secure miscellaneous error register. Contains miscellaneous information about deferred/uncorrected errors.
F 4 6 SRCID
DESC CCIX RAID of the requestor or the snoop target
F 48 8 ERRSET
DESC RAM entry set address for parity error
F 0 2 ERRSRC
DESC Source of the parity error 2'b00: Read data buffer 0 2'b01: Read data buffer 1 2'b10: Write data buffer 0 2'b11: Write data buffer 1
ENDGROUP
GROUP por_cxg_ra_registers
R 0x0 64 RO - por_cxg_ra_node_info
RESET 0x100 0xffffffffffff
DESC Provides component identification information.
F 0 16 node_type
DESC CMN-600 node type identifier
F 16 16 node_id
DESC Component CHI node ID
PAR NODEID_PARAM
F 32 16 logical_id
DESC Component logical ID
PAR LOGICALID_PARAM
R 0x80 64 RO - por_cxg_ra_child_info
RESET 0x0 0xffffffff
DESC Provides component child identification information.
F 0 16 child_count
DESC Number of child nodes; used in discovery process
F 16 16 child_ptr_offset
DESC Starting register offset which contains pointers to the child nodes
R 0x900 64 RO - por_cxg_ra_unit_info
RESET 0x208020021000006 0x1fffffffffffff5f
DESC Provides component identification information for CXRA.
F 0 5 num_mem_regions
DESC Number of memory regions supported
PAR CXG_RA_SAM_NUM_ADDR_REGION_PARAM
F 6 1 num_mem_region_limit_enabled
DESC Memory region limiting enabled
PAR CXG_RA_SAM_MEM_REGION_LIMIT_EN_PARAM
F 8 8 a4s_logicalid
DESC AXI4Stream interfaces logical ID
PAR CXG_A4S_LOGICALID_PARAM
F 16 9 request_tracker_depth
DESC Depth of Request Tracker - number of outstanding Memory requests on CCIX
PAR CXG_RA_NUM_REQS_PARAM
F 25 9 rdb_depth
DESC Depth of Read Data Buffer
PAR CXG_RA_NUM_RDBUF_PARAM
F 34 9 wdb_depth
DESC Depth of Write Data Buffer
PAR CXG_RA_NUM_WRBUF_PARAM
F 43 9 snoop_tracker_depth
DESC Depth of Snoop Tracker - number of outstanding SNP requests on CCIX
PAR CXG_RA_NUM_SNPREQS_PARAM
F 52 9 snoop_databuffer_depth
DESC Depth of Snoop Data Buffer - number of outstanding SNP requests on CHI
PAR CXG_RA_NUM_SNPBUF_PARAM
R 0x980 64 - S por_cxg_ra_secure_register_groups_override
RESET 0x0 0xf
DESC Allows non-secure access to predefined groups of secure registers.
F 0 1 cfg_ctl
DESC Allows non-secure access to secure configuration control register
F 1 1 rasam_ctl
DESC Allows non-secure access to secure RA SAM control registers
F 2 1 linkid_ctl
DESC Allows non-secure access to secure RA Link ID registers
F 3 1 ldid_ctl
DESC Allows non-secure access to secure RA LDID registers
R 0xa00 64 - S por_cxg_ra_cfg_ctl
RESET 0x2 0x307
DESC Functions as the configuration control register. Specifies the current mode.
F 0 1 pcie_qos15_entry_rsv_en
DESC Enables entry reservation for QoS15 traffic from PCIe RN-I/RN-D 1'b1: Reserves tracker entry for QoS15 requests from PCIe RN-I/RN-D 1'b0: Does not reserve tracker entry for QoS15 requests from PCIe RN-I/RN-D
PAR CXG_SMP_MODE_EN_PARAM
F 1 1 qos15_entry_rsv_en
DESC Enables entry reservation for QoS15 traffic 1'b1: Reserves tracker entry for QoS15 requests 1'b0: Does not reserve tracker entry for QoS15 requests
F 2 1 pcie_nonqos15_entry_rsv_en
DESC Enables entry reservation for non QoS15 traffic from PCIe RN-I/RN-D 1'b1: Reserves tracker entry for non QoS15 requests from PCIe RN-I/RN-D 1'b0: Does not reserve tracker entry for non QoS15 requests from PCIe RN-I/RN-D
PAR CXG_SMP_MODE_EN_PARAM
F 8 1 en_cxla_pmucmd_prop
DESC When set, enables the propagation of PMU commands to CXLA NOTE: By default, CXLA PMU command propagation is disabled.
F 9 1 cxsa_mode_en
DESC When set, enables the CCIX Slave Agent mode.In this mode RA functions as a CCIX Slave Agent 1'b1: CCIX Slave Agent 1'b0: CCIX Requesting Agent
R 0xa08 64 - S por_cxg_ra_aux_ctl
RESET 0x6 0x107ff
DESC Functions as the auxiliary control register for CXRA.
F 0 1 cg_disable
DESC Disables clock gating when set
F 1 1 early_rdrcpt_en
DESC Early ReadReceipt enable; enables sending early ReadReceipt for ordered read requests
F 2 1 early_compack_en
DESC Early CompAck enable; enables sending early CompAck on CCIX for requests that require CompAck
F 3 1 devnr_ord_wfc
DESC When set, enables waiting for completion (COMP) before dispatching next Device-nR dependent transaction (TXN)
F 4 1 sameaddr_ord_wfc
DESC When set, enables waiting for completion (COMP) before dispatching next same Addr dependent transaction (TXN)
F 5 1 dis_rem_secure_access
DESC When set, treats all the incoming snoops as non-secure and forces the NS bit to 1
F 6 1 r2byp_en
DESC When set, enables request bypass. Applies to read and dataless requests only. Note: When set will affect the capability to chain a request on the TX side
F 7 1 dis_rdreqchain
DESC When set, disables chaining of read and dataless requests.
F 8 1 dis_wrreqchain
DESC When set, disables chaining of write requests.
F 9 1 dis_dbiddispq_rsp
DESC When set, disables the dispatch of DBID responses from a separate DispatchQ.
F 10 1 dis_cxsa_early_write_comp
DESC When set, disables early write completions in CCIX Slave Agent mode.
F 16 1 smp_mode_en
DESC When set, enables Symmetric Multiprocessor Mode (SMP) Mode.
PAR CXG_SMP_MODE_EN_PARAM
R 0xda8 64 - S por_cxg_ra_sam_addr_region_reg0
RESET 0x0 0x83f0ffffffff003f
DESC Configures Address Region 0 for RA SAM.
F 63 1 reg0_valid
DESC Specifies if the memory region is valid
F 52 6 reg0_ha_tgtid
DESC Specifies the target HAID
F 16 32 reg0_base_addr
DESC Specifies the 2^n-aligned base address for the memory region
F 0 6 reg0_size
DESC Specifies the size of the memory region
R 0xdb0 64 - S por_cxg_ra_sam_addr_region_reg1
RESET 0x0 0x83f0ffffffff003f
DESC Configures Address Region 1 for RA SAM.
F 63 1 reg1_valid
DESC Specifies if the memory region is valid
F 52 6 reg1_ha_tgtid
DESC Specifies the target HAID
F 16 32 reg1_base_addr
DESC Specifies the 2^n-aligned base address for the memory region
F 0 6 reg1_size
DESC Specifies the size of the memory region
R 0xdb8 64 - S por_cxg_ra_sam_addr_region_reg2
RESET 0x0 0x83f0ffffffff003f
DESC Configures Address Region 2 for RA SAM.
F 63 1 reg2_valid
DESC Specifies if the memory region is valid
F 52 6 reg2_ha_tgtid
DESC Specifies the target HAID
F 16 32 reg2_base_addr
DESC Specifies the 2^n-aligned base address for the memory region
F 0 6 reg2_size
DESC Specifies the size of the memory region
R 0xdc0 64 - S por_cxg_ra_sam_addr_region_reg3
RESET 0x0 0x83f0ffffffff003f
DESC Configures Address Region 3 for RA SAM.
F 63 1 reg3_valid
DESC Specifies if the memory region is valid
F 52 6 reg3_ha_tgtid
DESC Specifies the target HAID
F 16 32 reg3_base_addr
DESC Specifies the 2^n-aligned base address for the memory region
F 0 6 reg3_size
DESC Specifies the size of the memory region
R 0xdc8 64 - S por_cxg_ra_sam_addr_region_reg4
RESET 0x0 0x83f0ffffffff003f
DESC Configures Address Region 4 for RA SAM.
F 63 1 reg4_valid
DESC Specifies if the memory region is valid
F 52 6 reg4_ha_tgtid
DESC Specifies the target HAID
F 16 32 reg4_base_addr
DESC Specifies the 2^n-aligned base address for the memory region
F 0 6 reg4_size
DESC Specifies the size of the memory region
R 0xdd0 64 - S por_cxg_ra_sam_addr_region_reg5
RESET 0x0 0x83f0ffffffff003f
DESC Configures Address Region 5 for RA SAM.
F 63 1 reg5_valid
DESC Specifies if the memory region is valid
F 52 6 reg5_ha_tgtid
DESC Specifies the target HAID
F 16 32 reg5_base_addr
DESC Specifies the 2^n-aligned base address for the memory region
F 0 6 reg5_size
DESC Specifies the size of the memory region
R 0xdd8 64 - S por_cxg_ra_sam_addr_region_reg6
RESET 0x0 0x83f0ffffffff003f
DESC Configures Address Region 6 for RA SAM.
F 63 1 reg6_valid
DESC Specifies if the memory region is valid
F 52 6 reg6_ha_tgtid
DESC Specifies the target HAID
F 16 32 reg6_base_addr
DESC Specifies the 2^n-aligned base address for the memory region
F 0 6 reg6_size
DESC Specifies the size of the memory region
R 0xde0 64 - S por_cxg_ra_sam_addr_region_reg7
RESET 0x0 0x83f0ffffffff003f
DESC Configures Address Region 7 for RA SAM.
F 63 1 reg7_valid
DESC Specifies if the memory region is valid
F 52 6 reg7_ha_tgtid
DESC Specifies the target HAID
F 16 32 reg7_base_addr
DESC Specifies the 2^n-aligned base address for the memory region
F 0 6 reg7_size
DESC Specifies the size of the memory region
R 0xe00 64 - S por_cxg_ra_sam_mem_region0_limit_reg
RESET 0x0 0xffffffff0000
DESC Specifies the memory region 0 limit address.
F 16 32 reg0_limit_addr
DESC Memory region 0 limit address
R 0xe08 64 - S por_cxg_ra_sam_mem_region1_limit_reg
RESET 0x0 0xffffffff0000
DESC Specifies the memory region 1 limit address.
F 16 32 reg1_limit_addr
DESC Memory region 1 limit address
R 0xe10 64 - S por_cxg_ra_sam_mem_region2_limit_reg
RESET 0x0 0xffffffff0000
DESC Specifies the memory region 2 limit address.
F 16 32 reg2_limit_addr
DESC Memory region 2 limit address
R 0xe18 64 - S por_cxg_ra_sam_mem_region3_limit_reg
RESET 0x0 0xffffffff0000
DESC Specifies the memory region 3 limit address.
F 16 32 reg3_limit_addr
DESC Memory region 3 limit address
R 0xe20 64 - S por_cxg_ra_sam_mem_region4_limit_reg
RESET 0x0 0xffffffff0000
DESC Specifies the memory region 4 limit address.
F 16 32 reg4_limit_addr
DESC Memory region 4 limit address
R 0xe28 64 - S por_cxg_ra_sam_mem_region5_limit_reg
RESET 0x0 0xffffffff0000
DESC Specifies the memory region 5 limit address.
F 16 32 reg5_limit_addr
DESC Memory region 5 limit address
R 0xe30 64 - S por_cxg_ra_sam_mem_region6_limit_reg
RESET 0x0 0xffffffff0000
DESC Specifies the memory region 6 limit address.
F 16 32 reg6_limit_addr
DESC Memory region 6 limit address
R 0xe38 64 - S por_cxg_ra_sam_mem_region7_limit_reg
RESET 0x0 0xffffffff0000
DESC Specifies the memory region 7 limit address.
F 16 32 reg7_limit_addr
DESC Memory region 7 limit address
R 0xe60 64 - S por_cxg_ra_agentid_to_linkid_reg0
RESET 0x0 0x303030303030303
DESC Specifies the mapping of Agent ID to Link ID for Agent IDs 0 to 7.
F 0 2 agent0_linkid
DESC Specifies the Link ID for Agent ID 0
F 8 2 agent1_linkid
DESC Specifies the Link ID for Agent ID 1
F 16 2 agent2_linkid
DESC Specifies the Link ID for Agent ID 2
F 24 2 agent3_linkid
DESC Specifies the Link ID for Agent ID 3
F 32 2 agent4_linkid
DESC Specifies the Link ID for Agent ID 4
F 40 2 agent5_linkid
DESC Specifies the Link ID for Agent ID 5
F 48 2 agent6_linkid
DESC Specifies the Link ID for Agent ID 6
F 56 2 agent7_linkid
DESC Specifies the Link ID for Agent ID 7
R 0xe68 64 - S por_cxg_ra_agentid_to_linkid_reg1
RESET 0x0 0x303030303030303
DESC Specifies the mapping of Agent ID to Link ID for Agent IDs 8 to 15.
F 0 2 agent8_linkid
DESC Specifies the Link ID for Agent ID 8
F 8 2 agent9_linkid
DESC Specifies the Link ID for Agent ID 9
F 16 2 agent10_linkid
DESC Specifies the Link ID for Agent ID 10
F 24 2 agent11_linkid
DESC Specifies the Link ID for Agent ID 11
F 32 2 agent12_linkid
DESC Specifies the Link ID for Agent ID 12
F 40 2 agent13_linkid
DESC Specifies the Link ID for Agent ID 13
F 48 2 agent14_linkid
DESC Specifies the Link ID for Agent ID 14
F 56 2 agent15_linkid
DESC Specifies the Link ID for Agent ID 15
R 0xe70 64 - S por_cxg_ra_agentid_to_linkid_reg2
RESET 0x0 0x303030303030303
DESC Specifies the mapping of Agent ID to Link ID for Agent IDs 16 to 23.
F 0 2 agent16_linkid
DESC Specifies the Link ID for Agent ID 16
F 8 2 agent17_linkid
DESC Specifies the Link ID for Agent ID 17
F 16 2 agent18_linkid
DESC Specifies the Link ID for Agent ID 18
F 24 2 agent19_linkid
DESC Specifies the Link ID for Agent ID 19
F 32 2 agent20_linkid
DESC Specifies the Link ID for Agent ID 20
F 40 2 agent21_linkid
DESC Specifies the Link ID for Agent ID 21
F 48 2 agent22_linkid
DESC Specifies the Link ID for Agent ID 22
F 56 2 agent23_linkid
DESC Specifies the Link ID for Agent ID 23
R 0xe78 64 - S por_cxg_ra_agentid_to_linkid_reg3
RESET 0x0 0x303030303030303
DESC Specifies the mapping of Agent ID to Link ID for Agent IDs 24 to 31.
F 0 2 agent24_linkid
DESC Specifies the Link ID for Agent ID 24
F 8 2 agent25_linkid
DESC Specifies the Link ID for Agent ID 25
F 16 2 agent26_linkid
DESC Specifies the Link ID for Agent ID 26
F 24 2 agent27_linkid
DESC Specifies the Link ID for Agent ID 27
F 32 2 agent28_linkid
DESC Specifies the Link ID for Agent ID 28
F 40 2 agent29_linkid
DESC Specifies the Link ID for Agent ID 29
F 48 2 agent30_linkid
DESC Specifies the Link ID for Agent ID 30
F 56 2 agent31_linkid
DESC Specifies the Link ID for Agent ID 31
R 0xe80 64 - S por_cxg_ra_agentid_to_linkid_reg4
RESET 0x0 0x303030303030303
DESC Specifies the mapping of Agent ID to Link ID for Agent IDs 32 to 39.
F 0 2 agent32_linkid
DESC Specifies the Link ID for Agent ID 32
F 8 2 agent33_linkid
DESC Specifies the Link ID for Agent ID 33
F 16 2 agent34_linkid
DESC Specifies the Link ID for Agent ID 34
F 24 2 agent35_linkid
DESC Specifies the Link ID for Agent ID 35
F 32 2 agent36_linkid
DESC Specifies the Link ID for Agent ID 36
F 40 2 agent37_linkid
DESC Specifies the Link ID for Agent ID 37
F 48 2 agent38_linkid
DESC Specifies the Link ID for Agent ID 38
F 56 2 agent39_linkid
DESC Specifies the Link ID for Agent ID 39
R 0xe88 64 - S por_cxg_ra_agentid_to_linkid_reg5
RESET 0x0 0x303030303030303
DESC Specifies the mapping of Agent ID to Link ID for Agent IDs 40 to 47.
F 0 2 agent40_linkid
DESC Specifies the Link ID for Agent ID 40
F 8 2 agent41_linkid
DESC Specifies the Link ID for Agent ID 41
F 16 2 agent42_linkid
DESC Specifies the Link ID for Agent ID 42
F 24 2 agent43_linkid
DESC Specifies the Link ID for Agent ID 43
F 32 2 agent44_linkid
DESC Specifies the Link ID for Agent ID 44
F 40 2 agent45_linkid
DESC Specifies the Link ID for Agent ID 45
F 48 2 agent46_linkid
DESC Specifies the Link ID for Agent ID 46
F 56 2 agent47_linkid
DESC Specifies the Link ID for Agent ID 47
R 0xe90 64 - S por_cxg_ra_agentid_to_linkid_reg6
RESET 0x0 0x303030303030303
DESC Specifies the mapping of Agent ID to Link ID for Agent IDs 48 to 55.
F 0 2 agent48_linkid
DESC Specifies the Link ID for Agent ID 48
F 8 2 agent49_linkid
DESC Specifies the Link ID for Agent ID 49
F 16 2 agent50_linkid
DESC Specifies the Link ID for Agent ID 50
F 24 2 agent51_linkid
DESC Specifies the Link ID for Agent ID 51
F 32 2 agent52_linkid
DESC Specifies the Link ID for Agent ID 52
F 40 2 agent53_linkid
DESC Specifies the Link ID for Agent ID 53
F 48 2 agent54_linkid
DESC Specifies the Link ID for Agent ID 54
F 56 2 agent55_linkid
DESC Specifies the Link ID for Agent ID 55
R 0xe98 64 - S por_cxg_ra_agentid_to_linkid_reg7
RESET 0x0 0x303030303030303
DESC Specifies the mapping of Agent ID to Link ID for Agent IDs 56 to 63.
F 0 2 agent56_linkid
DESC Specifies the Link ID for Agent ID 56
F 8 2 agent57_linkid
DESC Specifies the Link ID for Agent ID 57
F 16 2 agent58_linkid
DESC Specifies the Link ID for Agent ID 58
F 24 2 agent59_linkid
DESC Specifies the Link ID for Agent ID 59
F 32 2 agent60_linkid
DESC Specifies the Link ID for Agent ID 60
F 40 2 agent61_linkid
DESC Specifies the Link ID for Agent ID 61
F 48 2 agent62_linkid
DESC Specifies the Link ID for Agent ID 62
F 56 2 agent63_linkid
DESC Specifies the Link ID for Agent ID 63
R 0xea0 64 - S por_cxg_ra_rnf_ldid_to_raid_reg0
RESET 0x0 0x3f3f3f3f3f3f3f3f
DESC Specifies the mapping of RN-F LDID to RAID for LDIDs 0 to 7.
F 0 6 ldid0_raid
DESC Specifies the RAID for LDID 0
F 8 6 ldid1_raid
DESC Specifies the RAID for LDID 1
F 16 6 ldid2_raid
DESC Specifies the RAID for LDID 2
F 24 6 ldid3_raid
DESC Specifies the RAID for LDID 3
F 32 6 ldid4_raid
DESC Specifies the RAID for LDID 4
F 40 6 ldid5_raid
DESC Specifies the RAID for LDID 5
F 48 6 ldid6_raid
DESC Specifies the RAID for LDID 6
F 56 6 ldid7_raid
DESC Specifies the RAID for LDID 7
R 0xea8 64 - S por_cxg_ra_rnf_ldid_to_raid_reg1
RESET 0x0 0x3f3f3f3f3f3f3f3f
DESC Specifies the mapping of RN-F LDID to RAID for LDIDs 8 to 15.
F 0 6 ldid8_raid
DESC Specifies the RAID for LDID 8
F 8 6 ldid9_raid
DESC Specifies the RAID for LDID 9
F 16 6 ldid10_raid
DESC Specifies the RAID for LDID 10
F 24 6 ldid11_raid
DESC Specifies the RAID for LDID 11
F 32 6 ldid12_raid
DESC Specifies the RAID for LDID 12
F 40 6 ldid13_raid
DESC Specifies the RAID for LDID 13
F 48 6 ldid14_raid
DESC Specifies the RAID for LDID 14
F 56 6 ldid15_raid
DESC Specifies the RAID for LDID 15
R 0xeb0 64 - S por_cxg_ra_rnf_ldid_to_raid_reg2
RESET 0x0 0x3f3f3f3f3f3f3f3f
DESC Specifies the mapping of RN-F LDID to RAID for LDIDs 16 to 23.
F 0 6 ldid16_raid
DESC Specifies the RAID for LDID 16
F 8 6 ldid17_raid
DESC Specifies the RAID for LDID 17
F 16 6 ldid18_raid
DESC Specifies the RAID for LDID 18
F 24 6 ldid19_raid
DESC Specifies the RAID for LDID 19
F 32 6 ldid20_raid
DESC Specifies the RAID for LDID 20
F 40 6 ldid21_raid
DESC Specifies the RAID for LDID 21
F 48 6 ldid22_raid
DESC Specifies the RAID for LDID 22
F 56 6 ldid23_raid
DESC Specifies the RAID for LDID 23
R 0xeb8 64 - S por_cxg_ra_rnf_ldid_to_raid_reg3
RESET 0x0 0x3f3f3f3f3f3f3f3f
DESC Specifies the mapping of RN-F LDID to RAID for LDIDs 24 to 31.
F 0 6 ldid24_raid
DESC Specifies the RAID for LDID 24
F 8 6 ldid25_raid
DESC Specifies the RAID for LDID 25
F 16 6 ldid26_raid
DESC Specifies the RAID for LDID 26
F 24 6 ldid27_raid
DESC Specifies the RAID for LDID 27
F 32 6 ldid28_raid
DESC Specifies the RAID for LDID 28
F 40 6 ldid29_raid
DESC Specifies the RAID for LDID 29
F 48 6 ldid30_raid
DESC Specifies the RAID for LDID 30
F 56 6 ldid31_raid
DESC Specifies the RAID for LDID 31
R 0xec0 64 - S por_cxg_ra_rnf_ldid_to_raid_reg4
RESET 0x0 0x3f3f3f3f3f3f3f3f
DESC Specifies the mapping of RN-F LDID to RAID for LDIDs 32 to 39.
F 0 6 ldid32_raid
DESC Specifies the RAID for LDID 32
F 8 6 ldid33_raid
DESC Specifies the RAID for LDID 33
F 16 6 ldid34_raid
DESC Specifies the RAID for LDID 34
F 24 6 ldid35_raid
DESC Specifies the RAID for LDID 35
F 32 6 ldid36_raid
DESC Specifies the RAID for LDID 36
F 40 6 ldid37_raid
DESC Specifies the RAID for LDID 37
F 48 6 ldid38_raid
DESC Specifies the RAID for LDID 38
F 56 6 ldid39_raid
DESC Specifies the RAID for LDID 39
R 0xec8 64 - S por_cxg_ra_rnf_ldid_to_raid_reg5
RESET 0x0 0x3f3f3f3f3f3f3f3f
DESC Specifies the mapping of RN-F LDID to RAID for LDIDs 40 to 47.
F 0 6 ldid40_raid
DESC Specifies the RAID for LDID 40
F 8 6 ldid41_raid
DESC Specifies the RAID for LDID 41
F 16 6 ldid42_raid
DESC Specifies the RAID for LDID 42
F 24 6 ldid43_raid
DESC Specifies the RAID for LDID 43
F 32 6 ldid44_raid
DESC Specifies the RAID for LDID 44
F 40 6 ldid45_raid
DESC Specifies the RAID for LDID 45
F 48 6 ldid46_raid
DESC Specifies the RAID for LDID 46
F 56 6 ldid47_raid
DESC Specifies the RAID for LDID 47
R 0xed0 64 - S por_cxg_ra_rnf_ldid_to_raid_reg6
RESET 0x0 0x3f3f3f3f3f3f3f3f
DESC Specifies the mapping of RN-F LDID to RAID for LDIDs 48 to 55.
F 0 6 ldid48_raid
DESC Specifies the RAID for LDID 48
F 8 6 ldid49_raid
DESC Specifies the RAID for LDID 49
F 16 6 ldid50_raid
DESC Specifies the RAID for LDID 50
F 24 6 ldid51_raid
DESC Specifies the RAID for LDID 51
F 32 6 ldid52_raid
DESC Specifies the RAID for LDID 52
F 40 6 ldid53_raid
DESC Specifies the RAID for LDID 53
F 48 6 ldid54_raid
DESC Specifies the RAID for LDID 54
F 56 6 ldid55_raid
DESC Specifies the RAID for LDID 55
R 0xed8 64 - S por_cxg_ra_rnf_ldid_to_raid_reg7
RESET 0x0 0x3f3f3f3f3f3f3f3f
DESC Specifies the mapping of RN-F LDID to RAID for LDIDs 56 to 63.
F 0 6 ldid56_raid
DESC Specifies the RAID for LDID 56
F 8 6 ldid57_raid
DESC Specifies the RAID for LDID 57
F 16 6 ldid58_raid
DESC Specifies the RAID for LDID 58
F 24 6 ldid59_raid
DESC Specifies the RAID for LDID 59
F 32 6 ldid60_raid
DESC Specifies the RAID for LDID 60
F 40 6 ldid61_raid
DESC Specifies the RAID for LDID 61
F 48 6 ldid62_raid
DESC Specifies the RAID for LDID 62
F 56 6 ldid63_raid
DESC Specifies the RAID for LDID 63
R 0xee0 64 - S por_cxg_ra_rni_ldid_to_raid_reg0
RESET 0x0 0x3f3f3f3f3f3f3f3f
DESC Specifies the mapping of RN-I LDID to RAID for LDIDs 0 to 7.
F 0 6 ldid0_raid
DESC Specifies the RAID for LDID 0
F 8 6 ldid1_raid
DESC Specifies the RAID for LDID 1
F 16 6 ldid2_raid
DESC Specifies the RAID for LDID 2
F 24 6 ldid3_raid
DESC Specifies the RAID for LDID 3
F 32 6 ldid4_raid
DESC Specifies the RAID for LDID 4
F 40 6 ldid5_raid
DESC Specifies the RAID for LDID 5
F 48 6 ldid6_raid
DESC Specifies the RAID for LDID 6
F 56 6 ldid7_raid
DESC Specifies the RAID for LDID 7
R 0xee8 64 - S por_cxg_ra_rni_ldid_to_raid_reg1
RESET 0x0 0x3f3f3f3f3f3f3f3f
DESC Specifies the mapping of RN-I LDID to RAID for LDIDs 8 to 15.
F 0 6 ldid8_raid
DESC Specifies the RAID for LDID 8
F 8 6 ldid9_raid
DESC Specifies the RAID for LDID 9
F 16 6 ldid10_raid
DESC Specifies the RAID for LDID 10
F 24 6 ldid11_raid
DESC Specifies the RAID for LDID 11
F 32 6 ldid12_raid
DESC Specifies the RAID for LDID 12
F 40 6 ldid13_raid
DESC Specifies the RAID for LDID 13
F 48 6 ldid14_raid
DESC Specifies the RAID for LDID 14
F 56 6 ldid15_raid
DESC Specifies the RAID for LDID 15
R 0xef0 64 - S por_cxg_ra_rni_ldid_to_raid_reg2
RESET 0x0 0x3f3f3f3f3f3f3f3f
DESC Specifies the mapping of RN-I LDID to RAID for LDIDs 16 to 23.
F 0 6 ldid16_raid
DESC Specifies the RAID for LDID 16
F 8 6 ldid17_raid
DESC Specifies the RAID for LDID 17
F 16 6 ldid18_raid
DESC Specifies the RAID for LDID 18
F 24 6 ldid19_raid
DESC Specifies the RAID for LDID 19
F 32 6 ldid20_raid
DESC Specifies the RAID for LDID 20
F 40 6 ldid21_raid
DESC Specifies the RAID for LDID 21
F 48 6 ldid22_raid
DESC Specifies the RAID for LDID 22
F 56 6 ldid23_raid
DESC Specifies the RAID for LDID 23
R 0xef8 64 - S por_cxg_ra_rni_ldid_to_raid_reg3
RESET 0x0 0x3f3f3f3f3f3f3f3f
DESC Specifies the mapping of RN-I LDID to RAID for LDIDs 24 to 31.
F 0 6 ldid24_raid
DESC Specifies the RAID for LDID 24
F 8 6 ldid25_raid
DESC Specifies the RAID for LDID 25
F 16 6 ldid26_raid
DESC Specifies the RAID for LDID 26
F 24 6 ldid27_raid
DESC Specifies the RAID for LDID 27
F 32 6 ldid28_raid
DESC Specifies the RAID for LDID 28
F 40 6 ldid29_raid
DESC Specifies the RAID for LDID 29
F 48 6 ldid30_raid
DESC Specifies the RAID for LDID 30
F 56 6 ldid31_raid
DESC Specifies the RAID for LDID 31
R 0xf00 64 - S por_cxg_ra_rnd_ldid_to_raid_reg0
RESET 0x0 0x3f3f3f3f3f3f3f3f
DESC Specifies the mapping of RN-D LDID to RAID for LDIDs 0 to 7.
F 0 6 ldid0_raid
DESC Specifies the RAID for LDID 0
F 8 6 ldid1_raid
DESC Specifies the RAID for LDID 1
F 16 6 ldid2_raid
DESC Specifies the RAID for LDID 2
F 24 6 ldid3_raid
DESC Specifies the RAID for LDID 3
F 32 6 ldid4_raid
DESC Specifies the RAID for LDID 4
F 40 6 ldid5_raid
DESC Specifies the RAID for LDID 5
F 48 6 ldid6_raid
DESC Specifies the RAID for LDID 6
F 56 6 ldid7_raid
DESC Specifies the RAID for LDID 7
R 0xf08 64 - S por_cxg_ra_rnd_ldid_to_raid_reg1
RESET 0x0 0x3f3f3f3f3f3f3f3f
DESC Specifies the mapping of RN-D LDID to RAID for LDIDs 8 to 15.
F 0 6 ldid8_raid
DESC Specifies the RAID for LDID 8
F 8 6 ldid9_raid
DESC Specifies the RAID for LDID 9
F 16 6 ldid10_raid
DESC Specifies the RAID for LDID 10
F 24 6 ldid11_raid
DESC Specifies the RAID for LDID 11
F 32 6 ldid12_raid
DESC Specifies the RAID for LDID 12
F 40 6 ldid13_raid
DESC Specifies the RAID for LDID 13
F 48 6 ldid14_raid
DESC Specifies the RAID for LDID 14
F 56 6 ldid15_raid
DESC Specifies the RAID for LDID 15
R 0xf10 64 - S por_cxg_ra_rnd_ldid_to_raid_reg2
RESET 0x0 0x3f3f3f3f3f3f3f3f
DESC Specifies the mapping of RN-D LDID to RAID for LDIDs 16 to 23.
F 0 6 ldid16_raid
DESC Specifies the RAID for LDID 16
F 8 6 ldid17_raid
DESC Specifies the RAID for LDID 17
F 16 6 ldid18_raid
DESC Specifies the RAID for LDID 18
F 24 6 ldid19_raid
DESC Specifies the RAID for LDID 19
F 32 6 ldid20_raid
DESC Specifies the RAID for LDID 20
F 40 6 ldid21_raid
DESC Specifies the RAID for LDID 21
F 48 6 ldid22_raid
DESC Specifies the RAID for LDID 22
F 56 6 ldid23_raid
DESC Specifies the RAID for LDID 23
R 0xf18 64 - S por_cxg_ra_rnd_ldid_to_raid_reg3
RESET 0x0 0x3f3f3f3f3f3f3f3f
DESC Specifies the mapping of RN-D LDID to RAID for LDIDs 24 to 31.
F 0 6 ldid24_raid
DESC Specifies the RAID for LDID 24
F 8 6 ldid25_raid
DESC Specifies the RAID for LDID 25
F 16 6 ldid26_raid
DESC Specifies the RAID for LDID 26
F 24 6 ldid27_raid
DESC Specifies the RAID for LDID 27
F 32 6 ldid28_raid
DESC Specifies the RAID for LDID 28
F 40 6 ldid29_raid
DESC Specifies the RAID for LDID 29
F 48 6 ldid30_raid
DESC Specifies the RAID for LDID 30
F 56 6 ldid31_raid
DESC Specifies the RAID for LDID 31
R 0xf20 64 - S por_cxg_ra_agentid_to_linkid_val
RESET 0x0 0xffffffffffffffff
DESC Specifies which Agent ID to Link ID mappings are valid.
F 0 64 valid
DESC Specifies whether the Link ID is valid; bit number corresponds to logical Agent ID number (from 0 to 63)
R 0xf28 64 - S por_cxg_ra_rnf_ldid_to_raid_val
RESET 0x0 0xffffffffffffffff
DESC Specifies which RN-F LDID to RAID mappings are valid.
F 0 64 valid
DESC Specifies whether the RAID is valid; bit number corresponds to logical RN-F LDID number (from 0 to 63)
R 0xf30 64 - S por_cxg_ra_rni_ldid_to_raid_val
RESET 0x0 0xffffffff
DESC Specifies which RN-I LDID to RAID mappings are valid.
F 0 32 valid
DESC Specifies whether the RAID is valid; bit number corresponds to logical RN-I LDID number (from 0 to 31)
R 0xf38 64 - S por_cxg_ra_rnd_ldid_to_raid_val
RESET 0x0 0xffffffff
DESC Specifies which RN-D LDID to RAID mappings are valid.
F 0 32 valid
DESC Specifies whether the RAID is valid; bit number corresponds to logical RN-D LDID number (from 0 to 31)
R 0x1000 64 V S por_cxg_ra_cxprtcl_link0_ctl
RESET 0x0 0x1ff
DESC Functions as the CXRA CCIX Protocol Link 0 control register. Works with por_cxg_ra_cxprtcl_link0_status.
F 0 1 lnk0_link_en
DESC Enables CCIX Link 0 when set 1'b0: Link is disabled 1'b1: Link is enabled
F 1 1 lnk0_link_req
DESC Link Up/Down request; software writes this register bit to request a Link Up or Link Down in the local agent 1'b0: Link Down request NOTE: The local agent does not return remote protocol credits yet since remote agent may still be in Link_UP state. 1'b1: Link Up request
F 2 1 lnk0_link_up
DESC Link Up status. Software writes this register bit to indicate Link status after polling Link_ACK and Link_DN status in the remote agent 1'b0: Link is not Up. Software clears Link_UP when Link_ACK status is clear and Link_DN status is set in both local and remote agents. The local agent stops responding to any protocol activity from remote agent, including acceptance of protocol credits, when Link_UP is clear 1'b1: Link is Up. Software sets Link_UP when Link_ACK status is set and Link_DN status is clear in both local and remote agents; the local agent starts sending local protocol credits to remote agent
F 3 1 lnk0_dvmdomain_req
DESC Controls DVM domain enable (SYSCOREQ) for CCIX Link 0
F 4 4 lnk0_num_snpcrds
DESC Controls the number of CCIX snoop credits assigned to Link 0 4'h0: Total credits are equally divided across all links 4'h1: 25% of credits assigned 4'h2: 50% of credits assigned 4'h3: 75% of credits assigned 4'h4: 100% of credits assigned 4'hF: 0% of credits assigned
F 8 1 lnk0_dis_cpuevent_prop
DESC When set, disables the propagation of CPU Events on CCIX Link 0 NOTE: This field is applicable only when SMP Mode enable parameter is set.
R 0x1008 64 ROV S por_cxg_ra_cxprtcl_link0_status
RESET 0x2 0xf
DESC Functions as the CXRA CCIX Protocol Link 0 status register. Works with por_cxg_ra_cxprtcl_link0_ctl.
F 0 1 lnk0_link_ack
DESC Link Up/Down acknowledge; hardware updates this register bit to acknowledge the software link request 1'b0: Link Down acknowledge; hardware clears Link_ACK on receiving a Link Down request; the local agent stops granting protocol credits and starts returning protocol credits to the remote agent when Link_ACK is clear 1'b1: Link Up acknowledge; hardware sets Link_ACK when the local agent is ready to start accepting protocol credits from the remote agent NOTE: The local agent must clear Link_DN before setting Link_ACK.
F 1 1 lnk0_link_down
DESC Link Down status; hardware updates this register bit to indicate Link Down status 1'b0: Link is not Down; hardware clears Link_DN when it receives a Link Up request 1'b1: Link is Down; hardware sets Link_DN after the local agent has received all local protocol credits. The local agent must continue to respond to any remote protocol activity, including accepting and returning remote protocol credits until Link Up is clear 
F 2 1 lnk0_dvmdomain_ack
DESC Provides DVM domain status (SYSCOACK) for CCIX Link 0
F 3 1 lnk0_ot_cbkwr
DESC Provides status for outstanding CopyBack Write for CCIX Link0
R 0x1010 64 V S por_cxg_ra_cxprtcl_link1_ctl
RESET 0x0 0x1ff
DESC Functions as the CXRA CCIX Protocol Link 1 control register. Works with por_cxg_ra_cxprtcl_link1_status.
F 0 1 lnk1_link_en
DESC Enables CCIX Link 1 when set 1'b0: Link is disabled 1'b1: Link is enabled
F 1 1 lnk1_link_req
DESC Link Up/Down request; software writes this register bit to request a Link Up or Link Down in the local agent 1'b0: Link Down request NOTE: The local agent does not return remote protocol credits yet since remote agent may still be in Link_UP state. 1'b1: Link Up request
F 2 1 lnk1_link_up
DESC Link Up status. Software writes this register bit to indicate Link status after polling Link_ACK and Link_DN status in the remote agent 1'b0: Link is not Up. Software clears Link_UP when Link_ACK status is clear and Link_DN status is set in both local and remote agents. The local agent stops responding to any protocol activity from remote agent, including acceptance of protocol credits, when Link_UP is clear 1'b1: Link is Up. Software sets Link_UP when Link_ACK status is set and Link_DN status is clear in both local and remote agents; the local agent starts sending local protocol credits to remote agent
F 3 1 lnk1_dvmdomain_req
DESC Controls DVM domain enable (SYSCOREQ) for CCIX Link 1
F 4 4 lnk1_num_snpcrds
DESC Controls the number of CCIX snoop credits assigned to Link 1 4'h0: Total credits are equally divided across all links 4'h1: 25% of credits assigned 4'h2: 50% of credits assigned 4'h3: 75% of credits assigned 4'h4: 100% of credits assigned 4'hF: 0% of credits assigned
F 8 1 lnk1_dis_cpuevent_prop
DESC When set, disables the propagation of CPU Events on CCIX Link 1 NOTE: This field is applicable only when SMP Mode enable parameter is set.
R 0x1018 64 ROV S por_cxg_ra_cxprtcl_link1_status
RESET 0x2 0xf
DESC Functions as the CXRA CCIX Protocol Link 1 status register. Works with por_cxg_ra_cxprtcl_link1_ctl.
F 0 1 lnk1_link_ack
DESC Link Up/Down acknowledge; hardware updates this register bit to acknowledge the software link request 1'b0: Link Down acknowledge; hardware clears Link_ACK on receiving a Link Down request; the local agent stops sending protocol credits to the remote agent when Link_ACK is clear 1'b1: Link Up acknowledge; hardware sets Link_ACK when the local agent is ready to start accepting protocol credits from the remote agent NOTE: The local agent must clear Link_DN before setting Link_ACK.
F 1 1 lnk1_link_down
DESC Link Down status; hardware updates this register bit to indicate Link Down status 1'b0: Link is not Down; hardware clears Link_DN when it receives a Link Up request 1'b1: Link is Down; hardware sets Link_DN after the local agent has received all local protocol credits. The local agent must continue to respond to any remote protocol activity, including accepting and returning remote protocol credits until Link Up is clear 
F 2 1 lnk1_dvmdomain_ack
DESC Provides DVM domain status (SYSCOACK) for CCIX Link 1
F 3 1 lnk1_ot_cbkwr
DESC Provides status for outstanding CopyBack Write for CCIX Link1
R 0x1020 64 V S por_cxg_ra_cxprtcl_link2_ctl
RESET 0x0 0x1ff
DESC Functions as the CXRA CCIX Protocol Link 2 control register. Works with por_cxg_ra_cxprtcl_link2_status.
F 0 1 lnk2_link_en
DESC Enables CCIX Link 2 when set 1'b0: Link is disabled 1'b1: Link is enabled
F 1 1 lnk2_link_req
DESC Link Up/Down request; software writes this register bit to request a Link Up or Link Down in the local agent 1'b0: Link Down request NOTE: The local agent does not return remote protocol credits yet since remote agent may still be in Link_UP state. 1'b1: Link Up request
F 2 1 lnk2_link_up
DESC Link Up status. Software writes this register bit to indicate Link status after polling Link_ACK and Link_DN status in the remote agent 1'b0: Link is not Up. Software clears Link_UP when Link_ACK status is clear and Link_DN status is set in both local and remote agents. The local agent stops responding to any protocol activity from remote agent, including acceptance of protocol credits, when Link_UP is clear 1'b1: Link is Up. Software sets Link_UP when Link_ACK status is set and Link_DN status is clear in both local and remote agents; the local agent starts sending local protocol credits to remote agent
F 3 1 lnk2_dvmdomain_req
DESC Controls DVM domain enable (SYSCOREQ) for CCIX Link 2
F 4 4 lnk2_num_snpcrds
DESC Controls the number of CCIX snoop credits assigned to Link 2 4'h0: Total credits are equally divided across all links 4'h1: 25% of credits assigned 4'h2: 50% of credits assigned 4'h3: 75% of credits assigned 4'h4: 100% of credits assigned 4'hF: 0% of credits assigned
F 8 1 lnk2_dis_cpuevent_prop
DESC When set, disables the propagation of CPU Events on CCIX Link 2 NOTE: This field is applicable only when SMP Mode enable parameter is set.
R 0x1028 64 ROV S por_cxg_ra_cxprtcl_link2_status
RESET 0x2 0xf
DESC Functions as the CXRA CCIX Protocol Link 2 status register. Works with por_cxg_ra_cxprtcl_link2_ctl.
F 0 1 lnk2_link_ack
DESC Link Up/Down acknowledge; hardware updates this register bit to acknowledge the software link request 1'b0: Link Down acknowledge; hardware clears Link_ACK on receiving a Link Down request; the local agent stops sending protocol credits to the remote agent when Link_ACK is clear 1'b1: Link Up acknowledge; hardware sets Link_ACK when the local agent is ready to start accepting protocol credits from the remote agent NOTE: The local agent must clear Link_DN before setting Link_ACK.
F 1 1 lnk2_link_down
DESC Link Down status; hardware updates this register bit to indicate Link Down status 1'b0: Link is not Down; hardware clears Link_DN when it receives a Link Up request 1'b1: Link is Down; hardware sets Link_DN after the local agent has received all local protocol credits. The local agent must continue to respond to any remote protocol activity, including accepting and returning remote protocol credits until Link Up is clear 
F 2 1 lnk2_dvmdomain_ack
DESC Provides DVM domain status (SYSCOACK) for CCIX Link 2
F 3 1 lnk2_ot_cbkwr
DESC Provides status for outstanding CopyBack Write for CCIX Link2
R 0x2000 64 - - por_cxg_ra_pmu_event_sel
RESET 0x0 0xf3f3f3f3f
DESC Specifies the PMU event to be counted.
F 0 6 pmu_event0_id
DESC CXRA PMU Event 0 ID 6'h00: No event 6'h01: Request Tracker (RHT) occupancy count overflow 6'h02: Snoop Tracker (SHT) occupancy count overflow 6'h03: Read Data Buffer (RDB) occupancy count overflow 6'h04: Write Data Buffer (WDB) occupancy count overflow 6'h05: Snoop Sink Buffer (SSB) occupancy count overflow 6'h06: CCIX RX broadcast snoops 6'h07: CCIX TX request chain 6'h08: CCIX TX request chain average length 6'h09: CHI internal RSP stall 6'h0A: CHI internal DAT stall 6'h0B: CCIX REQ Protocol credit Link 0 stall 6'h0C: CCIX REQ Protocol credit Link 1 stall 6'h0D: CCIX REQ Protocol credit Link 2 stall 6'h0E: CCIX DAT Protocol credit Link 0 stall 6'h0F: CCIX DAT Protocol credit Link 1 stall 6'h10: CCIX DAT Protocol credit Link 2 stall 6'h11: CHI external RSP stall 6'h12: CHI external DAT stall
F 8 6 pmu_event1_id
DESC CXRA PMU Event 1 ID; see pmu_event0_id for encodings
F 16 6 pmu_event2_id
DESC CXRA PMU Event 2 ID; see pmu_event0_id for encodings
F 24 6 pmu_event3_id
DESC CXRA PMU Event 3 ID; see pmu_event0_id for encodings
F 32 4 pmu_occup1_id
DESC PMU occupancy event selector ID
ENDGROUP
GROUP por_rni_registers
R 0x0 64 RO - por_rni_node_info
RESET 0xa 0xffffffffffff
DESC Provides component identification information.
F 0 16 node_type
DESC CMN-600 node type identifier
F 16 16 node_id
DESC Component node ID
PAR NODEID_PARAM
F 32 16 logical_id
DESC Component logical ID
PAR LOGICALID_PARAM
R 0x80 64 RO - por_rni_child_info
RESET 0x0 0xffffffff
DESC Provides component child identification information.
F 0 16 child_count
DESC Number of child nodes; used in discovery process
F 16 16 child_ptr_offset
DESC Starting register offset which contains pointers to the child nodes
R 0x900 64 RO - por_rni_unit_info
RESET 0x81808020 0xff7ffffffff
DESC Provides component identification information for RN-I.
F 0 10 num_wr_reqs
DESC Number of outstanding write requests
PAR RNID_NUM_WR_REQ_PARAM
F 10 10 num_rd_reqs
DESC Number of outstanding read requests
PAR RNID_NUM_RD_REQ_PARAM
F 20 10 num_rd_bufs
DESC Number of read data buffers
PAR RNID_NUM_RD_BUF_PARAM
F 30 1 ax_data_256bit
DESC AXI interface data width 1'b1: 256 bits 1'b0: 128 bits
PAR RNID_AXDATA256_EN_PARAM
F 31 1 ax_datapoison_en
DESC Data Poison enable on ACE-Lite/AXI4 interface 1'b1: Enabled 1'b0: Not enabled
PAR RNID_AXDATAPOISON_EN_PARAM
F 32 1 force_rdb_prealloc
DESC Force read data buffer preallocation 1'b1: yes 1'b0: no
PAR RNID_FORCE_RDB_PREALLOC_PARAM
F 33 2 a4s_num
DESC Number of AXI4Stream interfaces present
PAR RNI_A4S_NUM_PARAM
F 36 8 a4s_logicalid_base
DESC AXI4Stream interfaces logical ID base
PAR RNI_A4S_LOGICALID_BASE_PARAM
R 0x980 64 - S por_rni_secure_register_groups_override
RESET 0x0 0x7
DESC Allows non-secure access to predefined groups of secure registers.
F 0 1 cfg_ctl
DESC Allows non-secure access to secure configuration control register
F 1 1 port_ctrl
DESC Allows non-secure access to secure AXI port control registers
F 2 1 qos_ctrl
DESC Allows non-secure access to secure QoS control registers
R 0xa00 64 - S por_rni_cfg_ctl
RESET 0x200201401 0x3ff3ff777f
DESC Functions as the configuration control register. Specifies the current mode.
F 0 1 qpc_en
DESC When set, enables QPC-based scheduling using two QoS priority classes (QoS15 and non-QoS15)
F 1 1 wfc
DESC When set, enables waiting for completion (COMP) before dispatching dependent transaction (TXN)
F 2 1 dis_wr_stream
DESC Disables streaming of ordered writes when set
F 3 1 force_prealloc_rdb
DESC When set, all reads from the RN-I are sent with a preallocated read data buffer
PAR RNID_FORCE_RDB_PREALLOC_PARAM
F 4 1 qpc15_entry_rsv_en
DESC Enables QPC15 entry reservation 1'b1: Reserves tracker entry for QoS15 requests 1'b0: Does not reserve tracker entry for QoS15 requests NOTE: Only valid and applicable when por_rni_qpc_en is set
F 5 1 pcie_mstr_present
DESC Indicates PCIe master is present; must be set if PCIe master is present upstream of RN-I or RN-D
F 6 1 dis_ncwr_stream
DESC Disables streaming of ordered non-cacheable writes when set
F 8 3 rrt_crdgnt_weight
DESC Determines weight of credit grant allocated to retried reads in presence of pending retried writes
F 12 3 wrt_crdgnt_weight
DESC Determines weight of credit grant allocated to retried writes in presence of pending retried reads
F 16 10 max_rrt_outstd_chitxn_cnt
DESC Maximum number of outstanding reads allowed on CHI-side
PAR RNID_NUM_RD_REQ_PARAM
F 28 10 max_wrt_outstd_chitxn_cnt
DESC Maximum number of outstanding writes allowed on CHI-side
PAR RNID_NUM_WR_REQ_PARAM
R 0xa08 64 - S por_rni_aux_ctl
RESET 0x12 0x3f
DESC Functions as the auxiliary control register for RN-I.
F 0 1 cg_disable
DESC Disables clock gating when set
F 1 1 ar_byp_en
DESC AR bypass enable; enables bypass path in the AR pipeline
F 2 1 park_port_arb_ptr
DESC Parks the AXI port arbitration pointer for Burst
F 3 1 dis_norm_rdstream
DESC Disables streaming of same ARID normal memory reads to different address
F 4 1 upstrm_datcheck_en
DESC Upstream supports Datacheck
PAR POR_DATACHECK_EN_PARAM
F 5 1 sameid_wrstash_stream_en
DESC Enables streaming of same-ID WrUniqStash
PAR POR_R2_ENABLE_PARAM
R 0xa10 64 - S por_rni_s0_port_control
RESET 0x0 0x7ff
DESC Controls port S0 AXI/ACE slave interface settings.
F 0 11 s0_lpid_mask
DESC Port S0 LPID mask LPID[0]: Equal to the result of UnaryOR of BitwiseAND of LPID mask and AXID (LPID[0] = |(AXID & mask)); specifies which AXID bit is reflected in the LSB of LPID LPID[2:1]: Equal to port ID[1:0]; the MSB of LPID contains port ID
R 0xa18 64 - S por_rni_s1_port_control
RESET 0x0 0x7ff
DESC Controls port S1 AXI/ACE slave interface settings.
F 0 11 s1_lpid_mask
DESC Port S1 LPID mask LPID[0]: Equal to the result of UnaryOR of BitwiseAND of LPID mask and AXID (LPID[0] = |(AXID & mask)); specifies which AXID bit is reflected in the LSB of LPID LPID[2:1]: Equal to port ID[1:0]; the MSB of LPID contains port ID
R 0xa20 64 - S por_rni_s2_port_control
RESET 0x0 0x7ff
DESC Controls port S2 AXI/ACE slave interface settings.
F 0 11 s2_lpid_mask
DESC Port S2 LPID mask LPID[0]: Equal to the result of UnaryOR of BitwiseAND of LPID mask and AXID (LPID[0] = |(AXID & mask)); specifies which AXID bit is reflected in the LSB of LPID LPID[2:1]: Equal to port ID[1:0]; the MSB of LPID contains port ID
R 0xa80 64 - S por_rni_s0_qos_control
RESET 0x0 0xff00ff
DESC Controls QoS settings for port S0 AXI/ACE slave interface.
F 0 1 s0_aw_lat_en
DESC Enables port S0 AW QoS regulation when set
F 1 1 s0_ar_lat_en
DESC Enables port S0 AR QoS regulation when set
F 2 1 s0_aw_qos_override_en
DESC Enables port S0 AW QoS override; when set, allows QoS value on inbound AW transactions to be overridden
F 3 1 s0_ar_qos_override_en
DESC Enables port S0 AR QoS override; when set, allows QoS value on inbound AR transactions to be overridden
F 4 1 s0_aw_reg_mode
DESC Configures the QoS regulator mode for write transactions 1'b0: Latency mode 1'b1: Period mode; used for bandwidth regulation
F 5 1 s0_ar_reg_mode
DESC Configures the QoS regulator mode for read transactions 1'b0: Latency mode 1'b1: Period mode; used for bandwidth regulation
F 6 1 s0_aw_pqv_mode
DESC Configures the QoS regulator mode for write transactions during period mode 1'b0: Normal mode; QoS value is stable when the master is idle 1'b1: Quiesce high mode; QoS value tends to the maximum value when the master is idle
F 7 1 s0_ar_pqv_mode
DESC Configures the QoS regulator mode for read transactions during period mode 1'b0: Normal mode; QoS value is stable when the master is idle 1'b1: Quiesce high mode; QoS value tends to the maximum value when the master is idle
F 16 4 s0_aw_qos_override
DESC AW QoS override value for port S0
F 20 4 s0_ar_qos_override
DESC AR QoS override value for port S0
R 0xa88 64 - S por_rni_s0_qos_lat_tgt
RESET 0x0 0xfff0fff
DESC Controls QoS target latency (in cycles) for regulations of port S0 read and write transactions.
F 0 12 s0_aw_lat_tgt
DESC Port S0 AW channel target latency; a value of 0 corresponds to no regulation
F 16 12 s0_ar_lat_tgt
DESC Port S0 AR channel target latency; a value of 0 corresponds to no regulation
R 0xa90 64 - S por_rni_s0_qos_lat_scale
RESET 0x0 0x707
DESC Controls the QoS target latency scale factor for port S0 read and write transactions. This register represents powers of two from the range 2^(-5) to 2^(-12); it is used to match a 16-bit integrator.
F 0 3 s0_aw_lat_scale
DESC Port S0 AW QoS scale factor 3'b000: 2^(-5) 3'b001: 2^(-6) 3'b010: 2^(-7) 3'b011: 2^(-8) 3'b100: 2^(-9) 3'b101: 2^(-10) 3'b110: 2^(-11) 3'b111: 2^(-12)
F 8 3 s0_ar_lat_scale
DESC Port S0 AR QoS scale factor 3'b000: 2^(-5) 3'b001: 2^(-6) 3'b010: 2^(-7) 3'b011: 2^(-8) 3'b100: 2^(-9) 3'b101: 2^(-10) 3'b110: 2^(-11) 3'b111: 2^(-12)
R 0xa98 64 - S por_rni_s0_qos_lat_range
RESET 0x0 0xf0f0f0f
DESC Controls the minimum and maximum QoS values generated by the QoS latency regulator for port S0 read and write transactions.
F 0 4 s0_aw_lat_min_qos
DESC Port S0 AW QoS minimum value
F 8 4 s0_aw_lat_max_qos
DESC Port S0 AW QoS maximum value
F 16 4 s0_ar_lat_min_qos
DESC Port S0 AR QoS minimum value
F 24 4 s0_ar_lat_max_qos
DESC Port S0 AR QoS maximum value
R 0xaa0 64 - S por_rni_s1_qos_control
RESET 0x0 0xff00ff
DESC Controls QoS settings for port S1 AXI/ACE slave interface.
F 0 1 s1_aw_lat_en
DESC Enables port S1 AW QoS regulation when set
F 1 1 s1_ar_lat_en
DESC Enables port S1 AR QoS regulation when set
F 2 1 s1_aw_qos_override_en
DESC Enables port S1 AW QoS override; when set, allows QoS value on inbound AW transactions to be overridden
F 3 1 s1_ar_qos_override_en
DESC Enables port S1 AR QoS override; when set, allows QoS value on inbound AR transactions to be overridden
F 4 1 s1_aw_reg_mode
DESC Configures the QoS regulator mode for write transactions 1'b0: Latency mode 1'b1: Period mode; used for bandwidth regulation
F 5 1 s1_ar_reg_mode
DESC Configures the QoS regulator mode for read transactions 1'b0: Latency mode 1'b1: Period mode; used for bandwidth regulation
F 6 1 s1_aw_pqv_mode
DESC Configures the QoS regulator mode for write transactions during period mode 1'b0: Normal mode; QoS value is stable when the master is idle 1'b1: Quiesce high mode; QoS value tends to the maximum value when the master is idle
F 7 1 s1_ar_pqv_mode
DESC Configures the QoS regulator mode for read transactions during period mode 1'b0: Normal mode; QoS value is stable when the master is idle 1'b1: Quiesce high mode; QoS value tends to the maximum value when the master is idle
F 16 4 s1_aw_qos_override
DESC AW QoS override value for port S1
F 20 4 s1_ar_qos_override
DESC AR QoS override value for port S1
R 0xaa8 64 - S por_rni_s1_qos_lat_tgt
RESET 0x0 0xfff0fff
DESC Controls QoS target latency (in cycles) for regulation of port S1 read and write transactions.
F 0 12 s1_aw_lat_tgt
DESC Port S1 AW channel target latency; a value of 0 corresponds to no regulation
F 16 12 s1_ar_lat_tgt
DESC Port S1 AR channel target latency; a value of 0 corresponds to no regulation
R 0xab0 64 - S por_rni_s1_qos_lat_scale
RESET 0x0 0x707
DESC Controls the QoS target latency scale factor for port S1 read and write transactions. This register represents powers of two from the range 2^(-5) to 2^(-12); it is used to match a 16-bit integrator.
F 0 3 s1_aw_lat_scale
DESC Port S1 AW QoS scale factor 3'b000: 2^(-5) 3'b001: 2^(-6) 3'b010: 2^(-7) 3'b011: 2^(-8) 3'b100: 2^(-9) 3'b101: 2^(-10) 3'b110: 2^(-11) 3'b111: 2^(-12)
F 8 3 s1_ar_lat_scale
DESC Port S1 AR QoS scale factor 3'b000: 2^(-5) 3'b001: 2^(-6) 3'b010: 2^(-7) 3'b011: 2^(-8) 3'b100: 2^(-9) 3'b101: 2^(-10) 3'b110: 2^(-11) 3'b111: 2^(-12)
R 0xab8 64 - S por_rni_s1_qos_lat_range
RESET 0x0 0xf0f0f0f
DESC Controls the minimum and maximum QoS values generated by the QoS latency regulator for port S1 read and write transactions.
F 0 4 s1_aw_lat_min_qos
DESC Port S1 AW QoS minimum value
F 8 4 s1_aw_lat_max_qos
DESC Port S1 AW QoS maximum value
F 16 4 s1_ar_lat_min_qos
DESC Port S1 AR QoS minimum value
F 24 4 s1_ar_lat_max_qos
DESC Port S1 AR QoS maximum value
R 0xac0 64 - S por_rni_s2_qos_control
RESET 0x0 0xff00ff
DESC Controls QoS settings for port S2 AXI/ACE slave interface.
F 0 1 s2_aw_lat_en
DESC Enables port S2 AW QoS regulation when set
F 1 1 s2_ar_lat_en
DESC Enables port S2 AR QoS regulation when set
F 2 1 s2_aw_qos_override_en
DESC Enables port S2 AW QoS override; when set, allows QoS value on inbound AW transactions to be overridden
F 3 1 s2_ar_qos_override_en
DESC Enables port S2 AR QoS override; when set, allows QoS value on inbound AR transactions to be overridden
F 4 1 s2_aw_reg_mode
DESC Configures the QoS regulator mode for write transactions 1'b0: Latency mode 1'b1: Period mode; used for bandwidth regulation
F 5 1 s2_ar_reg_mode
DESC Configures the QoS regulator mode for read transactions 1'b0: Latency mode 1'b1: Period mode; used for bandwidth regulation
F 6 1 s2_aw_pqv_mode
DESC Configures the QoS regulator mode for write transactions during period mode 1'b0: Normal mode; QoS value is stable when the master is idle 1'b1: Quiesce high mode; QoS value tends to the maximum value when the master is idle
F 7 1 s2_ar_pqv_mode
DESC Configures the QoS regulator mode for read transactions during period mode 1'b0: Normal mode; QoS value is stable when the master is idle 1'b1: Quiesce high mode; QoS value tends to the maximum value when the master is idle
F 16 4 s2_aw_qos_override
DESC AW QoS override value for port S2
F 20 4 s2_ar_qos_override
DESC AR QoS override value for port S2
R 0xac8 64 - S por_rni_s2_qos_lat_tgt
RESET 0x0 0xfff0fff
DESC Controls QoS target latency (in cycles) for regulation of port S2 read and write transactions.
F 0 12 s2_aw_lat_tgt
DESC Port S2 AW channel target latency; a value of 0 corresponds to no regulation
F 16 12 s2_ar_lat_tgt
DESC Port S2 AR channel target latency; a value of 0 corresponds to no regulation
R 0xad0 64 - S por_rni_s2_qos_lat_scale
RESET 0x0 0x707
DESC Controls the QoS target latency scale factor for port S2 read and write transactions. This register represents powers of two from the range 2^(-5) to 2^(-12); it is used to match a 16-bit integrator.
F 0 3 s2_aw_lat_scale
DESC Port S2 AW QoS scale factor 3'b000: 2^(-5) 3'b001: 2^(-6) 3'b010: 2^(-7) 3'b011: 2^(-8) 3'b100: 2^(-9) 3'b101: 2^(-10) 3'b110: 2^(-11) 3'b111: 2^(-12)
F 8 3 s2_ar_lat_scale
DESC Port S2 AR QoS scale factor 3'b000: 2^(-5) 3'b001: 2^(-6) 3'b010: 2^(-7) 3'b011: 2^(-8) 3'b100: 2^(-9) 3'b101: 2^(-10) 3'b110: 2^(-11) 3'b111: 2^(-12)
R 0xad8 64 - S por_rni_s2_qos_lat_range
RESET 0x0 0xf0f0f0f
DESC Controls the minimum and maximum QoS values generated by the QoS latency regulator for port S2 read and write transactions.
F 0 4 s2_aw_lat_min_qos
DESC Port S2 AW QoS minimum value
F 8 4 s2_aw_lat_max_qos
DESC Port S2 AW QoS maximum value
F 16 4 s2_ar_lat_min_qos
DESC Port S2 AR QoS minimum value
F 24 4 s2_ar_lat_max_qos
DESC Port S2 AR QoS maximum value
R 0x2000 64 - - por_rni_pmu_event_sel
RESET 0x0 0x1f1f1f1f
DESC Specifies the PMU event to be counted.
F 0 5 pmu_event0_id
DESC RN-I PMU Event 0 ID 5'h00: No event 5'h01: Port S0 RDataBeats 5'h02: Port S1 RDataBeats 5'h03: Port S2 RDataBeats 5'h04: RXDAT flits received 5'h05: TXDAT flits sent 5'h06: Total TXREQ flits sent 5'h07: Retried TXREQ flits sent 5'h08: RRT occupancy count overflow 5'h09: WRT occupancy count overflow 5'h0A: Replayed TXREQ flits 5'h0B: WriteCancel sent 5'h0C: Port S0 WDataBeats 5'h0D: Port S1 WDataBeats 5'h0E: Port S2 WDataBeats 5'h0F: RRT allocation 5'h10: WRT allocation 5'h11: RDB pool state is all unordered 5'h12: RDB pool state is replay 5'h13: RDB pool state is hybrid 5'h14: RDB pool state is all ordered
F 8 5 pmu_event1_id
DESC RN-I PMU Event 1 ID; see pmu_event0_id for encodings
F 16 5 pmu_event2_id
DESC RN-I PMU Event 2 ID; see pmu_event0_id for encodings
F 24 5 pmu_event3_id
DESC RN-I PMU Event 3 ID; see pmu_event0_id for encodings
ENDGROUP
GROUP por_mxp_registers
R 0x0 64 RO - por_mxp_node_info
RESET 0x6 0xffffffffffff
DESC Provides component identification information.
F 0 16 node_type
DESC CMN-600 node type identifier
F 16 16 xy_id
DESC Identifies (X,Y) location of XP within the mesh NOTE: The (X,Y) location is specified following the node ID format as defined in Node ID mapping section, with the bottom 3 bits, corresponding to port ID and device ID, set to 0. Bits 31:11 must always be set to 0. The range of bits representing the (X,Y) location varies for different node ID formats.
F 32 16 logical_id
DESC Component logical ID
PAR LOGICALID_PARAM
R 0x8 64 RO - por_mxp_device_port_connect_info_p0
RESET 0x0 0xffff0f9f
DESC Contains device port connection information for port 0.
F 0 5 device_type_p0
DESC Connected device type 5'b00000: Reserved 5'b00001: RN-I 5'b00010: RN-D 5'b00011: Reserved 5'b00100: RN-F_CHIB 5'b00101: RN-F_CHIB_ESAM 5'b00110: RN-F_CHIA 5'b00111: RN-F_CHIA_ESAM 5'b01000: HN-T 5'b01001: HN-I 5'b01010: HN-D 5'b01011: Reserved 5'b01100: SN-F 5'b01101: SBSX 5'b01110: HN-F 5'b01111: Reserved 5'b10000: Reserved 5'b10001: CXHA 5'b10010: CXRA 5'b10011: CXRH 5'b10100-5'b11111: Reserved
PAR MXP_DEV_TYPE_P0_PARAM
F 7 1 cal_connected_p0
DESC When set, CAL is connected on port 0 (Allowed values: 0-1)
PAR (MXP_NUM_DEV_P0_PARAM > 1) ? 1'b1 : 1'b0
F 8 4 num_ccs_p0
DESC Number of CAL credited slices connected to port 0 (Allowed values: 0-2)
PAR MXP_NUM_CCS_CONNECTED_P0_PARAM
F 16 4 num_dcs_p0_d0
DESC Number of device credited slices connected to port 0 device 0 (Allowed values: 0-4)
PAR MXP_NUM_DCS_CONNECTED_P0_D0_PARAM
F 20 4 num_dcs_p0_d1
DESC Number of device credited slices connected to port 0 device 1 (Allowed values: 0-4)
PAR MXP_NUM_DCS_CONNECTED_P0_D1_PARAM
F 24 4 num_dcs_p0_d2
DESC Number of device credited slices connected to port 0 device 2 (Allowed values: 0-4)
PAR MXP_NUM_DCS_CONNECTED_P0_D2_PARAM
F 28 4 num_dcs_p0_d3
DESC Number of device credited slices connected to port 0 device 3 (Allowed values: 0-4)
PAR MXP_NUM_DCS_CONNECTED_P0_D3_PARAM
R 0x10 64 RO - por_mxp_device_port_connect_info_p1
RESET 0x0 0xffff0f9f
DESC Contains device port connection information for port 1.
F 0 5 device_type_p1
DESC Connected device type 5'b00000: Reserved 5'b00001: RN-I 5'b00010: RN-D 5'b00011: Reserved 5'b00100: RN-F CHIB 5'b00101: RN-F CHIB ESAM 5'b00110: RN-F CHIA 5'b00111: RN-F CHIA ESAM 5'b01000: HN-T 5'b01001: HN-I 5'b01010: HN-D 5'b01011: Reserved 5'b01100: SN-F 5'b01101: SBSX 5'b01110: HN-F 5'b01111: Reserved 5'b10000: Reserved 5'b10001: CXHA 5'b10010: CXRA 5'b10011: CXRH 5'b10100-5'b11111: Reserved
PAR MXP_DEV_TYPE_P1_PARAM
F 7 1 cal_connected_p1
DESC When set, CAL is connected on port 1 (Allowed values: 0-1)
PAR (MXP_NUM_DEV_P1_PARAM > 1) ? 1'b1 : 1'b0
F 8 4 num_ccs_p1
DESC Number of CAL credited slices connected to port 1 (Allowed values: 0-2)
PAR MXP_NUM_CCS_CONNECTED_P1_PARAM
F 16 4 num_dcs_p1_d0
DESC Number of device credited slices connected to port 1 device 0 (Allowed values: 0-4)
PAR MXP_NUM_DCS_CONNECTED_P1_D0_PARAM
F 20 4 num_dcs_p1_d1
DESC Number of device credited slices connected to port 1 device 1 (Allowed values: 0-4)
PAR MXP_NUM_DCS_CONNECTED_P1_D1_PARAM
F 24 4 num_dcs_p1_d2
DESC Number of device credited slices connected to port 1 device 2 (Allowed values: 0-4)
PAR MXP_NUM_DCS_CONNECTED_P1_D2_PARAM
F 28 4 num_dcs_p1_d3
DESC Number of device credited slices connected to port 1 device 3 (Allowed values: 0-4)
PAR MXP_NUM_DCS_CONNECTED_P1_D3_PARAM
R 0x18 64 RO - por_mxp_mesh_port_connect_info_east
RESET 0x0 0xf
DESC Contains port connection information for East port.
F 0 4 num_mcs_east
DESC Number of mesh credited slices connected to East port (Allowed values: 0-4)
PAR MXP_NUM_MCS_CONNECTED_E_PARAM
R 0x20 64 RO - por_mxp_mesh_port_connect_info_north
RESET 0x0 0xf
DESC Contains port connection information for North port.
F 0 4 num_mcs_north
DESC Number of mesh credited slices connected to North port (Allowed values: 0-4)
PAR MXP_NUM_MCS_CONNECTED_N_PARAM
R 0x80 64 RO - por_mxp_child_info
RESET 0x1000000 0xffffffff
DESC Provides component child identification information.
F 0 16 child_count
DESC Number of child nodes; used in discovery process
PAR MXP_CHILD_COUNT_PARAM
F 16 16 child_ptr_offset
DESC Starting register offset which contains pointers to the child nodes
R 0x100 64 RO - por_mxp_child_pointer_0
RESET 0x0 0xffffffff
DESC Contains base address of the configuration slave for child 0.
F 0 32 relative_address_0
DESC Bit [31]: External or internal child node 1'b1: Indicates this child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates this child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE
R 0x108 64 RO - por_mxp_child_pointer_1
RESET 0x0 0xffffffff
DESC Contains base address of the configuration slave for child 1.
F 0 32 relative_address_1
DESC Bit [31]: External or internal child node 1'b1: Indicates this child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates this child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE
R 0x110 64 RO - por_mxp_child_pointer_2
RESET 0x0 0xffffffff
DESC Contains base address of the configuration slave for child 2.
F 0 32 relative_address_2
DESC Bit [31]: External or internal child node 1'b1: Indicates this child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates this child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE
R 0x118 64 RO - por_mxp_child_pointer_3
RESET 0x0 0xffffffff
DESC Contains base address of the configuration slave for child 3.
F 0 32 relative_address_3
DESC Bit [31]: External or internal child node 1'b1: Indicates this child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates this child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE
R 0x120 64 RO - por_mxp_child_pointer_4
RESET 0x0 0xffffffff
DESC Contains base address of the configuration slave for child 4.
F 0 32 relative_address_4
DESC Bit [31]: External or internal child node 1'b1: Indicates this child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates this child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE
R 0x128 64 RO - por_mxp_child_pointer_5
RESET 0x0 0xffffffff
DESC Contains base address of the configuration slave for child 5.
F 0 32 relative_address_5
DESC Bit [31]: External or internal child node 1'b1: Indicates this child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates this child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE
R 0x130 64 RO - por_mxp_child_pointer_6
RESET 0x0 0xffffffff
DESC Contains base address of the configuration slave for child 6.
F 0 32 relative_address_6
DESC Bit [31]: External or internal child node 1'b1: Indicates this child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates this child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE
R 0x138 64 RO - por_mxp_child_pointer_7
RESET 0x0 0xffffffff
DESC Contains base address of the configuration slave for child 7.
F 0 32 relative_address_7
DESC Bit [31]: External or internal child node 1'b1: Indicates this child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates this child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE
R 0x140 64 RO - por_mxp_child_pointer_8
RESET 0x0 0xffffffff
DESC Contains base address of the configuration slave for child 8.
F 0 32 relative_address_8
DESC Bit [31]: External or internal child node 1'b1: Indicates this child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates this child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE
R 0x148 64 RO - por_mxp_child_pointer_9
RESET 0x0 0xffffffff
DESC Contains base address of the configuration slave for child 9.
F 0 32 relative_address_9
DESC Bit [31]: External or internal child node 1'b1: Indicates this child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates this child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE
R 0x150 64 RO - por_mxp_child_pointer_10
RESET 0x0 0xffffffff
DESC Contains base address of the configuration slave for child 10.
F 0 32 relative_address_10
DESC Bit [31]: External or internal child node 1'b1: Indicates this child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates this child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE
R 0x158 64 RO - por_mxp_child_pointer_11
RESET 0x0 0xffffffff
DESC Contains base address of the configuration slave for child 11.
F 0 32 relative_address_11
DESC Bit [31]: External or internal child node 1'b1: Indicates this child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates this child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE
R 0x160 64 RO - por_mxp_child_pointer_12
RESET 0x0 0xffffffff
DESC Contains base address of the configuration slave for child 12.
F 0 32 relative_address_12
DESC Bit [31]: External or internal child node 1'b1: Indicates this child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates this child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE
R 0x168 64 RO - por_mxp_child_pointer_13
RESET 0x0 0xffffffff
DESC Contains base address of the configuration slave for child 13.
F 0 32 relative_address_13
DESC Bit [31]: External or internal child node 1'b1: Indicates this child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates this child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE
R 0x170 64 RO - por_mxp_child_pointer_14
RESET 0x0 0xffffffff
DESC Contains base address of the configuration slave for child 14.
F 0 32 relative_address_14
DESC Bit [31]: External or internal child node 1'b1: Indicates this child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates this child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE
R 0x178 64 RO - por_mxp_child_pointer_15
RESET 0x0 0xffffffff
DESC Contains base address of the configuration slave for child 15.
F 0 32 relative_address_15
DESC Bit [31]: External or internal child node 1'b1: Indicates this child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates this child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE
R 0x900 64 RO - por_mxp_p0_info
RESET 0x0 0xff3fb7
DESC Provides component identification information for XP port 0.
F 0 3 num_dev_p0
DESC Number of devices connected to this port (0 to 4)
PAR MXP_NUM_DEV_P0_PARAM
F 4 1 poison_en_p0
DESC Poison enable
PAR MXP_DEV_POISON_EN_P0_PARAM
F 5 1 datacheck_en_p0
DESC Datacheck enable
PAR MXP_DEV_DATACHECK_EN_P0_PARAM
F 7 1 ext_sam_en_p0
DESC ESAM enable
PAR MXP_EXT_SAM_EN_P0_PARAM
F 8 3 rxbuf_num_entries_p0
DESC Number of input buffers for each device at this port (2 to 4)
PAR MXP_RXBUF_NUM_ENTRIES_P0_PARAM
F 11 3 a4s_num_p0
DESC Total number of RN-F AXI4Stream interfaces at this port (0 to 4)
PAR MXP_A4S_NUM_P0_PARAM
F 16 8 a4s_logicalid_base_p0
DESC AXI4Stream interfaces logical ID base at this port (0 or 1)
PAR MXP_A4S_LOGICALID_BASE_P0_PARAM
R 0x908 64 RO - por_mxp_p1_info
RESET 0x0 0xff3fb7
DESC Provides component identification information for XP port 1.
F 0 3 num_dev_p1
DESC Number of devices connected to this port (0 to 4)
PAR MXP_NUM_DEV_P1_PARAM
F 4 1 poison_en_p1
DESC Poison enable
PAR MXP_DEV_POISON_EN_P1_PARAM
F 5 1 datacheck_en_p1
DESC Datacheck enable
PAR MXP_DEV_DATACHECK_EN_P1_PARAM
F 7 1 ext_sam_en_p1
DESC ESAM enable
PAR MXP_EXT_SAM_EN_P1_PARAM
F 8 3 rxbuf_num_entries_p1
DESC Number of input buffers at this port (2 to 4)
PAR MXP_RXBUF_NUM_ENTRIES_P1_PARAM
F 11 3 a4s_num_p1
DESC Total number of RN-F AXI4Stream interfaces at this port (0 to 4)
PAR MXP_A4S_NUM_P1_PARAM
F 16 8 a4s_logicalid_base_p1
DESC AXI4Stream interfaces logical ID base at this port (0 or 1)
PAR MXP_A4S_LOGICALID_BASE_P1_PARAM
R 0x980 64 - S por_mxp_secure_register_groups_override
RESET 0x0 0x1
DESC Allows non-secure access to predefined groups of secure registers.
F 0 1 qos
DESC Allows non-secure access to secure QoS registers
R 0xa00 64 - S por_mxp_aux_ctl
RESET 0x0 0x1
DESC Functions as the auxiliary control register for XP.
F 0 1 clkgate_disable
DESC Disables clock gating when set
R 0xa80 64 - S por_mxp_p0_qos_control
RESET 0x0 0xf0055
DESC Controls QoS settings for devices connected to port 0.
F 0 1 p0_lat_en
DESC Enables port 0 QoS regulation when set
F 2 1 p0_qos_override_en
DESC Enables port 0 QoS override; when set, allows QoS value on inbound transactions to be overridden
F 4 1 p0_reg_mode
DESC Configures the QoS regulator mode 1'b0: Latency mode 1'b1: Period mode; used for bandwidth regulation
F 6 1 p0_pqv_mode
DESC Configures the QoS regulator mode during period mode 1'b0: Normal mode; QoS value is stable when the master is idle 1'b1: Quiesce high mode; QoS value tends to the maximum value when the master is idle
F 16 4 p0_qos_override
DESC QoS override value for port 0
R 0xa88 64 - S por_mxp_p0_qos_lat_tgt
RESET 0x0 0xfff
DESC Controls QoS target latency/period (in cycles) for regulation of devices connected to port 0.
F 0 12 p0_lat_tgt
DESC Port 0 transaction target latency/period; a value of 0 corresponds to no regulation
R 0xa90 64 - S por_mxp_p0_qos_lat_scale
RESET 0x0 0x7
DESC Controls the QoS target scale factor for devices connected to port 0. The scale factor is represented in powers of two from the range 2^(-3) to 2^(-10).
F 0 3 p0_lat_scale
DESC Port 0 QoS scale factor 3'b000: 2^(-3) 3'b001: 2^(-4) 3'b010: 2^(-5) 3'b011: 2^(-6) 3'b100: 2^(-7) 3'b101: 2^(-8) 3'b110: 2^(-9) 3'b111: 2^(-10)
R 0xa98 64 - S por_mxp_p0_qos_lat_range
RESET 0x0 0xf0f
DESC Controls the minimum and maximum QoS values generated by the QoS regulator for devices connected to port 0.
F 0 4 p0_lat_min_qos
DESC Port 0 QoS minimum value
F 8 4 p0_lat_max_qos
DESC Port 0 QoS maximum value
R 0xaa0 64 - S por_mxp_p1_qos_control
RESET 0x0 0xf0055
DESC Controls QoS settings for devices connected to port 1.
F 0 1 p1_lat_en
DESC Enables port 1 QoS regulation when set
F 2 1 p1_qos_override_en
DESC Enables port 1 QoS override; when set, allows QoS value on inbound transactions to be overridden
F 4 1 p1_reg_mode
DESC Configures the QoS regulator mode 1'b0: Latency mode 1'b1: Period mode; used for bandwidth regulation
F 6 1 p1_pqv_mode
DESC Configures the QoS regulator mode during period mode 1'b0: Normal mode; QoS value is stable when the master is idle 1'b1: Quiesce high mode; QoS value tends to the maximum value when the master is idle
F 16 4 p1_qos_override
DESC QoS override value for port 1
R 0xaa8 64 - S por_mxp_p1_qos_lat_tgt
RESET 0x0 0xfff
DESC Controls QoS target latency/period (in cycles) for regulation of devices connected to port 1.
F 0 12 p1_lat_tgt
DESC Port 1 transaction target latency/period; a value of 0 corresponds to no regulation
R 0xab0 64 - S por_mxp_p1_qos_lat_scale
RESET 0x0 0x7
DESC Controls the QoS target scale factor for devices connected to port 1. The scale factor is represented in powers of two from the range 2^(-3) to 2^(-10).
F 0 3 p1_lat_scale
DESC Port 1 QoS scale factor 3'b000: 2^(-3) 3'b001: 2^(-4) 3'b010: 2^(-5) 3'b011: 2^(-6) 3'b100: 2^(-7) 3'b101: 2^(-8) 3'b110: 2^(-9) 3'b111: 2^(-10)
R 0xab8 64 - S por_mxp_p1_qos_lat_range
RESET 0x0 0xf0f
DESC Controls the minimum and maximum QoS values generated by the QoS regulator for devices connected to port 1.
F 0 4 p1_lat_min_qos
DESC Port 1 QoS minimum value
F 8 4 p1_lat_max_qos
DESC Port 1 QoS maximum value
R 0x1000 64 - - por_mxp_p0_syscoreq_ctl
RESET 0x0 0xf
DESC Functions as the port 0 snoop and DVM domain control register. Provides a software alternative to hardware SYSCOREQ/SYSCOACK handshake. Works with por_mxp_p0_syscoack_status. NOTE: Only valid on RN-F ports.
F 0 1 snpdvm_req_p0_d0
DESC When set, initiates the process of enabling snoop and DVM dispatches (SYSCOREQ) to device 0 on port 0
F 1 1 snpdvm_req_p0_d1
DESC When set, initiates the process of enabling snoop and DVM dispatches (SYSCOREQ) to device 1 on port 0
F 2 1 snpdvm_req_p0_d2
DESC When set, initiates the process of enabling snoop and DVM dispatches (SYSCOREQ) to device 2 on port 0
F 3 1 snpdvm_req_p0_d3
DESC When set, initiates the process of enabling snoop and DVM dispatches (SYSCOREQ) to device 3 on port 0
R 0x1008 64 - - por_mxp_p1_syscoreq_ctl
RESET 0x0 0xf
DESC Functions as the port 1 snoop and DVM domain control register. Provides a software alternative to hardware SYSCOREQ/SYSCOACK handshake. Works with por_mxp_p1_syscoack_status. NOTE: Only valid on RN-F ports.
F 0 1 snpdvm_req_p1_d0
DESC When set, initiates the process of enabling snoop and DVM dispatches (SYSCOREQ) to device 0 on port 1
F 1 1 snpdvm_req_p1_d1
DESC When set, initiates the process of enabling snoop and DVM dispatches (SYSCOREQ) to device 1 on port 1
F 2 1 snpdvm_req_p1_d2
DESC When set, initiates the process of enabling snoop and DVM dispatches (SYSCOREQ) to device 2 on port 1
F 3 1 snpdvm_req_p1_d3
DESC When set, initiates the process of enabling snoop and DVM dispatches (SYSCOREQ) to device 3 on port 1
R 0x1010 64 RO - por_mxp_p0_syscoack_status
RESET 0x0 0xf
DESC Functions as the port 0 snoop and DVM domain status register. Provides a software alternative to hardware SYSCOREQ/SYSCOACK handshake. Works with por_mxp_p0_syscoreq_ctl. NOTE: Only valid on RN-F ports.
F 0 1 snpdvm_ack_p0_d0
DESC When set, indicates snoop and DVM dispatches are enabled (SYSCOACK) for device 0 on port 0
F 1 1 snpdvm_ack_p0_d1
DESC When set, indicates snoop and DVM dispatches are enabled (SYSCOACK) for device 1 on port 0
F 2 1 snpdvm_ack_p0_d2
DESC When set, indicates snoop and DVM dispatches are enabled (SYSCOACK) for device 2 on port 0
F 3 1 snpdvm_ack_p0_d3
DESC When set, indicates snoop and DVM dispatches are enabled (SYSCOACK) for device 3 on port 0
R 0x1018 64 RO - por_mxp_p1_syscoack_status
RESET 0x0 0xf
DESC Functions as the port 1 snoop and DVM domain status register. Provides a software alternative to hardware SYSCOREQ/SYSCOACK handshake. Works with por_mxp_p1_syscoreq_ctl. NOTE: Only valid on RN-F ports.
F 0 1 snpdvm_ack_p1_d0
DESC When set, indicates snoop and DVM dispatches are enabled (SYSCOACK) for device 0 on port 1
F 1 1 snpdvm_ack_p1_d1
DESC When set, indicates snoop and DVM dispatches are enabled (SYSCOACK) for device 1 on port 1
F 2 1 snpdvm_ack_p1_d2
DESC When set, indicates snoop and DVM dispatches are enabled (SYSCOACK) for device 2 on port 1
F 3 1 snpdvm_ack_p1_d3
DESC When set, indicates snoop and DVM dispatches are enabled (SYSCOACK) for device 3 on port 1
R 0x2000 64 - - por_mxp_pmu_event_sel
RESET 0x0 0xffffffff
DESC Specifies the PMU event to be counted.
F 0 8 pmu_event0_id
DESC XP PMU Event 0 ID Bits [7:5]: PC 3'b000: REQ 3'b001: RSP 3'b010: SNP 3'b011: DAT Bits [4:2]: Interface 3'b000: East 3'b001: West 3'b010: North 3'b011: South 3'b100: Device port 0 3'b101: Device port 1 Bits [1:0]: Event specifier 2'b00: No event 2'b01: TX flit valid; signaled when a flit is successfully transmitted 2'b10: TX flit stall; signaled when flit transmission is stalled and waiting on credits 2'b11: Partial DAT flit; signaled when 128-bit DAT flits could not be merged into a 256-bit DAT flit; only applicable on the DAT PC on RN-F CHIA and RN-F CHIA ESAM ports
F 8 8 pmu_event1_id
DESC XP PMU Event 1 ID; see pmu_event0_id for encodings
F 16 8 pmu_event2_id
DESC XP PMU Event 2 ID; see pmu_event0_id for encodings
F 24 8 pmu_event3_id
DESC XP PMU Event 3 ID; see pmu_event0_id for encodings
R 0x2100 64 - - por_dtm_control
RESET 0x0 0xf
DESC Functions as the DTM control register.
F 0 1 dtm_enable
DESC Enables debug watchpoint and PMU function; prior to writing this bit, all other DT configuration registers must be programmed; once this bit is set, other DT configuration registers must not be modified
F 1 1 trace_tag_enable
DESC Watchpoint trace tag enable 1'b1: Trace tag enabled 1'b0: No trace tag
F 2 1 sample_profile_enable
DESC Enables sample profile function
F 3 1 trace_no_atb
DESC When set, trace packet is not delivered out of ATB, and FIFO entry holds the first trace packet
R 0x2118 64 - - por_dtm_fifo_entry_ready
RESET 0x0 0xf
DESC Controls status of DTM FIFO entries.
F 0 4 ready
DESC Indicates which DTM FIFO entries are ready; write a 1 to clear Bit [3]: Entry 3 ready when set Bit [2]: Entry 2 ready when set Bit [1]: Entry 1 ready when set Bit [0]: Entry 0 ready when set
R 0x2120 64 ROV - por_dtm_fifo_entry0_0
RESET 0x0 0xffffffffffffffff
DESC Contains DTM FIFO entry 0 data.
F 0 64 fifo_data0
DESC Entry data bit vector 63:0
R 0x2128 64 ROV - por_dtm_fifo_entry0_1
RESET 0x0 0xffffffffffffffff
DESC Contains DTM FIFO entry 0 data.
F 0 64 fifo_data1
DESC Entry data bit vector 127:64
R 0x2130 64 ROV - por_dtm_fifo_entry0_2
RESET 0x0 0xffffffff
DESC Contains DTM FIFO entry 0 data.
F 0 16 fifo_data2
DESC Entry data bit vector 143:128
F 16 16 fifo_cycle_count
DESC Entry cycle count bit vector 15:0
R 0x2138 64 ROV - por_dtm_fifo_entry1_0
RESET 0x0 0xffffffffffffffff
DESC Contains DTM FIFO entry 1 data.
F 0 64 fifo_data0
DESC Entry data bit vector 63:0
R 0x2140 64 ROV - por_dtm_fifo_entry1_1
RESET 0x0 0xffffffffffffffff
DESC Contains DTM FIFO entry 1 data.
F 0 64 fifo_data1
DESC Entry data bit vector 127:64
R 0x2148 64 ROV - por_dtm_fifo_entry1_2
RESET 0x0 0xffffffff
DESC Contains DTM FIFO entry 1 data.
F 0 16 fifo_data2
DESC Entry data bit vector 143:128
F 16 16 fifo_cycle_count
DESC Entry cycle count bit vector 15:0
R 0x2150 64 ROV - por_dtm_fifo_entry2_0
RESET 0x0 0xffffffffffffffff
DESC Contains DTM FIFO entry 2 data.
F 0 64 fifo_data0
DESC Entry data bit vector 63:0
R 0x2158 64 ROV - por_dtm_fifo_entry2_1
RESET 0x0 0xffffffffffffffff
DESC Contains DTM FIFO entry 2 data.
F 0 64 fifo_data1
DESC Entry data bit vector 127:64
R 0x2160 64 ROV - por_dtm_fifo_entry2_2
RESET 0x0 0xffffffff
DESC Contains DTM FIFO entry 2 data.
F 0 16 fifo_data2
DESC Entry data bit vector 143:128
F 16 16 fifo_cycle_count
DESC Entry cycle count bit vector 15:0
R 0x2168 64 ROV - por_dtm_fifo_entry3_0
RESET 0x0 0xffffffffffffffff
DESC Contains DTM FIFO entry 3 data.
F 0 64 fifo_data0
DESC Entry data bit vector 63:0
R 0x2170 64 ROV - por_dtm_fifo_entry3_1
RESET 0x0 0xffffffffffffffff
DESC Contains DTM FIFO entry 3 data.
F 0 64 fifo_data1
DESC Entry data bit vector 127:64
R 0x2178 64 ROV - por_dtm_fifo_entry3_2
RESET 0x0 0xffffffff
DESC Contains DTM FIFO entry 3 data.
F 0 16 fifo_data2
DESC Entry data bit vector 143:128
F 16 16 fifo_cycle_count
DESC Entry cycle count bit vector 15:0
R 0x21a0 64 - - por_dtm_wp0_config
RESET 0x0 0x7f7f
DESC Configures watchpoint 0.
F 0 1 wp_dev_sel
DESC Device port selection in specified SMXP 1'b0: Select device port 0 1'b1: Select device port 1
F 1 3 wp_chn_sel
DESC VC selection 3'b000: Select REQ VC 3'b001: Select RSP VC 3'b010: Select SNP VC 3'b011: Select DATA VC NOTE: All other values are reserved.
F 4 1 wp_grp
DESC Watchpoint register format group 1'b0: Select primary group 1'b1: Select secondary group
F 5 1 wp_exclusive
DESC Watchpoint mode 1'b0: Regular mode 1'b1: Exclusive mode
F 6 1 wp_combine
DESC Enables combination of watchpoints 0 and 1
F 8 1 wp_pkt_gen
DESC Enables watchpoint trace packet generation
F 9 3 wp_pkt_type
DESC Trace packet type 3'b000: TXNID (up to X18) 3'b001: TXNID + opcode (up to X9) 3'b010: TXNID + opcode + source ID + target ID (up to X4) 3'b011: Reserved 3'b100: Control flit 3'b101: Reserved 3'b110: Reserved 3'b111: Reserved
F 12 1 wp_cc_en
DESC Enables inclusion of cycle count in watchpoint track packet generation
F 13 1 wp_ctrig_en
DESC Enables watchpoint cross trigger packet generation
F 14 1 wp_dbgtrig_en
DESC Enables watchpoint debug trigger packet generation
R 0x21a8 64 - - por_dtm_wp0_val
RESET 0x0 0xffffffffffffffff
DESC Configures watchpoint 0 comparison value.
F 0 64 val
DESC Refer to DTM watchpoint section for details
R 0x21b0 64 - - por_dtm_wp0_mask
RESET 0x0 0xffffffffffffffff
DESC Configures watchpoint0 comparison mask.
F 0 64 mask
DESC Refer to DTM watchpoint section for details
R 0x21b8 64 - - por_dtm_wp1_config
RESET 0x0 0x7f3f
DESC Configures watchpoint 1.
F 0 1 wp_dev_sel
DESC Device port selection in specified SMXP 1'b0: Select device port 0 1'b1: Select device port 1
F 1 3 wp_chn_sel
DESC VC selection 3'b000: Select REQ VC 3'b001: Select RSP VC 3'b010: Select SNP VC 3'b011: Select DATA VC NOTE: All other values are reserved.
F 4 1 wp_grp
DESC Watchpoint register format group 1'b0: Select primary group 1'b1: Select secondary group
F 5 1 wp_exclusive
DESC Watchpoint mode 1'b0: Regular mode 1'b1: Exclusive mode
F 8 1 wp_pkt_gen
DESC Enables watchpoint trace packet generation
F 9 3 wp_pkt_type
DESC Trace packet type 3'b000: TXNID (up to X18) 3'b001: TXNID + opcode (up to X9) 3'b010: TXNID + opcode + source ID + target ID (up to X4) 3'b011: Reserved 3'b100: Control flit 3'b101: Reserved 3'b110: Reserved 3'b111: Reserved
F 12 1 wp_cc_en
DESC Enables inclusion of cycle count in watchpoint track packet generation
F 13 1 wp_ctrig_en
DESC Enables watchpoint cross trigger packet generation
F 14 1 wp_dbgtrig_en
DESC Enables watchpoint debug trigger packet generation
R 0x21c0 64 - - por_dtm_wp1_val
RESET 0x0 0xffffffffffffffff
DESC Configures watchpoint 1 comparison value.
F 0 64 val
DESC Refer to DTM watchpoint section for details
R 0x21c8 64 - - por_dtm_wp1_mask
RESET 0x0 0xffffffffffffffff
DESC Configures watchpoint 1 comparison mask.
F 0 64 mask
DESC Refer to DTM watchpoint section for details
R 0x21d0 64 - - por_dtm_wp2_config
RESET 0x0 0x7f7f
DESC Configures watchpoint 2.
F 0 1 wp_dev_sel
DESC Device port selection in specified SMXP 1'b0: Select device port 0 1'b1: Select device port 1
F 1 3 wp_chn_sel
DESC VC selection 3'b000: Select REQ VC 3'b001: Select RSP VC 3'b010: Select SNP VC 3'b011: Select DATA VC NOTE: All other values are reserved.
F 4 1 wp_grp
DESC Watchpoint register format group 1'b0: Select primary group 1'b1: Select secondary group
F 5 1 wp_exclusive
DESC Watchpoint mode 1'b0: Regular mode 1'b1: Exclusive mode
F 6 1 wp_combine
DESC Enables combination of watchpoints 2 and 3
F 8 1 wp_pkt_gen
DESC Enables watchpoint trace packet generation
F 9 3 wp_pkt_type
DESC Trace packet type 3'b000: TXNID (up to X18) 3'b001: TXNID + opcode (up to X9) 3'b010: TXNID + opcode + source ID + target ID (up to X4) 3'b011: Reserved 3'b100: Control flit 3'b101: Reserved 3'b110: Reserved 3'b111: Reserved
F 12 1 wp_cc_en
DESC Enables inclusion of cycle count in watchpoint track packet generation
F 13 1 wp_ctrig_en
DESC Enables watchpoint cross trigger packet generation
F 14 1 wp_dbgtrig_en
DESC Enables watchpoint debug trigger packet generation
R 0x21d8 64 - - por_dtm_wp2_val
RESET 0x0 0xffffffffffffffff
DESC Configures watchpoint 2 comparison value.
F 0 64 val
DESC Refer to DTM watchpoint section for details
R 0x21e0 64 - - por_dtm_wp2_mask
RESET 0x0 0xffffffffffffffff
DESC Configures watchpoint 2 comparison mask.
F 0 64 mask
DESC Refer to DTM watchpoint section for details
R 0x21e8 64 - - por_dtm_wp3_config
RESET 0x0 0x7f3f
DESC Configures watchpoint 3.
F 0 1 wp_dev_sel
DESC Device port selection in specified SMXP 1'b0: Select device port 0 1'b1: Select device port 1
F 1 3 wp_chn_sel
DESC VC selection 3'b000: Select REQ VC 3'b001: Select RSP VC 3'b010: Select SNP VC 3'b011: Select DATA VC NOTE: All other values are reserved.
F 4 1 wp_grp
DESC Watchpoint register format group 1'b0: Select primary group 1'b1: Select secondary group
F 5 1 wp_exclusive
DESC Watchpoint mode 1'b0: Regular mode 1'b1: Exclusive mode
F 8 1 wp_pkt_gen
DESC Enables watchpoint trace packet generation
F 9 3 wp_pkt_type
DESC Trace packet type 3'b000: TXNID (up to X18) 3'b001: TXNID + opcode (up to X9) 3'b010: TXNID + opcode + source ID + target ID (up to X4) 3'b011: Reserved 3'b100: Control flit 3'b101: Reserved 3'b110: Reserved 3'b111: Reserved
F 12 1 wp_cc_en
DESC Enables inclusion of cycle count in watchpoint track packet generation
F 13 1 wp_ctrig_en
DESC Enables watchpoint cross trigger packet generation
F 14 1 wp_dbgtrig_en
DESC Enables watchpoint debug trigger packet generation
R 0x21f0 64 - - por_dtm_wp3_val
RESET 0x0 0xffffffffffffffff
DESC Configures watchpoint 3 comparison value.
F 0 64 val
DESC Refer to DTM watchpoint section for details
R 0x21f8 64 - - por_dtm_wp3_mask
RESET 0x0 0xffffffffffffffff
DESC Configures watchpoint 3 comparison mask.
F 0 64 mask
DESC Refer to DTM watchpoint section for details
R 0x2200 64 - - por_dtm_pmsicr
RESET 0x0 0xffffffff
DESC Functions as the sampling interval counter register.
F 0 32 count
DESC Current value of sample counter
R 0x2208 64 - - por_dtm_pmsirr
RESET 0x0 0xffffff00
DESC Functions as the sampling interval reload register.
F 8 24 interval
DESC Sampling interval to be reloaded
R 0x2210 64 - - por_dtm_pmu_config
RESET 0x0 0x3f3f3f3f777701ff
DESC Configures the DTM PMU.
F 0 1 pmu_en
DESC DTM PMU enable NOTE: All other fields in this register are valid only if this bit is set.
F 1 1 pmevcnt01_combined
DESC Enables combination of PMU counters 0 and 1
F 2 1 pmevcnt23_combined
DESC Enables combination of PMU counters 2 and 3
F 3 1 pmevcntall_combined
DESC Enables combination of all PMU counters (0, 1, 2, 3) NOTE: When set, pmevcnt01_combined and pmevcnt23_combined have no effect.
F 4 4 pmevcnt_paired
DESC PMU local counter paired with global counter
F 8 1 cntr_rst
DESC Enables clearing of live counters upon assertion of snapshot
F 16 3 pmevcnt0_global_num
DESC Global counter to pair with PMU counter 0 3'b000: Global PMU event counter A 3'b001: Global PMU event counter B 3'b010: Global PMU event counter C 3'b011: Global PMU event counter D 3'b100: Global PMU event counter E 3'b101: Global PMU event counter F 3'b110: Global PMU event counter G 3'b111: Global PMU event counter H
F 20 3 pmevcnt1_global_num
DESC Global counter to pair with PMU counter 1; see pmevcnt0_global_num for encodings
F 24 3 pmevcnt2_global_num
DESC Global counter to pair with PMU counter 2; see pmevcnt0_global_num for encodings
F 28 3 pmevcnt3_global_num
DESC Global counter to pair with PMU counter 3; see pmevcnt0_global_num for encodings
F 32 6 pmevcnt0_input_sel
DESC Source to be counted in PMU counter 0 6'h00: Watchpoint 0 6'h01: Watchpoint 1 6'h02: Watchpoint 2 6'h03: Watchpoint 3 6'h04: XP PMU Event 0 6'h05: XP PMU Event 1 6'h06: XP PMU Event 2 6'h07: XP PMU Event 3 6'h10: Port 0 Device 0 PMU Event 0 6'h11: Port 0 Device 0 PMU Event 1 6'h12: Port 0 Device 0 PMU Event 2 6'h13: Port 0 Device 0 PMU Event 3 6'h14: Port 0 Device 1 PMU Event 0 6'h15: Port 0 Device 1 PMU Event 1 6'h16: Port 0 Device 1 PMU Event 2 6'h17: Port 0 Device 1 PMU Event 3 6'h18: Port 0 Device 2 PMU Event 0 6'h19: Port 0 Device 2 PMU Event 1 6'h1A: Port 0 Device 2 PMU Event 2 6'h1B: Port 0 Device 2 PMU Event 3 6'h1C: Port 0 Device 3 PMU Event 0 6'h1D: Port 0 Device 3 PMU Event 1 6'h1E: Port 0 Device 3 PMU Event 2 6'h1F: Port 0 Device 3 PMU Event 3 6'h20: Port 1 Device 0 PMU Event 0 6'h21: Port 1 Device 0 PMU Event 1 6'h22: Port 1 Device 0 PMU Event 2 6'h23: Port 1 Device 0 PMU Event 3 6'h24: Port 1 Device 1 PMU Event 0 6'h25: Port 1 Device 1 PMU Event 1 6'h26: Port 1 Device 1 PMU Event 2 6'h27: Port 1 Device 1 PMU Event 3 6'h28: Port 1 Device 2 PMU Event 0 6'h29: Port 1 Device 2 PMU Event 1 6'h2A: Port 1 Device 2 PMU Event 2 6'h2B: Port 1 Device 2 PMU Event 3 6'h2C: Port 1 Device 3 PMU Event 0 6'h2D: Port 1 Device 3 PMU Event 1 6'h2E: Port 1 Device 3 PMU Event 2 6'h2F: Port 1 Device 3 PMU Event 3
F 40 6 pmevcnt1_input_sel
DESC Source to be counted in PMU counter 1; see pmevcnt0_input_sel for encodings
F 48 6 pmevcnt2_input_sel
DESC Source to be counted in PMU counter 2; see pmevcnt0_input_sel for encodings
F 56 6 pmevcnt3_input_sel
DESC Source to be counted in PMU counter 3; see pmevcnt0_input_sel for encodings
R 0x2220 64 - - por_dtm_pmevcnt
RESET 0x0 0xffffffffffffffff
DESC Contains all PMU event counters (0, 1, 2, 3).
F 0 16 pmevcnt0
DESC PMU event counter 0
F 16 16 pmevcnt1
DESC PMU event counter 1
F 32 16 pmevcnt2
DESC PMU event counter 2
F 48 16 pmevcnt3
DESC PMU event counter 3
R 0x2240 64 - - por_dtm_pmevcntsr
RESET 0x0 0xffffffffffffffff
DESC Functions as the PMU event counter shadow register for all counters (0, 1, 2, 3).
F 0 16 pmevcntsr0
DESC PMU event counter 0 shadow register
F 16 16 pmevcntsr1
DESC PMU event counter 1 shadow register
F 32 16 pmevcntsr2
DESC PMU event counter 2 shadow register
F 48 16 pmevcntsr3
DESC PMU event counter 3 shadow register
R 0x3000 64 RO S por_mxp_errfr
RESET 0xa5 0x7cff
DESC Functions as the error feature register.
F 0 2 ED
DESC Error detection
F 2 2 DE
DESC Deferred errors for data poison
F 4 2 UI
DESC Uncorrected error interrupt
F 6 2 FI
DESC Fault handling interrupt
F 10 2 CFI
DESC Corrected error interrupt
F 12 3 CEC
DESC Standard corrected error count mechanism 3'b000: Does not implement standardized error counter model
R 0x3008 64 - S por_mxp_errctlr
RESET 0x0 0x10f
DESC Functions as the error control register. Controls whether specific error-handling interrupts and error detection/deferment are enabled.
F 0 1 ED
DESC Enables error detection as specified in por_mxp_errfr.ED
F 1 1 DE
DESC Enables error deferment as specified in por_mxp_errfr.DE
F 2 1 UI
DESC Enables uncorrected error interrupt as specified in por_mxp_errfr.UI
F 3 1 FI
DESC Enables fault handling interrupt for all detected deferred errors as specified in por_mxp_errfr.FI
F 8 1 CFI
DESC Enables corrected error interrupt as specified in por_mxp_errfr.CFI
R 0x3010 64 - S por_mxp_errstatus
RESET 0x0 0xed800000
DESC Functions as the error status register. AV and MV bits must be cleared in the same cycle, otherwise the error record does not have a consistent view.
F 31 1 AV
DESC Address register valid; writes to this bit are ignored if any of the UE, DE, or CE bits are set to 1, and the highest priority are not cleared to 0 in the same write; write a 1 to clear 1'b1: Address is valid 1'b0: Address is not valid
F 30 1 V
DESC Register valid; writes to this bit are ignored if any of the UE, DE, or CE bits are set to 1, and are not cleared to 0 in the same write; write a 1 to clear 1'b1: At least one error recorded; register is valid 1'b0: No errors recorded
F 29 1 UE
DESC Uncorrected errors; writes to this bit are ignored if the OF bit is set to 1, and is not cleared to 0 in the same write; write a 1 to clear 1'b1: At least one error detected that is not corrected and is not deferred to a slave 1'b0: No uncorrected errors detected
F 27 1 OF
DESC Overflow; asserted when multiple errors of the highest priority type are detected; write a 1 to clear 1'b1: More than one error detected 1'b0: Only one error of the highest priority type detected as described by UE/DE/CE fields
F 26 1 MV
DESC por_mxp_errmisc valid; writes to this bit are ignored if any of the UE, DE, or CE bits are set to 1, and the highest priority are not cleared to 0 in the same write; write a 1 to clear 1'b1: Miscellaneous registers are valid 1'b0: Miscellaneous registers are not valid
F 24 1 CE
DESC Corrected errors; writes to this bit are ignored if the OF bit is set to 1, and is not cleared to 0 in the same write; write a 1 to clear 1'b1: At least one transient corrected error recorded 1'b0: No corrected errors recorded
F 23 1 DE
DESC Deferred errors; writes to this bit are ignored if the OF bit is set to 1, and is not cleared to 0 in the same write; write a 1 to clear 1'b1: At least one error is not corrected and is deferred 1'b0: No errors deferred
R 0x3028 64 - S por_mxp_errmisc
RESET 0x0 0x7ff0000003f7ff7
DESC Functions as the miscellaneous error register. Contains miscellaneous information about deferred/uncorrected errors.
F 48 11 TGTID
DESC Error flit target ID
F 16 6 OPCODE
DESC Error flit opcode
F 4 11 SRCID
DESC Error flit source ID
F 0 3 ERRSRC
DESC Error source Bits [2:1]: Transaction type 2'b00: REQ 2'b01: RSP 2'b10: SNP 2'b11: DAT Bit [0]: Port 1'b0:  Port 0 1'b1:  Port 1
R 0x3030 64 WO S por_mxp_p0_byte_par_err_inj
RESET 0x0 0x1f
DESC Functions as the byte parity error injection register for XP port 0.
F 0 5 p0_byte_parity_err_inj
DESC Specifies a byte lane; once this register is written, a byte parity error is injected in the specified byte lane on the next DAT flit upload NOTE: Only applicable if an RN-F is attached to port 0. Byte parity error is only injected if the RN-F is configured to not support Datacheck.
R 0x3038 64 WO S por_mxp_p1_byte_par_err_inj
RESET 0x0 0x1f
DESC Functions as the byte parity error injection register for XP port 1.
F 0 5 p1_byte_parity_err_inj
DESC Specifies a byte lane; once this register is written, a byte parity error is injected in the specified byte lane on the next DAT flit upload NOTE: Only applicable if an RN-F is attached to port 0. Byte parity error is only injected if the RN-F is configured to not support Datacheck.
R 0x3100 64 RO - por_mxp_errfr_NS
RESET 0xa5 0x7cff
DESC Functions as the non-secure error feature register.
F 0 2 ED
DESC Error detection
F 2 2 DE
DESC Deferred errors for data poison
F 4 2 UI
DESC Uncorrected error interrupt
F 6 2 FI
DESC Fault handling interrupt
F 10 2 CFI
DESC Corrected error interrupt
F 12 3 CEC
DESC Standard corrected error count mechanism 3'b000: Does not implement standardized error counter model
R 0x3108 64 - - por_mxp_errctlr_NS
RESET 0x0 0x10f
DESC Functions as the non-secure error control register. Controls whether specific error-handling interrupts and error detection/deferment are enabled.
F 0 1 ED
DESC Enables error detection as specified in por_mxp_errfr_NS.ED
F 1 1 DE
DESC Enables error deferment as specified in por_mxp_errfr_NS.DE
F 2 1 UI
DESC Enables uncorrected error interrupt as specified in por_mxp_errfr_NS.UI
F 3 1 FI
DESC Enables fault handling interrupt for all detected deferred errors as specified in por_mxp_errfr_NS.FI
F 8 1 CFI
DESC Enables corrected error interrupt as specified in por_mxp_errfr_NS.CFI
R 0x3110 64 - - por_mxp_errstatus_NS
RESET 0x0 0xed800000
DESC Functions as the non-secure error status register.
F 31 1 AV
DESC Address register valid; writes to this bit are ignored if any of the UE, DE, or CE bits are set to 1, and the highest priority are not cleared to 0 in the same write; write a 1 to clear 1'b1: Address is valid 1'b0: Address is not valid
F 30 1 V
DESC Register valid; writes to this bit are ignored if any of the UE, DE, or CE bits are set to 1, and are not cleared to 0 in the same write; write a 1 to clear 1'b1: At least one error recorded; register is valid 1'b0: No errors recorded
F 29 1 UE
DESC Uncorrected errors; writes to this bit are ignored if the OF bit is set to 1, and is not cleared to 0 in the same write; write a 1 to clear 1'b1: At least one error detected that is not corrected and is not deferred to a slave 1'b0: No uncorrected errors detected
F 27 1 OF
DESC Overflow; asserted when multiple errors of the highest priority type are detected; write a 1 to clear 1'b1: More than one error detected 1'b0: Only one error of the highest priority type detected as described by UE/DE/CE fields
F 26 1 MV
DESC por_mxp_errmisc_NS valid; writes to this bit are ignored if any of the UE, DE, or CE bits are set to 1, and the highest priority are not cleared to 0 in the same write; write a 1 to clear 1'b1: Miscellaneous registers are valid 1'b0: Miscellaneous registers are not valid
F 24 1 CE
DESC Corrected errors; writes to this bit are ignored if the OF bit is set to 1, and is not cleared to 0 in the same write; write a 1 to clear 1'b1: At least one transient corrected error recorded 1'b0: No corrected errors recorded
F 23 1 DE
DESC Deferred errors; writes to this bit are ignored if the OF bit is set to 1, and is not cleared to 0 in the same write; write a 1 to clear 1'b1: At least one error is not corrected and is deferred 1'b0: No errors deferred
R 0x3128 64 - - por_mxp_errmisc_NS
RESET 0x0 0x7ff0000003f7ff7
DESC Functions as the non-secure miscellaneous error register. Contains miscellaneous information about deferred/uncorrected errors.
F 48 11 TGTID
DESC Error flit target ID
F 16 6 OPCODE
DESC Error flit opcode
F 4 11 SRCID
DESC Error flit source ID
F 0 3 ERRSRC
DESC Error source Bits [2:1]: Transaction type 2'b00: REQ 2'b01: RSP 2'b10: SNP 2'b11: DAT Bit [0]: Port 1'b0: Port 0 1'b1: Port 1
ENDGROUP
GROUP por_cfgm_registers
R 0x0 64 RO - por_cfgm_node_info
RESET 0x2 0xffffffffffff
DESC Provides component identification information.
F 0 16 node_type
DESC CMN-600 node type identifier
F 16 16 node_id
DESC Component CHI node ID
PAR NODEID_PARAM
F 32 16 logical_id
DESC Component logical ID
PAR LOGICALID_PARAM
R 0x8 64 RO - por_cfgm_periph_id_0_periph_id_1
RESET 0xb400000034 0xff000000ff
DESC Functions as the peripheral ID 0 and peripheral ID 1 register.
F 0 8 periph_id_0
DESC Peripheral ID 0
PAR POR_PERIPH_ID_0_PARAM
F 32 8 periph_id_1
DESC Peripheral ID 1
R 0x10 64 RO - por_cfgm_periph_id_2_periph_id_3
RESET 0xb 0xff000000ff
DESC Functions as the peripheral ID 2 and peripheral ID 3 register.
F 0 8 periph_id_2
DESC Peripheral ID 2
[7:4] indicates revision: 0x0     r1p0 0x1     r1p1 0x2     r1p2 0x3     r1p3 0x4     r2p0 0x5     r3p0 0x6     r3p1 0x7     r3p2
[3]     JEDEC JEP106 identity code, 1'b1 [2:0]   JEP106 identidy code [6:4], 0'b011
PAR POR_PERIPH_ID_2_PARAM
F 32 8 periph_id_3
DESC Peripheral ID 3
R 0x18 64 RO - por_cfgm_periph_id_4_periph_id_5
RESET 0xc4 0xff000000ff
DESC Functions as the peripheral ID 4 and peripheral ID 5 register.
F 0 8 periph_id_4
DESC Peripheral ID 4
F 32 8 periph_id_5
DESC Peripheral ID 5
R 0x20 64 RO - por_cfgm_periph_id_6_periph_id_7
RESET 0x0 0xff000000ff
DESC Functions as the peripheral ID 6 and peripheral ID 7 register.
F 0 8 periph_id_6
DESC Peripheral ID 6
F 32 8 periph_id_7
DESC Peripheral ID 7
R 0x28 64 RO - por_cfgm_component_id_0_component_id_1
RESET 0xf00000000d 0xff000000ff
DESC Functions as the component ID 0 and component ID 1 register.
F 0 8 component_id_0
DESC Component ID 0
F 32 8 component_id_1
DESC Component ID 1
R 0x30 64 RO - por_cfgm_component_id_2_component_id_3
RESET 0xb100000005 0xff000000ff
DESC Functions as the component ID 2 and component ID 3 register.
F 0 8 component_id_2
DESC Component ID 2
F 32 8 component_id_3
DESC Component ID 3
R 0x80 64 RO - por_cfgm_child_info
RESET 0x1000040 0xffffffff
DESC Provides component child identification information.
F 0 16 child_count
DESC Number of child nodes; used in discovery process
PAR POR_NUM_XP_PARAM
F 16 16 child_ptr_offset
DESC Starting register offset which contains pointers to the child nodes
R 0x100 64 RO - por_cfgm_child_pointer_0
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x108 64 RO - por_cfgm_child_pointer_1
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x110 64 RO - por_cfgm_child_pointer_2
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x118 64 RO - por_cfgm_child_pointer_3
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x120 64 RO - por_cfgm_child_pointer_4
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x128 64 RO - por_cfgm_child_pointer_5
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x130 64 RO - por_cfgm_child_pointer_6
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x138 64 RO - por_cfgm_child_pointer_7
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x140 64 RO - por_cfgm_child_pointer_8
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x148 64 RO - por_cfgm_child_pointer_9
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x150 64 RO - por_cfgm_child_pointer_10
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x158 64 RO - por_cfgm_child_pointer_11
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x160 64 RO - por_cfgm_child_pointer_12
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x168 64 RO - por_cfgm_child_pointer_13
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x170 64 RO - por_cfgm_child_pointer_14
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x178 64 RO - por_cfgm_child_pointer_15
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x180 64 RO - por_cfgm_child_pointer_16
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x188 64 RO - por_cfgm_child_pointer_17
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x190 64 RO - por_cfgm_child_pointer_18
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x198 64 RO - por_cfgm_child_pointer_19
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x1a0 64 RO - por_cfgm_child_pointer_20
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x1a8 64 RO - por_cfgm_child_pointer_21
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x1b0 64 RO - por_cfgm_child_pointer_22
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x1b8 64 RO - por_cfgm_child_pointer_23
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x1c0 64 RO - por_cfgm_child_pointer_24
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x1c8 64 RO - por_cfgm_child_pointer_25
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x1d0 64 RO - por_cfgm_child_pointer_26
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x1d8 64 RO - por_cfgm_child_pointer_27
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x1e0 64 RO - por_cfgm_child_pointer_28
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x1e8 64 RO - por_cfgm_child_pointer_29
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x1f0 64 RO - por_cfgm_child_pointer_30
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x1f8 64 RO - por_cfgm_child_pointer_31
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x200 64 RO - por_cfgm_child_pointer_32
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x208 64 RO - por_cfgm_child_pointer_33
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x210 64 RO - por_cfgm_child_pointer_34
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x218 64 RO - por_cfgm_child_pointer_35
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x220 64 RO - por_cfgm_child_pointer_36
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x228 64 RO - por_cfgm_child_pointer_37
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x230 64 RO - por_cfgm_child_pointer_38
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x238 64 RO - por_cfgm_child_pointer_39
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x240 64 RO - por_cfgm_child_pointer_40
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x248 64 RO - por_cfgm_child_pointer_41
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x250 64 RO - por_cfgm_child_pointer_42
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x258 64 RO - por_cfgm_child_pointer_43
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x260 64 RO - por_cfgm_child_pointer_44
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x268 64 RO - por_cfgm_child_pointer_45
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x270 64 RO - por_cfgm_child_pointer_46
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x278 64 RO - por_cfgm_child_pointer_47
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x280 64 RO - por_cfgm_child_pointer_48
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x288 64 RO - por_cfgm_child_pointer_49
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x290 64 RO - por_cfgm_child_pointer_50
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x298 64 RO - por_cfgm_child_pointer_51
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x2a0 64 RO - por_cfgm_child_pointer_52
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x2a8 64 RO - por_cfgm_child_pointer_53
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x2b0 64 RO - por_cfgm_child_pointer_54
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x2b8 64 RO - por_cfgm_child_pointer_55
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x2c0 64 RO - por_cfgm_child_pointer_56
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x2c8 64 RO - por_cfgm_child_pointer_57
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x2d0 64 RO - por_cfgm_child_pointer_58
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x2d8 64 RO - por_cfgm_child_pointer_59
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x2e0 64 RO - por_cfgm_child_pointer_60
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x2e8 64 RO - por_cfgm_child_pointer_61
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x2f0 64 RO - por_cfgm_child_pointer_62
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x2f8 64 RO - por_cfgm_child_pointer_63
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x300 64 RO - por_cfgm_child_pointer_64
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x308 64 RO - por_cfgm_child_pointer_65
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x310 64 RO - por_cfgm_child_pointer_66
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x318 64 RO - por_cfgm_child_pointer_67
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x320 64 RO - por_cfgm_child_pointer_68
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x328 64 RO - por_cfgm_child_pointer_69
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x330 64 RO - por_cfgm_child_pointer_70
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x338 64 RO - por_cfgm_child_pointer_71
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x340 64 RO - por_cfgm_child_pointer_72
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x348 64 RO - por_cfgm_child_pointer_73
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x350 64 RO - por_cfgm_child_pointer_74
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x358 64 RO - por_cfgm_child_pointer_75
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x360 64 RO - por_cfgm_child_pointer_76
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x368 64 RO - por_cfgm_child_pointer_77
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x370 64 RO - por_cfgm_child_pointer_78
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x378 64 RO - por_cfgm_child_pointer_79
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x380 64 RO - por_cfgm_child_pointer_80
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x388 64 RO - por_cfgm_child_pointer_81
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x390 64 RO - por_cfgm_child_pointer_82
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x398 64 RO - por_cfgm_child_pointer_83
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x3a0 64 RO - por_cfgm_child_pointer_84
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x3a8 64 RO - por_cfgm_child_pointer_85
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x3b0 64 RO - por_cfgm_child_pointer_86
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x3b8 64 RO - por_cfgm_child_pointer_87
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x3c0 64 RO - por_cfgm_child_pointer_88
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x3c8 64 RO - por_cfgm_child_pointer_89
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x3d0 64 RO - por_cfgm_child_pointer_90
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x3d8 64 RO - por_cfgm_child_pointer_91
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x3e0 64 RO - por_cfgm_child_pointer_92
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x3e8 64 RO - por_cfgm_child_pointer_93
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x3f0 64 RO - por_cfgm_child_pointer_94
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x3f8 64 RO - por_cfgm_child_pointer_95
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x400 64 RO - por_cfgm_child_pointer_96
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x408 64 RO - por_cfgm_child_pointer_97
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x410 64 RO - por_cfgm_child_pointer_98
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x418 64 RO - por_cfgm_child_pointer_99
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x420 64 RO - por_cfgm_child_pointer_100
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x428 64 RO - por_cfgm_child_pointer_101
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x430 64 RO - por_cfgm_child_pointer_102
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x438 64 RO - por_cfgm_child_pointer_103
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x440 64 RO - por_cfgm_child_pointer_104
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x448 64 RO - por_cfgm_child_pointer_105
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x450 64 RO - por_cfgm_child_pointer_106
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x458 64 RO - por_cfgm_child_pointer_107
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x460 64 RO - por_cfgm_child_pointer_108
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x468 64 RO - por_cfgm_child_pointer_109
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x470 64 RO - por_cfgm_child_pointer_110
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x478 64 RO - por_cfgm_child_pointer_111
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x480 64 RO - por_cfgm_child_pointer_112
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x488 64 RO - por_cfgm_child_pointer_113
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x490 64 RO - por_cfgm_child_pointer_114
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x498 64 RO - por_cfgm_child_pointer_115
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x4a0 64 RO - por_cfgm_child_pointer_116
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x4a8 64 RO - por_cfgm_child_pointer_117
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x4b0 64 RO - por_cfgm_child_pointer_118
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x4b8 64 RO - por_cfgm_child_pointer_119
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x4c0 64 RO - por_cfgm_child_pointer_120
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x4c8 64 RO - por_cfgm_child_pointer_121
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x4d0 64 RO - por_cfgm_child_pointer_122
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x4d8 64 RO - por_cfgm_child_pointer_123
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x4e0 64 RO - por_cfgm_child_pointer_124
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x4e8 64 RO - por_cfgm_child_pointer_125
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x4f0 64 RO - por_cfgm_child_pointer_126
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x4f8 64 RO - por_cfgm_child_pointer_127
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x500 64 RO - por_cfgm_child_pointer_128
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x508 64 RO - por_cfgm_child_pointer_129
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x510 64 RO - por_cfgm_child_pointer_130
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x518 64 RO - por_cfgm_child_pointer_131
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x520 64 RO - por_cfgm_child_pointer_132
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x528 64 RO - por_cfgm_child_pointer_133
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x530 64 RO - por_cfgm_child_pointer_134
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x538 64 RO - por_cfgm_child_pointer_135
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x540 64 RO - por_cfgm_child_pointer_136
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x548 64 RO - por_cfgm_child_pointer_137
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x550 64 RO - por_cfgm_child_pointer_138
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x558 64 RO - por_cfgm_child_pointer_139
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x560 64 RO - por_cfgm_child_pointer_140
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x568 64 RO - por_cfgm_child_pointer_141
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x570 64 RO - por_cfgm_child_pointer_142
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x578 64 RO - por_cfgm_child_pointer_143
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x580 64 RO - por_cfgm_child_pointer_144
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x588 64 RO - por_cfgm_child_pointer_145
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x590 64 RO - por_cfgm_child_pointer_146
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x598 64 RO - por_cfgm_child_pointer_147
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x5a0 64 RO - por_cfgm_child_pointer_148
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x5a8 64 RO - por_cfgm_child_pointer_149
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x5b0 64 RO - por_cfgm_child_pointer_150
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x5b8 64 RO - por_cfgm_child_pointer_151
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x5c0 64 RO - por_cfgm_child_pointer_152
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x5c8 64 RO - por_cfgm_child_pointer_153
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x5d0 64 RO - por_cfgm_child_pointer_154
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x5d8 64 RO - por_cfgm_child_pointer_155
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x5e0 64 RO - por_cfgm_child_pointer_156
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x5e8 64 RO - por_cfgm_child_pointer_157
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x5f0 64 RO - por_cfgm_child_pointer_158
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x5f8 64 RO - por_cfgm_child_pointer_159
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x600 64 RO - por_cfgm_child_pointer_160
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x608 64 RO - por_cfgm_child_pointer_161
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x610 64 RO - por_cfgm_child_pointer_162
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x618 64 RO - por_cfgm_child_pointer_163
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x620 64 RO - por_cfgm_child_pointer_164
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x628 64 RO - por_cfgm_child_pointer_165
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x630 64 RO - por_cfgm_child_pointer_166
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x638 64 RO - por_cfgm_child_pointer_167
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x640 64 RO - por_cfgm_child_pointer_168
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x648 64 RO - por_cfgm_child_pointer_169
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x650 64 RO - por_cfgm_child_pointer_170
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x658 64 RO - por_cfgm_child_pointer_171
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x660 64 RO - por_cfgm_child_pointer_172
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x668 64 RO - por_cfgm_child_pointer_173
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x670 64 RO - por_cfgm_child_pointer_174
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x678 64 RO - por_cfgm_child_pointer_175
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x680 64 RO - por_cfgm_child_pointer_176
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x688 64 RO - por_cfgm_child_pointer_177
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x690 64 RO - por_cfgm_child_pointer_178
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x698 64 RO - por_cfgm_child_pointer_179
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x6a0 64 RO - por_cfgm_child_pointer_180
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x6a8 64 RO - por_cfgm_child_pointer_181
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x6b0 64 RO - por_cfgm_child_pointer_182
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x6b8 64 RO - por_cfgm_child_pointer_183
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x6c0 64 RO - por_cfgm_child_pointer_184
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x6c8 64 RO - por_cfgm_child_pointer_185
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x6d0 64 RO - por_cfgm_child_pointer_186
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x6d8 64 RO - por_cfgm_child_pointer_187
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x6e0 64 RO - por_cfgm_child_pointer_188
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x6e8 64 RO - por_cfgm_child_pointer_189
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x6f0 64 RO - por_cfgm_child_pointer_190
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x6f8 64 RO - por_cfgm_child_pointer_191
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x700 64 RO - por_cfgm_child_pointer_192
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x708 64 RO - por_cfgm_child_pointer_193
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x710 64 RO - por_cfgm_child_pointer_194
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x718 64 RO - por_cfgm_child_pointer_195
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x720 64 RO - por_cfgm_child_pointer_196
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x728 64 RO - por_cfgm_child_pointer_197
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x730 64 RO - por_cfgm_child_pointer_198
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x738 64 RO - por_cfgm_child_pointer_199
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x740 64 RO - por_cfgm_child_pointer_200
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x748 64 RO - por_cfgm_child_pointer_201
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x750 64 RO - por_cfgm_child_pointer_202
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x758 64 RO - por_cfgm_child_pointer_203
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x760 64 RO - por_cfgm_child_pointer_204
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x768 64 RO - por_cfgm_child_pointer_205
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x770 64 RO - por_cfgm_child_pointer_206
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x778 64 RO - por_cfgm_child_pointer_207
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x780 64 RO - por_cfgm_child_pointer_208
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x788 64 RO - por_cfgm_child_pointer_209
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x790 64 RO - por_cfgm_child_pointer_210
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x798 64 RO - por_cfgm_child_pointer_211
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x7a0 64 RO - por_cfgm_child_pointer_212
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x7a8 64 RO - por_cfgm_child_pointer_213
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x7b0 64 RO - por_cfgm_child_pointer_214
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x7b8 64 RO - por_cfgm_child_pointer_215
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x7c0 64 RO - por_cfgm_child_pointer_216
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x7c8 64 RO - por_cfgm_child_pointer_217
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x7d0 64 RO - por_cfgm_child_pointer_218
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x7d8 64 RO - por_cfgm_child_pointer_219
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x7e0 64 RO - por_cfgm_child_pointer_220
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x7e8 64 RO - por_cfgm_child_pointer_221
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x7f0 64 RO - por_cfgm_child_pointer_222
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x7f8 64 RO - por_cfgm_child_pointer_223
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x800 64 RO - por_cfgm_child_pointer_224
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x808 64 RO - por_cfgm_child_pointer_225
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x810 64 RO - por_cfgm_child_pointer_226
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x818 64 RO - por_cfgm_child_pointer_227
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x820 64 RO - por_cfgm_child_pointer_228
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x828 64 RO - por_cfgm_child_pointer_229
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x830 64 RO - por_cfgm_child_pointer_230
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x838 64 RO - por_cfgm_child_pointer_231
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x840 64 RO - por_cfgm_child_pointer_232
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x848 64 RO - por_cfgm_child_pointer_233
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x850 64 RO - por_cfgm_child_pointer_234
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x858 64 RO - por_cfgm_child_pointer_235
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x860 64 RO - por_cfgm_child_pointer_236
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x868 64 RO - por_cfgm_child_pointer_237
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x870 64 RO - por_cfgm_child_pointer_238
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x878 64 RO - por_cfgm_child_pointer_239
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x880 64 RO - por_cfgm_child_pointer_240
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x888 64 RO - por_cfgm_child_pointer_241
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x890 64 RO - por_cfgm_child_pointer_242
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x898 64 RO - por_cfgm_child_pointer_243
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x8a0 64 RO - por_cfgm_child_pointer_244
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x8a8 64 RO - por_cfgm_child_pointer_245
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x8b0 64 RO - por_cfgm_child_pointer_246
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x8b8 64 RO - por_cfgm_child_pointer_247
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x8c0 64 RO - por_cfgm_child_pointer_248
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x8c8 64 RO - por_cfgm_child_pointer_249
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x8d0 64 RO - por_cfgm_child_pointer_250
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x8d8 64 RO - por_cfgm_child_pointer_251
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x8e0 64 RO - por_cfgm_child_pointer_252
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x8e8 64 RO - por_cfgm_child_pointer_253
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x8f0 64 RO - por_cfgm_child_pointer_254
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x8f8 64 RO - por_cfgm_child_pointer_255
RESET 0x0 0xffffffff
DESC Contains base address of child configuration node. NOTE: There will be as many child pointer registers in the Global Config Unit as the number of XP's on the chip. Each successive child pointer register will be at the next 8 byte address boundary. Each successive child pointer register will be named with the suffix corresponding to the register number. For example por_cfgm_child_pointer_<number> 
F 0 32 relative_address
DESC Bit 31: External or internal child node 1'b1: Indicates child pointer points to a configuration node that is external to CMN-600 1'b0: Indicates child pointer points to a configuration node that is internal to CMN-600 Bits [30:28]: Set to 3'b000 Bits [27:0]: Child node address offset relative to PERIPHBASE 
R 0x900 64 RO - por_info_global
RESET 0x3303008 0x303fff3ffffff
DESC Contains user-specified values of build-time global configuration parameters.
F 0 8 chi_req_rsvdc_width
DESC RSVDC field width in CHI REQ flit
PAR POR_CHIB_REQ_RSVDC_WIDTH_PARAM
F 8 8 chi_req_addr_width
DESC REQ address width
PAR POR_CHIB_REQ_ADDR_WIDTH_PARAM
F 16 8 physical_address_width
DESC Physical address width
PAR POR_PA_WIDTH_PARAM
F 24 1 datacheck_en
DESC Indicates whether datacheck feature is enabled for CHI DAT flit
PAR POR_DATACHECK_EN_PARAM
F 25 1 flit_parity_en
DESC Indicates whether parity checking is enabled in the transport layer on all flits sent on the interconnect
PAR POR_FLIT_PAR_EN_PARAM
F 28 8 num_remote_rnf
DESC Number of remote RN-F devices in the system when the CML feature is enabled
PAR POR_NUM_REMOTE_RNF_PARAM
F 36 6 rnsam_num_add_hashed_tgt
DESC Number of additional hashed target ID's supported by the RN SAM, beyond the local HNF count
PAR POR_RNSAM_NUM_ADD_HASHED_TGT_PARAM
F 48 1 r2_enable
DESC CMN R2 feature enable
PAR POR_R2_ENABLE_PARAM
F 49 1 chic_mode_en
DESC CHI-C mode enable
PAR POR_CHIC_MODE_EN_PARAM
R 0x980 64 - S por_cfgm_secure_access
RESET 0x0 0x3
DESC Functions as the secure access control register. This register must be set up at boot time. Before initiating a write to this register, software must ensure that no other configuration accesses are in flight. Once this write is initiated, no other configuration accesses are initiated until complete.
F 0 2 configure_secure_access
DESC Secure access mode 2'b00: Default operation 2'b01: Allows non-secure access to secure registers 2'b10: Allows secure access only to any configuration register regardless of its security status 2'b11: Undefined behavior
R 0x1000 64 - S por_ppu_int_enable
RESET 0x0 0xffffffffffffffff
DESC Configures the HN-F PPU event interrupt. Contains the interrupt mask.
F 0 64 hnf_ppu_enable
DESC Interrupt mask
R 0x1008 64 - S por_ppu_int_status
RESET 0x0 0xffffffffffffffff
DESC Provides HN-F PPU event interrupt status.
F 0 64 hnf_ppu_status
DESC Interrupt status
R 0x1010 64 - S por_ppu_qactive_hyst
RESET 0x10 0xffff
DESC Number of hysteresis clock cycles to retain QACTIVE assertion
F 0 16 hnf_ppu_qact_hyst
DESC QACTIVE hysteresis
R 0x3000 64 RO S por_cfgm_errgsr0
RESET 0x0 0xffffffffffffffff
DESC Provides the XP <n> secure error status.
F 0 64 err_status0
DESC Read-only copy of por_mxp_err<n>status
R 0x3008 64 RO S por_cfgm_errgsr1
RESET 0x0 0xffffffffffffffff
DESC Provides the HN-I <n> secure error status.
F 0 64 err_status1
DESC Read-only copy of por_hni_err<n>status
R 0x3010 64 RO S por_cfgm_errgsr2
RESET 0x0 0xffffffffffffffff
DESC Provides the HN-F <n> secure error status.
F 0 64 err_status2
DESC Read-only copy of por_hnf_err<n>status
R 0x3018 64 RO S por_cfgm_errgsr3
RESET 0x0 0xffffffffffffffff
DESC Provides the SBSX <n> secure error status.
F 0 64 err_status3
DESC Read-only copy of por_sbsx_err<n>status
R 0x3020 64 RO S por_cfgm_errgsr4
RESET 0x0 0xffffffffffffffff
DESC Provides the CXG <n> secure error status.
F 0 64 err_status4
DESC Read-only copy of por_cxg_err<n>status
R 0x3080 64 RO S por_cfgm_errgsr5
RESET 0x0 0xffffffffffffffff
DESC Provides the XP <n> secure fault status.
F 0 64 err_status5
DESC Read-only copy of por_mxp_err<n>status
R 0x3088 64 RO S por_cfgm_errgsr6
RESET 0x0 0xffffffffffffffff
DESC Provides the HN-I <n> secure fault status.
F 0 64 err_status6
DESC Read-only copy of por_hni_err<n>status
R 0x3090 64 RO S por_cfgm_errgsr7
RESET 0x0 0xffffffffffffffff
DESC Provides the HN-F <n> secure fault status.
F 0 64 err_status7
DESC Read-only copy of por_hnf_err<n>status
R 0x3098 64 RO S por_cfgm_errgsr8
RESET 0x0 0xffffffffffffffff
DESC Provides the SBSX <n> secure fault status.
F 0 64 err_status8
DESC Read-only copy of por_sbsx_err<n>status
R 0x30a0 64 RO S por_cfgm_errgsr9
RESET 0x0 0xffffffffffffffff
DESC Provides the CXG <n> secure error status.
F 0 64 err_status9
DESC Read-only copy of por_cxg_err<n>status
R 0x3100 64 RO - por_cfgm_errgsr0_NS
RESET 0x0 0xffffffffffffffff
DESC Provides the XP <n> non-secure error status.
F 0 64 err_status0_ns
DESC Read-only copy of por_mxp_err<n>status
R 0x3108 64 RO - por_cfgm_errgsr1_NS
RESET 0x0 0xffffffffffffffff
DESC Provides the HN-I <n> non-secure error status.
F 0 64 err_status1_ns
DESC Read-only copy of por_hni_err<n>status
R 0x3110 64 RO - por_cfgm_errgsr2_NS
RESET 0x0 0xffffffffffffffff
DESC Provides the HN-F <n> non-secure error status.
F 0 64 err_status2_ns
DESC Read-only copy of por_hnf_err<n>status
R 0x3118 64 RO - por_cfgm_errgsr3_NS
RESET 0x0 0xffffffffffffffff
DESC Provides the SBSX <n> non-secure error status.
F 0 64 err_status3_ns
DESC Read-only copy of por_sbsx_err<n>status
R 0x3120 64 RO S por_cfgm_errgsr4_NS
RESET 0x0 0xffffffffffffffff
DESC Provides the CXG <n> secure error status.
F 0 64 err_status4_ns
DESC Read-only copy of por_cxg_err<n>status
R 0x3180 64 RO - por_cfgm_errgsr5_NS
RESET 0x0 0xffffffffffffffff
DESC Provides the XP <n> non-secure fault status.
F 0 64 err_status5_ns
DESC Read-only copy of por_mxp_err<n>status
R 0x3188 64 RO - por_cfgm_errgsr6_NS
RESET 0x0 0xffffffffffffffff
DESC Provides the HN-I <n> non-secure fault status.
F 0 64 err_status6_ns
DESC Read-only copy of por_hni_err<n>status
R 0x3190 64 RO - por_cfgm_errgsr7_NS
RESET 0x0 0xffffffffffffffff
DESC Provides the HN-F <n> non-secure fault status.
F 0 64 err_status7_ns
DESC Read-only copy of por_hnf_err<n>status
R 0x3198 64 RO - por_cfgm_errgsr8_NS
RESET 0x0 0xffffffffffffffff
DESC Provides the SBSX <n> non-secure fault status.
F 0 64 err_status8_ns
DESC Read-only copy of por_sbsx_err<n>status
R 0x31a0 64 RO S por_cfgm_errgsr9_NS
RESET 0x0 0xffffffffffffffff
DESC Provides the CXG <n> secure error status.
F 0 64 err_status9_ns
DESC Read-only copy of por_cxg_err<n>status
R 0x3fa8 64 RO - por_cfgm_errdevaff
RESET 0x0 0xffffffffffffffff
DESC Functions as the device affinity register.
F 0 64 devaff
DESC Device affinity register
R 0x3fb8 64 RO - por_cfgm_errdevarch
RESET 0x47700a0000000000 0xffffffff00000000
DESC Functions as the device architecture register.
F 32 16 archid
DESC Architecture ID
F 48 4 revision
DESC Architecture revision
F 52 1 present
DESC Present
F 53 11 architect
DESC Architect
R 0x3fc8 64 RO - por_cfgm_erridr
RESET 0x1 0xffff
DESC Contains the number of error records.
F 0 16 recnum
DESC Number of error records; equal to 2*(number of logical devices)
PAR RCB_NUM_ERR_RECORD_PARAM
R 0x3fd0 64 RO - por_cfgm_errpidr45
RESET 0x4 0xff000000ff
DESC Functions as the identification register for peripheral ID 4 and peripheral ID 5.
F 0 8 pidr4
DESC Peripheral ID 4
F 32 8 pidr5
DESC Peripheral ID 5
R 0x3fd8 64 RO - por_cfgm_errpidr67
RESET 0x0 0xff000000ff
DESC Functions as the identification register for peripheral ID 6 and peripheral ID 7.
F 0 8 pidr6
DESC Peripheral ID 6
F 32 8 pidr7
DESC Peripheral ID 7
R 0x3fe0 64 RO - por_cfgm_errpidr01
RESET 0xb400000034 0xff000000ff
DESC Functions as the identification register for peripheral ID 0 and peripheral ID 1.
F 0 8 pidr0
DESC Peripheral ID 0
F 32 8 pidr1
DESC Peripheral ID 1
R 0x3fe8 64 RO - por_cfgm_errpidr23
RESET 0x7 0xff000000ff
DESC Functions as the identification register for peripheral ID 2 and peripheral ID 3.
F 0 8 pidr2
DESC Peripheral ID 2
F 32 8 pidr3
DESC Peripheral ID 3
R 0x3ff0 64 RO - por_cfgm_errcidr01
RESET 0xff0000000d 0xff000000ff
DESC Functions as the identification register for component ID 0 and component ID 1.
F 0 8 cidr0
DESC Component ID 0
F 32 8 cidr1
DESC Component ID 1
R 0x3ff8 64 RO - por_cfgm_errcidr23
RESET 0xb100000005 0xff000000ff
DESC Functions as the identification register for component ID 2 and component ID 3.
F 0 8 cidr2
DESC Component ID 2
F 32 8 cidr3
DESC Component ID 3
ENDGROUP
GROUP por_rnsam_registers
R 0x0 64 RO - por_rnsam_node_info
RESET 0xf 0xffffffffffff
DESC Provides component identification information.
F 0 16 node_type
DESC CMN-600 node type identifier
F 16 16 node_id
DESC Component node ID
PAR NODEID_PARAM
F 32 16 logical_id
DESC Component logical ID NOTE: RN SAM logical ID is always set to 16'b0.
R 0x80 64 RO - por_rnsam_child_info
RESET 0x0 0xffffffff
DESC Provides component child identification information.
F 0 16 child_count
DESC Number of child nodes; used in discovery process
F 16 16 child_ptr_offset
DESC Starting register offset which contains pointers to the child nodes
R 0x900 64 RO - por_rnsam_unit_info
RESET 0x900040020 0x3f000f00ff
DESC Provides component identification information for RN SAM.
F 0 8 num_hnf
DESC Number of hashed targets supported
PAR POR_RNSAM_NUM_HASHED_TGT_PARAM
F 16 4 num_sys_cache_group
DESC Number of system cache groups supported
PAR POR_RNSAM_NUM_SCGROUP_PARAM
F 32 6 num_non_hash_group
DESC Number of non-hashed groups supported
PAR POR_RNSAM_NUM_NONHASHGROUP_PARAM
R 0x980 64 - S por_rnsam_secure_register_groups_override
RESET 0x0 0x1
DESC Allows non-secure access to predefined groups of secure registers.
F 0 1 mem_range
DESC Allows non-secure access to secure mem_ranges registers
R 0xc00 64 - S rnsam_status
RESET 0x1 0x3
DESC Functions as the default and programming mode status register.
F 0 1 use_default_node
DESC Indicates target ID selection mode 1'b0: Enables RN SAM to hash address bits and generate target ID 1'b1: Uses default target ID
F 1 1 nstall_req
DESC Indicates RN SAM is programmed and ready 1'b0: STALL requests 1'b1: UNSTALL requests
R 0xc08 64 - S non_hash_mem_region_reg0
RESET 0x0 0x7ffffffd7ffffffd
DESC Configures non-hashed memory regions 0 and 1.
F 41 22 region1_base_addr
DESC Bits [47:26] of base address of the range CONSTRAINT: Must be an integer multiple of region 1 size
F 36 5 region1_size
DESC Memory region 1 size CONSTRAINT: Memory region must be a power of two, from minimum size supported to maximum memory size (2^address width).
F 34 2 region1_target_type
DESC Indicates node type 2'b00: HN-F 2'b01: HN-I 2'b10: CXRA 2'b11: Reserved CONSTRAINT: Only applicable for RN-I
F 32 1 region1_valid
DESC Memory region 1 valid 1'b0: Not valid 1'b1: Valid for memory region comparison
F 9 22 region0_base_addr
DESC Bits [47:26] of base address of the range CONSTRAINT: Must be an integer multiple of region 0 size
F 4 5 region0_size
DESC Memory region 0 size CONSTRAINT: Memory region must be a power of two, from minimum size supported to maximum memory size (2^address width).
F 2 2 region0_target_type
DESC Indicates node type 2'b00: HN-F 2'b01: HN-I 2'b10: CXRA 2'b11: Reserved CONSTRAINT: Only applicable for RN-I
F 0 1 region0_valid
DESC Memory region 0 valid 1'b0: Not valid 1'b1: Valid for memory region comparison
R 0xc10 64 - S non_hash_mem_region_reg1
RESET 0x0 0x7ffffffd7ffffffd
DESC Configures non-hashed memory regions 2 and 3.
F 41 22 region3_base_addr
DESC Bits [47:26] of base address of the range CONSTRAINT: Must be an integer multiple of region 3 size
F 36 5 region3_size
DESC Memory region 3 size CONSTRAINT: Memory region must be a power of two, from minimum size supported to maximum memory size (2^address width).
F 34 2 region3_target_type
DESC Indicates node type 2'b00: HN-F 2'b01: HN-I 2'b10: CXRA 2'b11: Reserved CONSTRAINT: Only applicable for RN-I
F 32 1 region3_valid
DESC Memory region 3 valid 1'b0: Not valid 1'b1: Valid for memory region comparison
F 9 22 region2_base_addr
DESC Bits [47:26] of base address of the range CONSTRAINT: Must be an integer multiple of region 2 size
F 4 5 region2_size
DESC Memory region 2 size CONSTRAINT: Memory region must be a power of two, from minimum size supported to maximum memory size (2^address width).
F 2 2 region2_target_type
DESC Indicates node type 2'b00: HN-F 2'b01: HN-I 2'b10: CXRA 2'b11: Reserved CONSTRAINT: Only applicable for RN-I
F 0 1 region2_valid
DESC Memory region 2 valid 1'b0: Not valid 1'b1: Valid for memory region comparison
R 0xc18 64 - S non_hash_mem_region_reg2
RESET 0x0 0x7ffffffd7ffffffd
DESC Configures non-hashed memory regions 4 and 5.
F 41 22 region5_base_addr
DESC Bits [47:26] of base address of the range CONSTRAINT: Must be an integer multiple of region 5 size
F 36 5 region5_size
DESC Memory region 5 size CONSTRAINT: Memory region must be a power of two, from minimum size supported to maximum memory size (2^address width).
F 34 2 region5_target_type
DESC Indicates node type 2'b00: HN-F 2'b01: HN-I 2'b10: CXRA 2'b11: Reserved CONSTRAINT: Only applicable for RN-I
F 32 1 region5_valid
DESC Memory region 5 valid 1'b0: Not valid 1'b1: Valid for memory region comparison
F 9 22 region4_base_addr
DESC Bits [47:26] of base address of the range CONSTRAINT: Must be an integer multiple of region 4 size
F 4 5 region4_size
DESC Memory region 4 size CONSTRAINT: Memory region must be a power of two, from minimum size supported to maximum memory size (2^address width).
F 2 2 region4_target_type
DESC Indicates node type 2'b00: HN-F 2'b01: HN-I 2'b10: CXRA 2'b11: Reserved CONSTRAINT: Only applicable for RN-I
F 0 1 region4_valid
DESC Memory region 4 valid 1'b0: Not valid 1'b1: Valid for memory region comparison
R 0xc20 64 - S non_hash_mem_region_reg3
RESET 0x0 0x7ffffffd7ffffffd
DESC Configures non-hashed memory regions 6 and 7.
F 41 22 region7_base_addr
DESC Bits [47:26] of base address of the range CONSTRAINT: Must be an integer multiple of region 7 size
F 36 5 region7_size
DESC Memory region 7 size CONSTRAINT: Memory region must be a power of two, from minimum size supported to maximum memory size (2^address width).
F 34 2 region7_target_type
DESC Indicates node type 2'b00: HN-F 2'b01: HN-I 2'b10: CXRA 2'b11: Reserved CONSTRAINT: Only applicable for RN-I
F 32 1 region7_valid
DESC Memory region 7 valid 1'b0: Not valid 1'b1: Valid for memory region comparison
F 9 22 region6_base_addr
DESC Bits [47:26] of base address of the range CONSTRAINT: Must be an integer multiple of region 6 size
F 4 5 region6_size
DESC Memory region 6 size CONSTRAINT: Memory region must be a power of two, from minimum size supported to maximum memory size (2^address width).
F 2 2 region6_target_type
DESC Indicates node type 2'b00: HN-F 2'b01: HN-I 2'b10: CXRA 2'b11: Reserved CONSTRAINT: Only applicable for RN-I
F 0 1 region6_valid
DESC Memory region 6 valid 1'b0: Not valid 1'b1: Valid for memory region comparison
R 0xc28 64 - S non_hash_mem_region_reg4
RESET 0x0 0x7ffffffd7ffffffd
DESC Configures non-hashed memory regions 8 and 9.
F 41 22 region9_base_addr
DESC Bits [47:26] of base address of the range CONSTRAINT: Must be an integer multiple of region 9 size
F 36 5 region9_size
DESC Memory region 9 size CONSTRAINT: Memory region must be a power of two, from minimum size supported to maximum memory size (2^address width).
F 34 2 region9_target_type
DESC Indicates node type 2'b00: HN-F 2'b01: HN-I 2'b10: CXRA 2'b11: Reserved CONSTRAINT: Only applicable for RN-I
F 32 1 region9_valid
DESC Memory region 9 valid 1'b0: Not valid 1'b1: Valid for memory region comparison
F 9 22 region8_base_addr
DESC Bits [47:26] of base address of the range CONSTRAINT: Must be an integer multiple of region 8 size
F 4 5 region8_size
DESC Memory region 8 size CONSTRAINT: Memory region must be a power of two, from minimum size supported to maximum memory size (2^address width).
F 2 2 region8_target_type
DESC Indicates node type 2'b00: HN-F 2'b01: HN-I 2'b10: CXRA 2'b11: Reserved CONSTRAINT: Only applicable for RN-I
F 0 1 region8_valid
DESC Memory region 8 valid 1'b0: Not valid 1'b1: Valid for memory region comparison
R 0xc30 64 - S non_hash_tgt_nodeid0
RESET 0x0 0x7ff7ff7ff7ff
DESC Configures non-hashed target node IDs 0 to 3.
F 0 11 nodeid_0
DESC Non-hashed target node ID 0
F 12 11 nodeid_1
DESC Non-hashed target node ID 1
F 24 11 nodeid_2
DESC Non-hashed target node ID 2
F 36 11 nodeid_3
DESC Non-hashed target node ID 3
R 0xc38 64 - S non_hash_tgt_nodeid1
RESET 0x0 0x7ff7ff7ff7ff
DESC Configures non-hashed target node IDs 4 to 7.
F 0 11 nodeid_4
DESC Non-hashed target node ID 4
F 12 11 nodeid_5
DESC Non-hashed target node ID 5
F 24 11 nodeid_6
DESC Non-hashed target node ID 6
F 36 11 nodeid_7
DESC Non-hashed target node ID 7
R 0xc40 64 - S non_hash_tgt_nodeid2
RESET 0x0 0x7ff7ff7ff7ff
DESC Configures non-hashed target node IDs 8 to 11.
F 0 11 nodeid_8
DESC Non-hashed target node ID 8
F 12 11 nodeid_9
DESC Non-hashed target node ID 9
F 24 11 nodeid_10
DESC Non-hashed target node ID 10
F 36 11 nodeid_11
DESC Non-hashed target node ID 11
R 0xc48 64 - S sys_cache_grp_region0
RESET 0x0 0x7fffffff7ffffffd
DESC Configures hashed memory regions 0 and 1.
F 41 22 region1_base_addr
DESC Bits [47:26] of base address of the range CONSTRAINT: Must be an integer multiple of region 1 size
F 36 5 region1_size
DESC Memory region 1 size CONSTRAINT: Memory region must be a power of two, from minimum size supported to maximum memory size (2^address width).
F 34 2 region1_target_type
DESC Indicates node type 2'b00: HN-F 2'b01: HN-I 2'b10: CXRA 2'b11: Reserved CONSTRAINT: Only applicable for RN-I
F 33 1 region1_nonhash_reg_en
DESC Enables hashed region 1 to select non-hashed node
F 32 1 region1_valid
DESC Memory region 1 valid 1'b0: Not valid 1'b1: Valid for memory region comparison
F 9 22 region0_base_addr
DESC Bits [47:26] of base address of the range CONSTRAINT: Must be an integer multiple of region 0 size
F 4 5 region0_size
DESC Memory region 0 size CONSTRAINT: Memory region must be a power of two, from minimum size supported to maximum memory size (2^address width).
F 2 2 region0_target_type
DESC Indicates node type 2'b00: HN-F 2'b01: HN-I 2'b10: CXRA 2'b11: Reserved CONSTRAINT: Only applicable for RN-I
F 0 1 region0_valid
DESC Memory region 0 valid 1'b0: Not valid 1'b1: Valid for memory region comparison
R 0xc50 64 - S sys_cache_grp_region1
RESET 0x0 0x7fffffff7fffffff
DESC Configures hashed memory regions 2 and 3.
F 41 22 region3_base_addr
DESC Bits [47:26] of base address of the range CONSTRAINT: Must be an integer multiple of region 3 size
F 36 5 region3_size
DESC Memory region 3 size CONSTRAINT: Memory region must be a power of two, from minimum size supported to maximum memory size (2^address width).
F 34 2 region3_target_type
DESC Indicates node type 2'b00: HN-F 2'b01: HN-I 2'b10: CXRA 2'b11: Reserved CONSTRAINT: Only applicable for RN-I
F 33 1 region3_nonhash_reg_en
DESC Enables hashed region 3 to select non-hashed node
F 32 1 region3_valid
DESC Memory region 3 valid 1'b0: Not valid 1'b1: Valid for memory region comparison
F 9 22 region2_base_addr
DESC Bits [47:26] of base address of the range CONSTRAINT: Must be an integer multiple of region 2 size
F 4 5 region2_size
DESC Memory region 2 size CONSTRAINT: Memory region must be a power of two, from minimum size supported to maximum memory size (2^address width).
F 2 2 region2_target_type
DESC Indicates node type 2'b00: HN-F 2'b01: HN-I 2'b10: CXRA 2'b11: Reserved CONSTRAINT: Only applicable for RN-I
F 1 1 region2_nonhash_reg_en
DESC Enables hashed region 2 to select non-hashed node
F 0 1 region2_valid
DESC Memory region 2 valid 1'b0: Not valid 1'b1: Valid for memory region comparison
R 0xc58 64 - S sys_cache_grp_hn_nodeid_reg0
RESET 0x0 0x7ff7ff7ff7ff
DESC Configures hashed node IDs for system cache groups. Controls target HN node IDs 0 to 3.
F 36 11 nodeid_3
DESC Hashed target node ID 3
F 24 11 nodeid_2
DESC Hashed target node ID 2
F 12 11 nodeid_1
DESC Hashed target node ID 1
F 0 11 nodeid_0
DESC Hashed target node ID 0
R 0xc60 64 - S sys_cache_grp_hn_nodeid_reg1
RESET 0x0 0x7ff7ff7ff7ff
DESC Configures hashed node IDs for system cache groups. Controls target HN node IDs 4 to 7.
F 36 11 nodeid_7
DESC Hashed target node ID 7
F 24 11 nodeid_6
DESC Hashed target node ID 6
F 12 11 nodeid_5
DESC Hashed target node ID 5
F 0 11 nodeid_4
DESC Hashed target node ID 4
R 0xc68 64 - S sys_cache_grp_hn_nodeid_reg2
RESET 0x0 0x7ff7ff7ff7ff
DESC Configures hashed node IDs for system cache groups. Controls target HN node IDs 8 to 11.
F 36 11 nodeid_11
DESC Hashed target node ID 11
F 24 11 nodeid_10
DESC Hashed target node ID 10
F 12 11 nodeid_9
DESC Hashed target node ID 9
F 0 11 nodeid_8
DESC Hashed target node ID 8
R 0xc70 64 - S sys_cache_grp_hn_nodeid_reg3
RESET 0x0 0x7ff7ff7ff7ff
DESC Configures hashed node IDs for system cache groups. Controls target HN node IDs 12 to 15.
F 36 11 nodeid_15
DESC Hashed target node ID 15
F 24 11 nodeid_14
DESC Hashed target node ID 14
F 12 11 nodeid_13
DESC Hashed target node ID 13
F 0 11 nodeid_12
DESC Hashed target node ID 12
R 0xc78 64 - S sys_cache_grp_hn_nodeid_reg4
RESET 0x0 0x7ff7ff7ff7ff
DESC Configures hashed node IDs for system cache groups. Controls target HN node IDs 16 to 19.
F 36 11 nodeid_19
DESC Hashed target node ID 19
F 24 11 nodeid_18
DESC Hashed target node ID 18
F 12 11 nodeid_17
DESC Hashed target node ID 17
F 0 11 nodeid_16
DESC Hashed target node ID 16
R 0xc80 64 - S sys_cache_grp_hn_nodeid_reg5
RESET 0x0 0x7ff7ff7ff7ff
DESC Configures hashed node IDs for system cache groups. Controls target HN node IDs 20 to 23.
F 36 11 nodeid_23
DESC Hashed target node ID 23
F 24 11 nodeid_22
DESC Hashed target node ID 22
F 12 11 nodeid_21
DESC Hashed target node ID 21
F 0 11 nodeid_20
DESC Hashed target node ID 20
R 0xc88 64 - S sys_cache_grp_hn_nodeid_reg6
RESET 0x0 0x7ff7ff7ff7ff
DESC Configures hashed node IDs for system cache groups. Controls target HN node IDs 24 to 27.
F 36 11 nodeid_27
DESC Hashed target node ID 27
F 24 11 nodeid_26
DESC Hashed target node ID 26
F 12 11 nodeid_25
DESC Hashed target node ID 25
F 0 11 nodeid_24
DESC Hashed target node ID 24
R 0xc90 64 - S sys_cache_grp_hn_nodeid_reg7
RESET 0x0 0x7ff7ff7ff7ff
DESC Configures hashed node IDs for system cache groups. Controls target HN node IDs 28 to 31.
F 36 11 nodeid_31
DESC Hashed target node ID 31
F 24 11 nodeid_30
DESC Hashed target node ID 30
F 12 11 nodeid_29
DESC Hashed target node ID 29
F 0 11 nodeid_28
DESC Hashed target node ID 28
R 0xc98 64 - S sys_cache_grp_nonhash_nodeid
RESET 0x0 0x7ff7ff7ff
DESC Configures non-hashed node IDs for system cache groups 1 to 3. NOTE: Only applicable in the non-hashed mode.
F 0 11 scg1_nodeid
DESC Non-hashed node ID for system cache group 1
F 12 11 scg2_nodeid
DESC Non-hashed node ID for system cache group 2
F 24 11 scg3_nodeid
DESC Non-hashed node ID for system cache group 3
R 0xca0 64 - S non_hash_mem_region_reg5
RESET 0x0 0x7ffffffd7ffffffd
DESC Configures non-hashed memory regions 10 and 11.
F 41 22 region11_base_addr
DESC Bits [47:26] of base address of the range CONSTRAINT: Must be an integer multiple of region 11 size
F 36 5 region11_size
DESC Memory region 11 size CONSTRAINT: Memory region must be a power of two, from minimum size supported to maximum memory size (2^address width).
F 34 2 region11_target_type
DESC Indicates node type 2'b00: HN-F 2'b01: HN-I 2'b10: CXRA 2'b11: Reserved CONSTRAINT: Only applicable for RN-I
F 32 1 region11_valid
DESC Memory region 11 valid 1'b0: Not valid 1'b1: Valid for memory region comparison
F 9 22 region10_base_addr
DESC Bits [47:26] of base address of the range CONSTRAINT: Must be an integer multiple of region 10 size
F 4 5 region10_size
DESC Memory region 10 size CONSTRAINT: Memory region must be a power of two, from minimum size supported to maximum memory size (2^address width).
F 2 2 region10_target_type
DESC Indicates node type 2'b00: HN-F 2'b01: HN-I 2'b10: CXRA 2'b11: Reserved CONSTRAINT: Only applicable for RN-I
F 0 1 region10_valid
DESC Memory region 10 valid 1'b0: Not valid 1'b1: Valid for memory region comparison
R 0xca8 64 - S non_hash_mem_region_reg6
RESET 0x0 0x7ffffffd7ffffffd
DESC Configures non-hashed memory regions 12 and 13.
F 41 22 region13_base_addr
DESC Bits [47:26] of base address of the range CONSTRAINT: Must be an integer multiple of region 13 size
F 36 5 region13_size
DESC Memory region 13 size CONSTRAINT: Memory region must be a power of two, from minimum size supported to maximum memory size (2^address width).
F 34 2 region13_target_type
DESC Indicates node type 2'b00: HN-F 2'b01: HN-I 2'b10: CXRA 2'b11: Reserved CONSTRAINT: Only applicable for RN-I
F 32 1 region13_valid
DESC Memory region 13 valid 1'b0: Not valid 1'b1: Valid for memory region comparison
F 9 22 region12_base_addr
DESC Bits [47:26] of base address of the range CONSTRAINT: Must be an integer multiple of region 12 size
F 4 5 region12_size
DESC Memory region 12 size CONSTRAINT: Memory region must be a power of two, from minimum size supported to maximum memory size (2^address width).
F 2 2 region12_target_type
DESC Indicates node type 2'b00: HN-F 2'b01: HN-I 2'b10: CXRA 2'b11: Reserved CONSTRAINT: Only applicable for RN-I
F 0 1 region12_valid
DESC Memory region 12 valid 1'b0: Not valid 1'b1: Valid for memory region comparison
R 0xcb0 64 - S non_hash_mem_region_reg7
RESET 0x0 0x7ffffffd7ffffffd
DESC Configures non-hashed memory regions 14 and 15.
F 41 22 region15_base_addr
DESC Bits [47:26] of base address of the range CONSTRAINT: Must be an integer multiple of region 15 size
F 36 5 region15_size
DESC Memory region 15 size CONSTRAINT: Memory region must be a power of two, from minimum size supported to maximum memory size (2^address width).
F 34 2 region15_target_type
DESC Indicates node type 2'b00: HN-F 2'b01: HN-I 2'b10: CXRA 2'b11: Reserved CONSTRAINT: Only applicable for RN-I
F 32 1 region15_valid
DESC Memory region 15 valid 1'b0: Not valid 1'b1: Valid for memory region comparison
F 9 22 region14_base_addr
DESC Bits [47:26] of base address of the range CONSTRAINT: Must be an integer multiple of region 14 size
F 4 5 region14_size
DESC Memory region 14 size CONSTRAINT: Memory region must be a power of two, from minimum size supported to maximum memory size (2^address width).
F 2 2 region14_target_type
DESC Indicates node type 2'b00: HN-F 2'b01: HN-I 2'b10: CXRA 2'b11: Reserved CONSTRAINT: Only applicable for RN-I
F 0 1 region14_valid
DESC Memory region 14 valid 1'b0: Not valid 1'b1: Valid for memory region comparison
R 0xcb8 64 - S non_hash_mem_region_reg8
RESET 0x0 0x7ffffffd7ffffffd
DESC Configures non-hashed memory regions 16 and 17.
F 41 22 region17_base_addr
DESC Bits [47:26] of base address of the range CONSTRAINT: Must be an integer multiple of region 17 size
F 36 5 region17_size
DESC Memory region 17 size CONSTRAINT: Memory region must be a power of two, from minimum size supported to maximum memory size (2^address width).
F 34 2 region17_target_type
DESC Indicates node type 2'b00: HN-F 2'b01: HN-I 2'b10: CXRA 2'b11: Reserved CONSTRAINT: Only applicable for RN-I
F 32 1 region17_valid
DESC Memory region 17 valid 1'b0: Not valid 1'b1: Valid for memory region comparison
F 9 22 region16_base_addr
DESC Bits [47:26] of base address of the range CONSTRAINT: Must be an integer multiple of region 16 size
F 4 5 region16_size
DESC Memory region 16 size CONSTRAINT: Memory region must be a power of two, from minimum size supported to maximum memory size (2^address width).
F 2 2 region16_target_type
DESC Indicates node type 2'b00: HN-F 2'b01: HN-I 2'b10: CXRA 2'b11: Reserved CONSTRAINT: Only applicable for RN-I
F 0 1 region16_valid
DESC Memory region 16 valid 1'b0: Not valid 1'b1: Valid for memory region comparison
R 0xcc0 64 - S non_hash_mem_region_reg9
RESET 0x0 0x7ffffffd7ffffffd
DESC Configures non-hashed memory regions 18 and 19.
F 41 22 region19_base_addr
DESC Bits [47:26] of base address of the range CONSTRAINT: Must be an integer multiple of region 19 size
F 36 5 region19_size
DESC Memory region 19 size CONSTRAINT: Memory region must be a power of two, from minimum size supported to maximum memory size (2^address width).
F 34 2 region19_target_type
DESC Indicates node type 2'b00: HN-F 2'b01: HN-I 2'b10: CXRA 2'b11: Reserved CONSTRAINT: Only applicable for RN-I
F 32 1 region19_valid
DESC Memory region 19 valid 1'b0: Not valid 1'b1: Valid for memory region comparison
F 9 22 region18_base_addr
DESC Bits [47:26] of base address of the range CONSTRAINT: Must be an integer multiple of region 18 size
F 4 5 region18_size
DESC Memory region 18 size CONSTRAINT: Memory region must be a power of two, from minimum size supported to maximum memory size (2^address width).
F 2 2 region18_target_type
DESC Indicates node type 2'b00: HN-F 2'b01: HN-I 2'b10: CXRA 2'b11: Reserved CONSTRAINT: Only applicable for RN-I
F 0 1 region18_valid
DESC Memory region 18 valid 1'b0: Not valid 1'b1: Valid for memory region comparison
R 0xce0 64 - S non_hash_tgt_nodeid3
RESET 0x0 0x7ff7ff7ff7ff
DESC Configures non-hashed target node IDs 12 to 15.
F 0 11 nodeid_12
DESC Non-hashed target node ID 12
F 12 11 nodeid_13
DESC Non-hashed target node ID 13
F 24 11 nodeid_14
DESC Non-hashed target node ID 14
F 36 11 nodeid_15
DESC Non-hashed target node ID 15
R 0xce8 64 - S non_hash_tgt_nodeid4
RESET 0x0 0x7ff7ff7ff7ff
DESC Configures non-hashed target node IDs 16 to 19.
F 0 11 nodeid_16
DESC Non-hashed target node ID 16
F 12 11 nodeid_17
DESC Non-hashed target node ID 17
F 24 11 nodeid_18
DESC Non-hashed target node ID 18
F 36 11 nodeid_19
DESC Non-hashed target node ID 19
R 0xd00 64 - S sys_cache_group_hn_count
RESET 0x0 0x7f7f7f7f
DESC Indicates number of HN-Fs in system cache groups 0 to 3.
F 0 7 scg0_num_hnf
DESC HN-F count for system cache group 0
F 8 7 scg1_num_hnf
DESC HN-F count for system cache group 1
F 16 7 scg2_num_hnf
DESC HN-F count for system cache group 2
F 24 7 scg3_num_hnf
DESC HN-F count for system cache group 3
R 0xd08 64 - S sys_cache_grp_sn_nodeid_reg0
RESET 0x0 0x7ff7ff7ff7ff
DESC Configures hashed node IDs for system cache groups. Controls target SN node IDs 0 to 3.
F 36 11 sn_nodeid_3
DESC Hashed target SN node ID 3
F 24 11 sn_nodeid_2
DESC Hashed target SN node ID 2
F 12 11 sn_nodeid_1
DESC Hashed target SN node ID 1
F 0 11 sn_nodeid_0
DESC Hashed target SN node ID 0
R 0xd10 64 - S sys_cache_grp_sn_nodeid_reg1
RESET 0x0 0x7ff7ff7ff7ff
DESC Configures hashed node IDs for system cache groups. Controls target SN node IDs 4 to 7.
F 36 11 sn_nodeid_7
DESC Hashed target SN node ID 7
F 24 11 sn_nodeid_6
DESC Hashed target SN node ID 6
F 12 11 sn_nodeid_5
DESC Hashed target SN node ID 5
F 0 11 sn_nodeid_4
DESC Hashed target SN node ID 4
R 0xd18 64 - S sys_cache_grp_sn_nodeid_reg2
RESET 0x0 0x7ff7ff7ff7ff
DESC Configures hashed node IDs for system cache groups. Controls target SN node IDs 8 to 11.
F 36 11 sn_nodeid_11
DESC Hashed target SN node ID 11
F 24 11 sn_nodeid_10
DESC Hashed target SN node ID 10
F 12 11 sn_nodeid_9
DESC Hashed target SN node ID 9
F 0 11 sn_nodeid_8
DESC Hashed target SN node ID 8
R 0xd20 64 - S sys_cache_grp_sn_nodeid_reg3
RESET 0x0 0x7ff7ff7ff7ff
DESC Configures hashed node IDs for system cache groups. Controls target SN node IDs 12 to 15.
F 36 11 sn_nodeid_15
DESC Hashed target SN node ID 15
F 24 11 sn_nodeid_14
DESC Hashed target SN node ID 14
F 12 11 sn_nodeid_13
DESC Hashed target SN node ID 13
F 0 11 sn_nodeid_12
DESC Hashed target SN node ID 12
R 0xd28 64 - S sys_cache_grp_sn_nodeid_reg4
RESET 0x0 0x7ff7ff7ff7ff
DESC Configures hashed node IDs for system cache groups. Controls target SN node IDs 16 to 19.
F 36 11 sn_nodeid_19
DESC Hashed target SN node ID 19
F 24 11 sn_nodeid_18
DESC Hashed target SN node ID 18
F 12 11 sn_nodeid_17
DESC Hashed target SN node ID 17
F 0 11 sn_nodeid_16
DESC Hashed target SN node ID 16
R 0xd30 64 - S sys_cache_grp_sn_nodeid_reg5
RESET 0x0 0x7ff7ff7ff7ff
DESC Configures hashed node IDs for system cache groups. Controls target SN node IDs 20 to 23.
F 36 11 sn_nodeid_23
DESC Hashed target SN node ID 23
F 24 11 sn_nodeid_22
DESC Hashed target SN node ID 22
F 12 11 sn_nodeid_21
DESC Hashed target SN node ID 21
F 0 11 sn_nodeid_20
DESC Hashed target SN node ID 20
R 0xd38 64 - S sys_cache_grp_sn_nodeid_reg6
RESET 0x0 0x7ff7ff7ff7ff
DESC Configures hashed node IDs for system cache groups. Controls target SN node IDs 24 to 27.
F 36 11 sn_nodeid_27
DESC Hashed target SN node ID 27
F 24 11 sn_nodeid_26
DESC Hashed target SN node ID 26
F 12 11 sn_nodeid_25
DESC Hashed target SN node ID 25
F 0 11 sn_nodeid_24
DESC Hashed target SN node ID 24
R 0xd40 64 - S sys_cache_grp_sn_nodeid_reg7
RESET 0x0 0x7ff7ff7ff7ff
DESC Configures hashed node IDs for system cache groups. Controls target SN node IDs 28 to 31.
F 36 11 sn_nodeid_31
DESC Hashed target SN node ID 31
F 24 11 sn_nodeid_30
DESC Hashed target SN node ID 30
F 12 11 sn_nodeid_29
DESC Hashed target SN node ID 29
F 0 11 sn_nodeid_28
DESC Hashed target SN node ID 28
R 0xd48 64 - S sys_cache_grp_sn_sam_cfg0
RESET 0x0 0x3f3f3f3f3f3f
DESC Configures top address bits for SN SAM system cache groups 0 and 1. All top_address_bit fields must be between bits 47 and 28. top_address_bit2 > top_address_bit1 > top_address_bit0.
F 0 6 scg0_top_address_bit0
DESC Top address bit 0 for system cache group 0
F 8 6 scg0_top_address_bit1
DESC Top address bit 1 for system cache group 0
F 16 6 scg0_top_address_bit2
DESC Top address bit 2 for system cache group 0
F 24 6 scg1_top_address_bit0
DESC Top address bit 0 for system cache group 1
F 32 6 scg1_top_address_bit1
DESC Top address bit 1 for system cache group 1
F 40 6 scg1_top_address_bit2
DESC Top address bit 2 for system cache group 1
R 0xd50 64 - S sys_cache_grp_sn_sam_cfg1
RESET 0x0 0x3f3f3f3f3f3f
DESC Configures top address bits for SN SAM system cache groups 2 and 3. All top_address_bit fields must be between bits 47 and 28. top_address_bit2 &gt; top_address_bit1 &gt; top_address_bit0.
F 0 6 scg2_top_address_bit0
DESC Top address bit 0 for system cache group 2
F 8 6 scg2_top_address_bit1
DESC Top address bit 1 for system cache group 2
F 16 6 scg2_top_address_bit2
DESC Top address bit 2 for system cache group 2
F 24 6 scg3_top_address_bit0
DESC Top address bit 0 for system cache group 3
F 32 6 scg3_top_address_bit1
DESC Top address bit 1 for system cache group 3
F 40 6 scg3_top_address_bit2
DESC Top address bit 2 for system cache group 3
R 0xd58 64 - S gic_mem_region_reg
RESET 0x0 0x7ff0ffffffff007d
DESC Configures GIC memory region.
F 52 11 gic_region_nodeid
DESC GIC node ID 30
F 16 32 gic_region_base_addr
DESC Base address of the GIC memory region CONSTRAINT: Must be an integer multiple of region size
F 4 3 gic_region_size
DESC GIC memory region size 3'b000: 64KB 3'b001: 128KB 3'b010: 256KB 3'b011: 512KB CONSTRAINT: Memory region must be a power of 2.
F 2 2 gic_region_target_type
DESC Indicates node type 2'b00: HN-F 2'b01: HN-I 2'b10: CXRA 2'b11: Reserved CONSTRAINT: Only applicable for RN-I
F 0 1 gic_region_valid
DESC Memory region 1 valid 1'b0: Not valid 1'b1: Valid for memory region comparison
R 0xd60 64 - S sys_cache_grp_sn_attr
RESET 0x0 0x31003100310031
DESC Configures attributes for SN node IDs for system cache groups.
F 0 1 inv_top_address_bit_sys_cache_grp0
DESC Inverts the top address bit (top_address_bit1 if 3-SN, top_address_bit2 if 6-SN); only used when the address map does not have unique address bit combinations
F 4 2 sn_mode_sys_cache_grp0
DESC SN selection mode 2'b00: 1-SN mode (SN0) 2'b01: 3-SN mode (SN0, SN1, SN2) 2'b10: 6-SN mode (SN0, SN1, SN2, SN3, SN4, SN5) 2'b11: Reserved
F 16 1 inv_top_address_bit_sys_cache_grp1
DESC Inverts the top address bit (top_address_bit1 if 3-SN, top_address_bit2 if 6-SN); only used when the address map does not have unique address bit combinations
F 20 2 sn_mode_sys_cache_grp1
DESC SN selection mode 2'b00: 1-SN mode (SN0) 2'b01: 3-SN mode (SN0, SN1, SN2) 2'b10: 6-SN mode (SN0, SN1, SN2, SN3, SN4, SN5) 2'b11: Reserved
F 32 1 inv_top_address_bit_sys_cache_grp2
DESC Inverts the top address bit (top_address_bit1 if 3-SN, top_address_bit2 if 6-SN); only used when the address map does not have unique address bit combinations
F 36 2 sn_mode_sys_cache_grp2
DESC SN selection mode 2'b00: 1-SN mode (SN0) 2'b01: 3-SN mode (SN0, SN1, SN2) 2'b10: 6-SN mode (SN0, SN1, SN2, SN3, SN4, SN5) 2'b11: Reserved
F 48 1 inv_top_address_bit_sys_cache_grp3
DESC Inverts the top address bit (top_address_bit1 if 3-SN, top_address_bit2 if 6-SN); only used when the address map does not have unique address bit combinations
F 52 2 sn_mode_sys_cache_grp3
DESC SN selection mode 2'b00: 1-SN mode (SN0) 2'b01: 3-SN mode (SN0, SN1, SN2) 2'b10: 6-SN mode (SN0, SN1, SN2, SN3, SN4, SN5) 2'b11: Reserved
R 0xd68 64 - S sys_cache_grp_hn_cpa_en_reg
RESET 0x0 0xffffffffffffffff
DESC Configures CCIX port aggregation mode for hashed HN node IDs
F 0 64 hash_cpa_en
DESC Enable CPA for each hashed node ID
R 0xd70 64 - S sys_cache_grp_hn_cpa_grp_reg
RESET 0x0 0x3000300030003
DESC Configures CCIX port aggregation group ID for each System Cache Group
F 0 2 cpa_grp_scg0
DESC Specifies CCIX port aggregation group ID for System Cache Group 0 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 16 2 cpa_grp_scg1
DESC Specifies CCIX port aggregation group ID for System Cache Group 1 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 32 2 cpa_grp_scg2
DESC Specifies CCIX port aggregation group ID for System Cache Group 2 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
F 48 2 cpa_grp_scg3
DESC Specifies CCIX port aggregation group ID for System Cache Group 3 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved
R 0xe00 64 - S cml_port_aggr_mode_ctrl_reg
RESET 0x0 0xd7777777
DESC Configures the CCIX port aggregation modes for all non-hashed memory regions.
F 0 1 region0_pag_en
DESC Enables the CPA mode for non-hashed memory region 0
F 1 2 region0_pag_grpid
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved0
F 4 1 region1_pag_en
DESC Enables the CPA mode for non-hashed memory region 1
F 5 2 region1_pag_grpid
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved1
F 8 1 region2_pag_en
DESC Enables the CPA mode for non-hashed memory region 2
F 9 2 region2_pag_grpid
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved2
F 12 1 region3_pag_en
DESC Enables the CPA mode for non-hashed memory region 3
F 13 2 region3_pag_grpid
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved3
F 16 1 region4_pag_en
DESC Enables the CPA mode for non-hashed memory region 4
F 17 2 region4_pag_grpid
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved4
F 20 1 region5_pag_en
DESC Enables the CPA mode for non-hashed memory region 5
F 21 2 region5_pag_grpid
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved5
F 24 1 region6_pag_en
DESC Enables the CPA mode for non-hashed memory region 6
F 25 2 region6_pag_grpid
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved6
F 28 1 region7_pag_en
DESC Enables the CPA mode for non-hashed memory region 7
F 30 2 region7_pag_grpid
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved7
R 0xe08 64 - S cml_port_aggr_grp0_add_mask
RESET 0x40 0xffffffffffc0
DESC Configures the CCIX port aggregation address mask for group 0.
F 6 42 addr_mask
DESC Address mask to be applied before hashing
R 0xe10 64 - S cml_port_aggr_grp1_add_mask
RESET 0x40 0xffffffffffc0
DESC Configures the CCIX port aggregation address mask for group 1.
F 6 42 addr_mask
DESC Address mask to be applied before hashing
R 0xe30 64 - S cml_port_aggr_mode_ctrl_reg1
RESET 0x0 0x777777777777
DESC Configures the CCIX port aggregation modes for non-hashed memory regions 8 through 19.
F 0 1 region8_pag_en
DESC Enables the CPA mode for non-hashed memory region 8
F 1 2 region8_pag_grpid
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved0
F 4 1 region9_pag_en
DESC Enables the CPA mode for non-hashed memory region 9
F 5 2 region9_pag_grpid
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved1
F 8 1 region10_pag_en
DESC Enables the CPA mode for non-hashed memory region 10
F 9 2 region10_pag_grpid
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved2
F 12 1 region11_pag_en
DESC Enables the CPA mode for non-hashed memory region 11
F 13 2 region11_pag_grpid
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved3
F 16 1 region12_pag_en
DESC Enables the CPA mode for non-hashed memory region 12
F 17 2 region12_pag_grpid
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved4
F 20 1 region13_pag_en
DESC Enables the CPA mode for non-hashed memory region 13
F 21 2 region13_pag_grpid
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved5
F 24 1 region14_pag_en
DESC Enables the CPA mode for non-hashed memory region 14
F 25 2 region14_pag_grpid
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved6
F 28 1 region15_pag_en
DESC Enables the CPA mode for non-hashed memory region 15
F 29 2 region15_pag_grpid
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved7
F 32 1 region16_pag_en
DESC Enables the CPA mode for non-hashed memory region 16
F 33 2 region16_pag_grpid
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved7
F 36 1 region17_pag_en
DESC Enables the CPA mode for non-hashed memory region 17
F 37 2 region17_pag_grpid
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved7
F 40 1 region18_pag_en
DESC Enables the CPA mode for non-hashed memory region 18
F 41 2 region18_pag_grpid
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved7
F 44 1 region19_pag_en
DESC Enables the CPA mode for non-hashed memory region 19
F 45 2 region19_pag_grpid
DESC Specifies CCIX port aggregation group ID 2'b00: CPA Group ID 0 2'b01: CPA Group ID 1 2'b10: Reserved 2'b11: Reserved7
R 0xe40 64 - S cml_port_aggr_grp0_reg
RESET 0x0 0x37ff7ff7ff7ff
DESC Configures the CCIX port aggregation port IDs for group 0.
F 48 2 num_cxg_pag0
DESC Specifies the number of CXRAs in CPAG 0 2'b00: 1 port used 2'b01: 2 ports used 2'b10: 4 ports used 2'b11: Reserved
F 36 11 pag0_tgtid3
DESC Specifies target ID 3 for CPAG 0
F 24 11 pag0_tgtid2
DESC Specifies target ID 2 for CPAG 0
F 12 11 pag0_tgtid1
DESC Specifies target ID 1 for CPAG 0
F 0 11 pag0_tgtid0
DESC Specifies target ID 0 for CPAG 0
R 0xe48 64 - S cml_port_aggr_grp1_reg
RESET 0x0 0x37ff7ff7ff7ff
DESC Configures the CCIX port aggregation port IDs for group 1.
F 48 2 num_cxg_pag1
DESC Specifies the number of CXRAs in CPAG 1
F 36 11 pag1_tgtid3
DESC Specifies target ID 3 for CPAG 1
F 24 11 pag1_tgtid2
DESC Specifies target ID 2 for CPAG 1
F 12 11 pag1_tgtid1
DESC Specifies target ID 1 for CPAG 1
F 0 11 pag1_tgtid0
DESC Specifies target ID 0 for CPAG 1
R 0xf00 64 - S sys_cache_grp_secondary_reg0
RESET 0x0 0x7ffffffd7ffffffd
DESC Configures secondary hashed memory regions 0 and 1.
F 41 22 region1_scndry_base_addr
DESC Bits [47:26] of secondary base address of the range CONSTRAINT: Must be an integer multiple of region 1 size
F 36 5 region1_scndry_size
DESC Secondary memory region 1 size CONSTRAINT: Memory region must be a power of two, from minimum size supported to maximum memory size (2^address width).
F 34 2 region1_scndry_target_type
DESC Indicates secondary node type 2'b00: HN-F 2'b01: HN-I 2'b10: CXRA 2'b11: Reserved CONSTRAINT: Only applicable for RN-I
F 32 1 region1_scndry_valid
DESC Secondary memory region 1 valid 1'b0: Not valid 1'b1: Valid for memory region comparison
F 9 22 region0_scndry_base_addr
DESC Bits [47:26] of secondary base address of the range CONSTRAINT: Must be an integer multiple of region 0 size
F 4 5 region0_scndry_size
DESC Secondary memory region 0 size CONSTRAINT: Memory region must be a power of two, from minimum size supported to maximum memory size (2^address width).
F 2 2 region0_scndry_target_type
DESC Indicates secondary node type 2'b00: HN-F 2'b01: HN-I 2'b10: CXRA 2'b11: Reserved CONSTRAINT: Only applicable for RN-I
F 0 1 region0_scndry_valid
DESC Secondary memory region 0 valid 1'b0: Not valid 1'b1: Valid for memory region comparison
R 0xf08 64 - S sys_cache_grp_secondary_reg1
RESET 0x0 0x7ffffffd7ffffffd
DESC Configures secondary hashed memory regions 2 and 3.
F 41 22 region3_scndry_base_addr
DESC Bits [47:26] of secondary base address of the range CONSTRAINT: Must be an integer multiple of region 3 size
F 36 5 region3_scndry_size
DESC Secondary memory region 3 size CONSTRAINT: Memory region must be a power of two, from minimum size supported to maximum memory size (2^address width).
F 34 2 region3_scndry_target_type
DESC Indicates secondary node type 2'b00: HN-F 2'b01: HN-I 2'b10: CXRA 2'b11: Reserved CONSTRAINT: Only applicable for RN-I
F 32 1 region3_scndry_valid
DESC Secondary memory region 3 valid 1'b0: Not valid 1'b1: Valid for memory region comparison
F 9 22 region2_scndry_base_addr
DESC Bits [47:26] of secondary base address of the range CONSTRAINT: Must be an integer multiple of region 2 size
F 4 5 region2_scndry_size
DESC Secondary memory region 2 size CONSTRAINT: Memory region must be a power of two, from minimum size supported to maximum memory size (2^address width).
F 2 2 region2_scndry_target_type
DESC Indicates secondary node type 2'b00: HN-F 2'b01: HN-I 2'b10: CXRA 2'b11: Reserved CONSTRAINT: Only applicable for RN-I
F 0 1 region2_scndry_valid
DESC Secondary memory region 2 valid 1'b0: Not valid 1'b1: Valid for memory region comparison
R 0xf10 64 - S sys_cache_grp_cal_mode_reg
RESET 0x0 0x1000100010001
DESC Configures the HN-F CAL mode support for all system cache groups.
F 48 1 scg3_hnf_cal_mode_en
DESC Enables support for HN-F CAL for SCG 3
F 32 1 scg2_hnf_cal_mode_en
DESC Enables support for HN-F CAL for SCG 2
F 16 1 scg1_hnf_cal_mode_en
DESC Enables support for HN-F CAL for SCG 1
F 0 1 scg0_hnf_cal_mode_en
DESC Enables support for HN-F CAL for SCG 0
R 0xf18 64 - S rnsam_hash_addr_mask_reg
RESET 0xffffffffffc0 0xffffffffffc0
DESC Configures the address mask that is applied before hashing the address bits.
F 6 42 addr_mask
DESC Address mask applied before hashing
R 0xf20 64 - S rnsam_region_cmp_addr_mask_reg
RESET 0xffffffff0000 0xffffffff0000
DESC Configures the address mask that is applied before region compare.
F 16 32 addr_mask
DESC Address mask applied before memory region compare
R 0xf58 64 - S sys_cache_grp_hn_nodeid_reg8
RESET 0x0 0x7ff7ff7ff7ff
DESC Configures hashed node IDs for system cache groups. Controls target HN node IDs 32 to 35.
F 36 11 nodeid_35
DESC Hashed target node ID 35
F 24 11 nodeid_34
DESC Hashed target node ID 34
F 12 11 nodeid_33
DESC Hashed target node ID 33
F 0 11 nodeid_32
DESC Hashed target node ID 32
R 0xf60 64 - S sys_cache_grp_hn_nodeid_reg9
RESET 0x0 0x7ff7ff7ff7ff
DESC Configures hashed node IDs for system cache groups. Controls target HN node IDs 36 to 39.
F 36 11 nodeid_39
DESC Hashed target node ID 39
F 24 11 nodeid_38
DESC Hashed target node ID 38
F 12 11 nodeid_37
DESC Hashed target node ID 37
F 0 11 nodeid_36
DESC Hashed target node ID 36
R 0xf68 64 - S sys_cache_grp_hn_nodeid_reg10
RESET 0x0 0x7ff7ff7ff7ff
DESC Configures hashed node IDs for system cache groups. Controls target HN node IDs 40 to 43.
F 36 11 nodeid_43
DESC Hashed target node ID 43
F 24 11 nodeid_42
DESC Hashed target node ID 42
F 12 11 nodeid_41
DESC Hashed target node ID 41
F 0 11 nodeid_40
DESC Hashed target node ID 40
R 0xf70 64 - S sys_cache_grp_hn_nodeid_reg11
RESET 0x0 0x7ff7ff7ff7ff
DESC Configures hashed node IDs for system cache groups. Controls target HN node IDs 44 to 47.
F 36 11 nodeid_47
DESC Hashed target node ID 47
F 24 11 nodeid_46
DESC Hashed target node ID 46
F 12 11 nodeid_45
DESC Hashed target node ID 45
F 0 11 nodeid_44
DESC Hashed target node ID 44
R 0xf78 64 - S sys_cache_grp_hn_nodeid_reg12
RESET 0x0 0x7ff7ff7ff7ff
DESC Configures hashed node IDs for system cache groups. Controls target HN node IDs 48 to 51.
F 36 11 nodeid_51
DESC Hashed target node ID 51
F 24 11 nodeid_50
DESC Hashed target node ID 50
F 12 11 nodeid_49
DESC Hashed target node ID 49
F 0 11 nodeid_48
DESC Hashed target node ID 48
R 0xf80 64 - S sys_cache_grp_hn_nodeid_reg13
RESET 0x0 0x7ff7ff7ff7ff
DESC Configures hashed node IDs for system cache groups. Controls target HN node IDs 52 to 55.
F 36 11 nodeid_55
DESC Hashed target node ID 55
F 24 11 nodeid_54
DESC Hashed target node ID 54
F 12 11 nodeid_53
DESC Hashed target node ID 53
F 0 11 nodeid_52
DESC Hashed target node ID 52
R 0xf88 64 - S sys_cache_grp_hn_nodeid_reg14
RESET 0x0 0x7ff7ff7ff7ff
DESC Configures hashed node IDs for system cache groups. Controls target HN node IDs 56 to 59.
F 36 11 nodeid_59
DESC Hashed target node ID 59
F 24 11 nodeid_58
DESC Hashed target node ID 58
F 12 11 nodeid_57
DESC Hashed target node ID 57
F 0 11 nodeid_56
DESC Hashed target node ID 56
R 0xf90 64 - S sys_cache_grp_hn_nodeid_reg15
RESET 0x0 0x7ff7ff7ff7ff
DESC Configures hashed node IDs for system cache groups. Controls target HN node IDs 60 to 63.
F 36 11 nodeid_63
DESC Hashed target node ID 63
F 24 11 nodeid_62
DESC Hashed target node ID 62
F 12 11 nodeid_61
DESC Hashed target node ID 61
F 0 11 nodeid_60
DESC Hashed target node ID 60
R 0x1008 64 - S sys_cache_grp_sn_nodeid_reg8
RESET 0x0 0x7ff7ff7ff7ff
DESC Configures hashed node IDs for system cache groups. Controls target SN node IDs 32 to 35.
F 36 11 sn_nodeid_35
DESC Hashed target SN node ID 35
F 24 11 sn_nodeid_34
DESC Hashed target SN node ID 34
F 12 11 sn_nodeid_33
DESC Hashed target SN node ID 33
F 0 11 sn_nodeid_32
DESC Hashed target SN node ID 32
R 0x1010 64 - S sys_cache_grp_sn_nodeid_reg9
RESET 0x0 0x7ff7ff7ff7ff
DESC Configures hashed node IDs for system cache groups. Controls target SN node IDs 36 to 39.
F 36 11 sn_nodeid_39
DESC Hashed target SN node ID 39
F 24 11 sn_nodeid_38
DESC Hashed target SN node ID 38
F 12 11 sn_nodeid_37
DESC Hashed target SN node ID 37
F 0 11 sn_nodeid_36
DESC Hashed target SN node ID 36
R 0x1018 64 - S sys_cache_grp_sn_nodeid_reg10
RESET 0x0 0x7ff7ff7ff7ff
DESC Configures hashed node IDs for system cache groups. Controls target SN node IDs 40 to 43.
F 36 11 sn_nodeid_43
DESC Hashed target SN node ID 43
F 24 11 sn_nodeid_42
DESC Hashed target SN node ID 42
F 12 11 sn_nodeid_41
DESC Hashed target SN node ID 41
F 0 11 sn_nodeid_40
DESC Hashed target SN node ID 40
R 0x1020 64 - S sys_cache_grp_sn_nodeid_reg11
RESET 0x0 0x7ff7ff7ff7ff
DESC Configures hashed node IDs for system cache groups. Controls target SN node IDs 44 to 47.
F 36 11 sn_nodeid_47
DESC Hashed target SN node ID 47
F 24 11 sn_nodeid_46
DESC Hashed target SN node ID 46
F 12 11 sn_nodeid_45
DESC Hashed target SN node ID 45
F 0 11 sn_nodeid_44
DESC Hashed target SN node ID 44
R 0x1028 64 - S sys_cache_grp_sn_nodeid_reg12
RESET 0x0 0x7ff7ff7ff7ff
DESC Configures hashed node IDs for system cache groups. Controls target SN node IDs 48 to 51.
F 36 11 sn_nodeid_51
DESC Hashed target SN node ID 51
F 24 11 sn_nodeid_50
DESC Hashed target SN node ID 50
F 12 11 sn_nodeid_49
DESC Hashed target SN node ID 49
F 0 11 sn_nodeid_48
DESC Hashed target SN node ID 48
R 0x1030 64 - S sys_cache_grp_sn_nodeid_reg13
RESET 0x0 0x7ff7ff7ff7ff
DESC Configures hashed node IDs for system cache groups. Controls target SN node IDs 52 to 55.
F 36 11 sn_nodeid_55
DESC Hashed target SN node ID 55
F 24 11 sn_nodeid_54
DESC Hashed target SN node ID 54
F 12 11 sn_nodeid_53
DESC Hashed target SN node ID 53
F 0 11 sn_nodeid_52
DESC Hashed target SN node ID 52
R 0x1038 64 - S sys_cache_grp_sn_nodeid_reg14
RESET 0x0 0x7ff7ff7ff7ff
DESC Configures hashed node IDs for system cache groups. Controls target SN node IDs 56 to 59.
F 36 11 sn_nodeid_59
DESC Hashed target SN node ID 59
F 24 11 sn_nodeid_58
DESC Hashed target SN node ID 58
F 12 11 sn_nodeid_57
DESC Hashed target SN node ID 57
F 0 11 sn_nodeid_56
DESC Hashed target SN node ID 56
R 0x1040 64 - S sys_cache_grp_sn_nodeid_reg15
RESET 0x0 0x7ff7ff7ff7ff
DESC Configures hashed node IDs for system cache groups. Controls target SN node IDs 60 to 63.
F 36 11 sn_nodeid_63
DESC Hashed target SN node ID 63
F 24 11 sn_nodeid_62
DESC Hashed target SN node ID 62
F 12 11 sn_nodeid_61
DESC Hashed target SN node ID 61
F 0 11 sn_nodeid_60
DESC Hashed target SN node ID 60
ENDGROUP
GROUP por_hni_registers
R 0x0 64 RO - por_hni_node_info
RESET 0x4 0xffffffffffff
DESC Provides component identification information.
F 0 16 node_type
DESC CMN-600 node type identifier
F 16 16 node_id
DESC Component node ID
PAR NODEID_PARAM
F 32 16 logical_id
DESC Component logical ID
PAR LOGICALID_PARAM
R 0x80 64 RO - por_hni_child_info
RESET 0x0 0xffffffff
DESC Provides component child identification information.
F 0 16 child_count
DESC Number of child nodes; used in discovery process
F 16 16 child_ptr_offset
DESC Starting register offset which contains pointers to the child nodes
R 0x900 64 RO - por_hni_unit_info
RESET 0x8102020 0xf1fffff
DESC Provides component identification information for HN-I.
F 0 8 num_excl
DESC Number of exclusive monitors in HN-I
PAR HNI_NUM_EXCL_REQS_PARAM
F 8 8 num_ax_reqs
DESC Maximum number of outstanding ACE-Lite/AXI4 requests
PAR HNI_NUM_AXI_REQS_PARAM
F 16 5 num_wr_data_buf
DESC Number of write data buffers in HN-I
PAR HNI_NUM_WR_BUF_PARAM
F 24 1 axdata_width
DESC Data width on ACE-Lite/AXI4 interface 1'b0: 128 bits 1'b1: 256 bits
PAR HNI_AXDATA256_EN_PARAM
F 25 2 a4s_num
DESC Number of AXI4Stream interfaces present
PAR HNI_A4S_NUM_PARAM
F 27 1 axdata_poison_en
DESC Data poison support on ACE-Lite/AXI4 interface 1'b0: Not supported 1'b1: Supported
PAR HNI_AXDATAPOISON_EN_PARAM
R 0x980 64 - S por_hni_secure_register_groups_override
RESET 0x0 0x3
DESC Allows non-secure access to predefined groups of secure registers.
F 0 1 cfg_ctl
DESC Allows non-secure access to secure configuration control register
F 1 1 sam
DESC Allows non-secure access to secure SAM registers
R 0xa00 64 - S por_hni_cfg_ctl
RESET 0x1 0x1
DESC Functions as the configuration control register for HN-I.
F 0 1 reqerr_cohreq_en
DESC Enables sending of NDE response error to RN and logging of error information for the following requests: 1. Coherent Read 2. CleanUnique/MakeUnique 3. Coherent/CopyBack Write
R 0xa08 64 - S por_hni_aux_ctl
RESET 0x0 0x11
DESC Functions as the auxiliary control register for HN-I.
F 0 1 cg_disable
DESC Disables HN-I architectural clock gates
F 4 1 side_reader_for_phymem_present
DESC Enables side reader in physical memory range
R 0xc00 64 - S por_hni_sam_addrregion0_cfg
RESET 0x600000000000003f 0x7c0000000000003f
DESC Configures Address Region 0.
F 0 6 order_region_size
DESC <n>; used to calculate Order Region 0 size within Address Region 0 (2^n*4KB)
F 58 1 physical_mem_en
DESC Address Region 0 follows Arm Architecture Reference Manual physical memory ordering guarantees
F 59 1 ser_all_wr
DESC Used to serialize all writes within Address Region 0
F 60 1 ser_devne_wr
DESC Used to serialize Device-nGnRnE writes within Address Region 0
F 61 1 pos_early_rdack_en
DESC Enables sending early read receipts from HN-I in Address Region 0; used to improve ordered read performance
F 62 1 pos_early_wr_comp_en
DESC Enables early write acknowledgment in Address Region 0; used to improve write performance
R 0xc08 64 - S por_hni_sam_addrregion1_cfg
RESET 0x6000000000000000 0xfcfffffffff0fc3f
DESC Configures Address Region 1.
F 0 6 order_region_size
DESC <n>; used to calculate Order Region 1 size within Address Region 1 (2^n*4KB)
F 10 6 addr_region_size
DESC <n>; used to calculate Address Region 1 size (2^n*4KB) CONSTRAINT: <n> must be configured so that the Address Region 1 size is less than or equal to 2^(address width).
F 20 36 base_addr
DESC Address Region 1 base address; [address width-1:12] CONSTRAINT: Must be an integer multiple of the Address Region 1 size.
F 58 1 physical_mem_en
DESC Address Region 1 follows Arm Architecture Reference Manual physical memory ordering guarantees
F 59 1 ser_all_wr
DESC Used to serialize all writes within Address Region 1
F 60 1 ser_devne_wr
DESC Used to serialize Device-nGnRnE writes within Address Region 1
F 61 1 pos_early_rdack_en
DESC Enables sending early read receipts from HN-I in Address Region 1; used to improve ordered read performance
F 62 1 pos_early_wr_comp_en
DESC Enables early write acknowledgment in Address Region 1; used to improve write performance
F 63 1 valid
DESC Address Region 1 fields are programmed and valid
R 0xc10 64 - S por_hni_sam_addrregion2_cfg
RESET 0x6000000000000000 0xfcfffffffff0fc3f
DESC Configures Address Region 2.
F 0 6 order_region_size
DESC <n>; used to calculate Order Region 2 size within Address Region 2 (2^n*4KB)
F 10 6 addr_region_size
DESC <n>; used to calculate Address Region 2 size (2^n*4KB) CONSTRAINT: <n> must be configured so that the Address Region 2 size is less than or equal to 2^(address width).
F 20 36 base_addr
DESC Address Region 2 base address; [address width-1:12] CONSTRAINT: Must be an integer multiple of the Address Region 2 size
F 58 1 physical_mem_en
DESC Address Region 2 follows Arm Architecture Reference Manual physical memory ordering guarantees
F 59 1 ser_all_wr
DESC Used to serialize all writes within Address Region 2
F 60 1 ser_devne_wr
DESC Used to serialize Device-nGnRnE writes within Address Region 2
F 61 1 pos_early_rdack_en
DESC Enables sending early read receipts from HN-I in Address Region 2; used to improve ordered read performance
F 62 1 pos_early_wr_comp_en
DESC Enables early write acknowledgment in Address Region 2; used to improve write performance
F 63 1 valid
DESC Address Region 2 fields are programmed and valid
R 0xc18 64 - S por_hni_sam_addrregion3_cfg
RESET 0x6000000000000000 0xfcfffffffff0fc3f
DESC Configures Address Region 3.
F 0 6 order_region_size
DESC <n>; used to calculate Order Region 3 size within Address Region 3 (2^n*4KB)
F 10 6 addr_region_size
DESC <n>; used to calculate Address Region 3 size (2^n*4KB) CONSTRAINT: <n> must be configured so that the Address Region 3 size is less than or equal to 2^(address width).
F 20 36 base_addr
DESC Address Region 3 base address; [address width-1:12] CONSTRAINT: Must be an integer multiple of the Address Region 3 size
F 58 1 physical_mem_en
DESC Address Region 3 follows Arm Architecture Reference Manual physical memory ordering guarantees
F 59 1 ser_all_wr
DESC Used to serialize all writes within Address Region 3
F 60 1 ser_devne_wr
DESC Used to serialize Device-nGnRnE writes within Address Region 3
F 61 1 pos_early_rdack_en
DESC Enables sending early read receipts from HN-I in Address Region 3; used to improve ordered read performance
F 62 1 pos_early_wr_comp_en
DESC Enables early write acknowledgment in Address Region 3; used to improve write performance
F 63 1 valid
DESC Fields of Address Region 3 are programmed and valid
R 0x2000 64 - - por_hni_pmu_event_sel
RESET 0x0 0x3f3f3f3f
DESC Specifies the PMU event to be counted.
F 0 6 pmu_event0_id
DESC HN-I PMU Event 0 select 6'h00: No event 6'h20: RRT read occupancy count overflow 6'h21: RRT write occupancy count overflow 6'h22: RDT read occupancy count overflow 6'h23: RDT write occupancy count overflow 6'h24: WDB occupancy count overflow 6'h25: RRT read allocation 6'h26: RRT write allocation 6'h27: RDT read allocation 6'h28: RDT write allocation 6'h29: WDB allocation 6'h2A: RETRYACK TXRSP flit sent 6'h2B: ARVALID set without ARREADY event 6'h2C: ARREADY set without ARVALID event 6'h2D: AWVALID set without AWREADY event 6'h2E: AWREADY set without AWVALID event 6'h2F: WVALID set without WREADY event 6'h30: TXDAT stall (TXDAT valid but no link credit available) 6'h31: Non-PCIe serialization event 6'h32: PCIe serialization event NOTE: All other encodings are reserved.
F 8 6 pmu_event1_id
DESC HN-I PMU Event 1 select; see pmu_event0_id for encodings
F 16 6 pmu_event2_id
DESC HN-I PMU Event 2 select; see pmu_event0_id for encodings
F 24 6 pmu_event3_id
DESC HN-I PMU Event 3 select; see pmu_event0_id for encodings
R 0x3000 64 RO S por_hni_errfr
RESET 0xa5 0x7cff
DESC Functions as the error feature register.
F 0 2 ED
DESC Error detection
F 2 2 DE
DESC Deferred errors
F 4 2 UI
DESC Uncorrected error interrupt
F 6 2 FI
DESC Fault handling interrupt
F 10 2 CFI
DESC Corrected error interrupt
F 12 3 CEC
DESC Standard corrected error count mechanism 3'b000: Does not implement standardized error counter model
R 0x3008 64 - S por_hni_errctlr
RESET 0x0 0x10f
DESC Functions as the error control register. Controls whether specific error-handling interrupts and error detection/deferment are enabled.
F 0 1 ED
DESC Enables error detection as specified in por_hni_errfr.ED
F 1 1 DE
DESC Enables error deferment as specified in por_hni_errfr.DE
F 2 1 UI
DESC Enables uncorrected error interrupt as specified in por_hni_errfr.UI
F 3 1 FI
DESC Enables fault handling interrupt for all detected deferred errors as specified in por_hni_errfr.FI
F 8 1 CFI
DESC Enables corrected error interrupt as specified in por_hni_errfr.CFI
R 0x3010 64 - S por_hni_errstatus
RESET 0x0 0xed800000
DESC Functions as the error status register. AV and MV bits must be cleared in the same cycle, otherwise the error record does not have a consistent view.
F 23 1 DE
DESC Deferred errors; writes to this bit are ignored if the OF bit is set to 1, and is not cleared to 0 in the same write; write a 1 to clear 1'b1: At least one error is not corrected and is deferred 1'b0: No errors deferred
F 24 1 CE
DESC Corrected errors; writes to this bit are ignored if the OF bit is set to 1, and is not cleared to 0 in the same write; write a 1 to clear 1'b1: At least one transient corrected error recorded 1'b0: No corrected errors recorded
F 26 1 MV
DESC por_hni_errmisc valid; writes to this bit are ignored if any of the UE, DE, or CE bits are set to 1, and the highest priority are not cleared to 0 in the same write; write a 1 to clear 1'b1: Miscellaneous registers are valid 1'b0: Miscellaneous registers are not valid
F 27 1 OF
DESC Overflow; asserted when multiple errors of the highest priority type are detected; write a 1 to clear 1'b1: More than one error detected 1'b0: Only one error of the highest priority type detected as described by UE/DE/CE fields
F 29 1 UE
DESC Uncorrected errors; writes to this bit are ignored if the OF bit is set to 1, and is not cleared to 0 in the same write; write a 1 to clear 1'b1: At least one error detected that is not corrected and is not deferred to a slave 1'b0: No uncorrected errors detected
F 30 1 V
DESC Register valid; writes to this bit are ignored if any of the UE, DE, or CE bits are set to 1, and are not cleared to 0 in the same write; write a 1 to clear 1'b1: At least one error recorded; register is valid 1'b0: No errors recorded
F 31 1 AV
DESC Address register valid; writes to this bit are ignored if any of the UE, DE, or CE bits are set to 1, and the highest priority are not cleared to 0 in the same write; write a 1 to clear 1'b1: Address is valid; por_hni_erraddr contains a physical address for that recorded error 1'b0: Address is not valid
R 0x3018 64 - S por_hni_erraddr
RESET 0x0 0x8000ffffffffffff
DESC Contains the error record address.
F 0 48 ADDR
DESC Transaction address
F 63 1 NS
DESC Security status of transaction 1'b1: Non-secure transaction 1'b0: Secure transaction CONSTRAINT: por_hni_erraddr.NS is redundant. Since it is writable, it cannot be used for logic qualification.
R 0x3020 64 - S por_hni_errmisc
RESET 0x0 0x1f300007f3f7fff
DESC Functions as the miscellaneous error register. Contains miscellaneous information about deferred/uncorrected errors.
F 0 4 ERRSRC
DESC Error source 4'b0000: Coherent read 4'b0001: Coherent write 4'b0010: CleanUnique/MakeUnique 4'b0011: Atomic 4'b0100: Illegal configuration read 4'b0101: Illegal configuration write 4'b0110: Configuration write data partial byte enable error 4'b0111: Configuration write data parity error or poison error 4'b1000: BRESP error 4'b1001: Poison error 4'b1010: BRESP error and poison error NOTE: For configuration write data, BRESP, and poison errors, por_hni_errmisc.SRCID is the only valid field. For other error types, all fields are valid.
F 4 11 SRCID
DESC Error source ID
F 16 6 OPCODE
DESC Error opcode
F 24 4 MEMATTR
DESC Error memory attributes
F 28 3 SIZE
DESC Error transaction size
F 48 2 ORDER
DESC Error order
F 52 5 LPID
DESC Error logic processor ID
R 0x3100 64 RO - por_hni_errfr_NS
RESET 0xa5 0x7cff
DESC Functions as the non-secure error feature register.
F 0 2 ED
DESC Error detection
F 2 2 DE
DESC Deferred errors
F 4 2 UI
DESC Uncorrected error interrupt
F 6 2 FI
DESC Fault handling interrupt
F 10 2 CFI
DESC Corrected error interrupt
F 12 3 CEC
DESC Standard corrected error count mechanism 3'b000: Does not implement standardized error counter model
R 0x3108 64 - - por_hni_errctlr_NS
RESET 0x0 0x10f
DESC Functions as the non-secure error control register. Controls whether specific error-handling interrupts and error detection/deferment are enabled.
F 0 1 ED
DESC Enables error detection as specified in por_hni_errfr_NS.ED
F 1 1 DE
DESC Enables error deferment as specified in por_hni_errfr_NS.DE
F 2 1 UI
DESC Enables uncorrected error interrupt as specified in por_hni_errfr_NS.UI
F 3 1 FI
DESC Enables fault handling interrupt for all detected deferred errors as specified in por_hni_errfr_NS.FI
F 8 1 CFI
DESC Enables corrected error interrupt as specified in por_hni_errfr_NS.CFI
R 0x3110 64 - - por_hni_errstatus_NS
RESET 0x0 0xed800000
DESC Functions as the non-secure error status register.
F 23 1 DE
DESC Deferred errors; writes to this bit are ignored if the OF bit is set to 1, and is not cleared to 0 in the same write; write a 1 to clear 1'b1: At least one error is not corrected and is deferred 1'b0: No errors deferred
F 24 1 CE
DESC Corrected errors; writes to this bit are ignored if the OF bit is set to 1, and is not cleared to 0 in the same write; write a 1 to clear 1'b1: At least one transient corrected error recorded 1'b0: No corrected errors recorded
F 26 1 MV
DESC por_hni_errmisc_NS valid; writes to this bit are ignored if any of the UE, DE, or CE bits are set to 1, and the highest priority are not cleared to 0 in the same write; write a 1 to clear 1'b1: Miscellaneous registers are valid 1'b0: Miscellaneous registers are not valid
F 27 1 OF
DESC Overflow; asserted when multiple errors of the highest priority type are detected; write a 1 to clear 1'b1: More than one error detected 1'b0: Only one error of the highest priority type detected as described by UE/DE/CE fields
F 29 1 UE
DESC Uncorrected errors; writes to this bit are ignored if the OF bit is set to 1, and is not cleared to 0 in the same write; write a 1 to clear 1'b1: At least one error detected that is not corrected and is not deferred to a slave 1'b0: No uncorrected errors detected
F 30 1 V
DESC Register valid; writes to this bit are ignored if any of the UE, DE, or CE bits are set to 1, and are not cleared to 0 in the same write; write a 1 to clear 1'b1: At least one error recorded; register is valid 1'b0: No errors recorded
F 31 1 AV
DESC Address register valid; writes to this bit are ignored if any of the UE, DE, or CE bits are set to 1, and the highest priority are not cleared to 0 in the same write; write a 1 to clear 1'b1: Address is valid; por_hni_erraddr_NS contains a physical address for that recorded error 1'b0: Address is not valid
R 0x3118 64 - - por_hni_erraddr_NS
RESET 0x0 0x8000ffffffffffff
DESC Contains the non-secure error record address.
F 0 48 ADDR
DESC Transaction address
F 63 1 NS
DESC Security status of transaction 1'b1: Non-secure transaction 1'b0: Secure transaction CONSTRAINT: por_hni_erraddr_NS.NS is redundant. Since it is writable, it cannot be used for logic qualification.
R 0x3120 64 - - por_hni_errmisc_NS
RESET 0x0 0x1f300007f3f7fff
DESC Functions as the non-secure miscellaneous error register. Contains miscellaneous information about deferred/uncorrected errors.
F 0 4 ERRSRC
DESC Error source 4'b0000: Coherent read 4'b0001: Coherent write 4'b0010: CleanUnique/MakeUnique 4'b0011: Atomic 4'b0100: Illegal configuration read 4'b0101: Illegal configuration write 4'b0110: Configuration write data partial byte enable error 4'b0111: Configuration write data parity error or poison error 4'b1000: BRESP error 4'b1001: Poison error 4'b1010: BRESP error and poison error NOTE: For configuration write data, BRESP, and poison errors, por_hni_errmisc_NS.SRCID is the only valid field. For other error types, all fields are valid.
F 4 11 SRCID
DESC Error source ID
F 16 6 OPCODE
DESC Error opcode
F 24 4 MEMATTR
DESC Error memory attributes
F 28 3 SIZE
DESC Error transaction size
F 48 2 ORDER
DESC Error order
F 52 5 LPID
DESC Error logic processor ID
ENDGROUP
